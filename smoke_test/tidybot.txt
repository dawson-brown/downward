INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/translate/translate.py benchmarks-test/tidybot-sat11-strips/domain.pddl benchmarks-test/tidybot-sat11-strips/p14.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.015s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.030s CPU, 0.026s wall-clock]
Preparing model... [0.010s CPU, 0.007s wall-clock]
Generated 400 rules.
Computing model... [0.920s CPU, 0.926s wall-clock]
45496 relevant atoms
39738 auxiliary atoms
85234 final queue length
235974 total queue pushes
Completing instantiation... [3.430s CPU, 3.436s wall-clock]
Instantiating: [4.420s CPU, 4.429s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.080s CPU, 0.083s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
467 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.090s CPU, 0.089s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.130s CPU, 0.129s wall-clock]
Translating task: [3.520s CPU, 3.526s wall-clock]
124757 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.700s CPU, 1.704s wall-clock]
Reordering and filtering variables...
469 of 469 variables necessary.
1 of 3 mutex groups necessary.
44826 of 44826 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.920s CPU, 0.909s wall-clock]
Translator variables: 469
Translator derived variables: 0
Translator facts: 941
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 44826
Translator axioms: 0
Translator task size: 547428
Translator peak memory: 322076 KB
Writing output... [0.790s CPU, 0.782s wall-clock]
Done! [11.590s CPU, 11.587s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(cost_type=one))' --search 'eager(alt( [ single(hff), lwmb(hff, random_seed=70) ] ), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00192461s, 11476 KB] reading input...
[t=0.334453s, 32052 KB] done reading input!
[t=0.374301s, 49552 KB] Simplifying 274983 unary operators... done! [273831 unary operators]
[t=3.29226s, 73984 KB] time to simplify: 2.91806s
[t=3.29931s, 73984 KB] Initializing additive heuristic...
[t=3.29944s, 73984 KB] Initializing FF heuristic...
[t=3.29962s, 73984 KB] Building successor generator...done!
[t=3.33489s, 73984 KB] peak memory difference for successor generator creation: 0 KB
[t=3.33499s, 73984 KB] time for successor generation creation: 0.0347146s
[t=3.33548s, 73984 KB] Variables: 469
[t=3.33552s, 73984 KB] FactPairs: 941
[t=3.33557s, 73984 KB] Bytes per state: 60
[t=3.33565s, 73984 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=3.34054s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 32
[t=3.34063s, 73984 KB] g=0, 1 evaluated, 0 expanded
[t=3.34068s, 73984 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 32
[t=3.34072s, 73984 KB] pruning method: none
[t=3.34076s, 73984 KB] Start Timestep: 1699631911955 millisecond(s).
[t=3.35018s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=3.35029s, 73984 KB] g=1, 3 evaluated, 1 expanded
[t=3.3733s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=3.37339s, 73984 KB] g=2, 7 evaluated, 2 expanded
[t=3.49949s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=3.49964s, 73984 KB] g=5, 29 evaluated, 18 expanded
[t=3.55983s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=3.55993s, 73984 KB] g=5, 38 evaluated, 24 expanded
[t=3.62959s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=3.62969s, 73984 KB] g=6, 51 evaluated, 31 expanded
[t=3.79755s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=3.79765s, 73984 KB] g=8, 83 evaluated, 61 expanded
[t=3.82865s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=3.82875s, 73984 KB] g=9, 89 evaluated, 63 expanded
[t=3.98475s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=3.98488s, 73984 KB] g=13, 121 evaluated, 80 expanded
[t=4.12083s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=4.12093s, 73984 KB] g=16, 150 evaluated, 98 expanded
[t=4.13374s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=4.13391s, 73984 KB] g=17, 153 evaluated, 99 expanded
[t=4.14456s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=4.14465s, 73984 KB] g=18, 156 evaluated, 100 expanded
[t=4.56821s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=4.56831s, 73984 KB] g=24, 245 evaluated, 160 expanded
[t=6.92887s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=6.92898s, 73984 KB] g=31, 735 evaluated, 452 expanded
[t=7.54465s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=7.54475s, 73984 KB] g=35, 863 evaluated, 527 expanded
[t=7.5539s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=7.55402s, 73984 KB] g=36, 865 evaluated, 528 expanded
[t=7.58155s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=7.58164s, 73984 KB] g=37, 872 evaluated, 530 expanded
[t=8.54349s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=8.54365s, 73984 KB] g=47, 1065 evaluated, 634 expanded
[t=8.56474s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=8.56485s, 73984 KB] g=48, 1068 evaluated, 635 expanded
[t=8.60171s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 7
[t=8.60181s, 73984 KB] g=49, 1074 evaluated, 637 expanded
[t=8.62603s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 6
[t=8.62613s, 73984 KB] g=50, 1079 evaluated, 639 expanded
[t=8.66411s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 5
[t=8.66421s, 73984 KB] g=51, 1087 evaluated, 641 expanded
[t=8.68846s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=8.68856s, 73984 KB] g=52, 1092 evaluated, 643 expanded
[t=8.70171s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 3
[t=8.70181s, 73984 KB] g=53, 1095 evaluated, 645 expanded
[t=8.72339s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=8.72352s, 73984 KB] g=54, 1101 evaluated, 647 expanded
[t=8.75345s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=8.75357s, 73984 KB] g=55, 1109 evaluated, 649 expanded
[t=8.76983s, 73984 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=8.76991s, 73984 KB] g=56, 1114 evaluated, 651 expanded
[t=8.77966s, 73984 KB] Solution found!
[t=8.77979s, 73984 KB] Actual search time: 5.43903s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-right pr2 x2 x3 y0 (1)
finish-object object0 x2 y2 (1)
base-right pr2 x3 x4 y0 (1)
base-right pr2 x4 x5 y0 (1)
base-down pr2 x5 y0 y1 (1)
base-down pr2 x5 y1 y2 (1)
base-right pr2 x5 x6 y2 (1)
base-down pr2 x6 y2 y3 (1)
park pr2 (1)
gripper-up pr2 x6 y3 xrel0 x6 yrel0 yrel-1 y3 y2 (1)
get-up pr2 x6 y3 xrel0 x6 yrel-1 y2 object3 y1 (1)
gripper-right pr2 x6 y3 xrel0 xrel1 x6 x7 yrel-1 y2 (1)
gripper-down pr2 x6 y3 xrel1 x7 yrel-1 yrel0 y2 y3 (1)
put-down pr2 x6 y3 xrel1 x7 yrel0 y3 object3 y4 (1)
finish-object object3 x7 y4 (1)
gripper-left pr2 x6 y3 xrel1 xrel0 x7 x6 yrel0 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x6 x5 y3 (1)
base-down pr2 x5 y3 y4 (1)
base-down pr2 x5 y4 y5 (1)
park pr2 (1)
gripper-down pr2 x5 y5 xrel0 x5 yrel0 yrel1 y5 y6 (1)
get-down pr2 x5 y5 xrel0 x5 yrel1 y6 object1 y7 (1)
gripper-up pr2 x5 y5 xrel0 x5 yrel1 yrel0 y6 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x5 y5 y4 (1)
base-right pr2 x5 x6 y4 (1)
base-up pr2 x6 y4 y3 (1)
park pr2 (1)
gripper-up pr2 x6 y3 xrel0 x6 yrel0 yrel-1 y3 y2 (1)
gripper-right pr2 x6 y3 xrel0 xrel1 x6 x7 yrel-1 y2 (1)
put-up pr2 x6 y3 xrel1 x7 yrel-1 y2 object1 y1 (1)
gripper-left pr2 x6 y3 xrel1 xrel0 x7 x6 yrel-1 y2 (1)
finish-object object1 x7 y1 (1)
gripper-down pr2 x6 y3 xrel0 x6 yrel-1 yrel0 y2 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x6 x5 y3 (1)
base-down pr2 x5 y3 y4 (1)
base-down pr2 x5 y4 y5 (1)
base-left pr2 x5 x4 y5 (1)
base-left pr2 x4 x3 y5 (1)
base-left pr2 x3 x2 y5 (1)
base-left pr2 x2 x1 y5 (1)
base-left pr2 x1 x0 y5 (1)
base-up pr2 x0 y5 y4 (1)
base-up pr2 x0 y4 y3 (1)
base-up pr2 x0 y3 y2 (1)
base-right pr2 x0 x1 y2 (1)
base-right pr2 x1 x2 y2 (1)
park pr2 (1)
get-down pr2 x2 y2 xrel0 x2 yrel0 y2 object2 y3 (1)
put-right pr2 x2 y2 xrel0 x2 yrel0 y2 object2 x3 (1)
finish-object object2 x3 y2 (1)
[t=8.77986s, 73984 KB] Plan length: 56 step(s).
[t=8.77986s, 73984 KB] Plan cost: 56
[t=8.77986s, 73984 KB] Timestamp: 1699631917396 millisecond(s).
[t=8.77986s, 73984 KB] Expanded 653 state(s).
[t=8.77986s, 73984 KB] Reopened 0 state(s).
[t=8.77986s, 73984 KB] Evaluated 1116 state(s).
[t=8.77986s, 73984 KB] Evaluations: 1116
[t=8.77986s, 73984 KB] Generated 2035 state(s).
[t=8.77986s, 73984 KB] Dead ends: 0 state(s).
[t=8.77986s, 73984 KB] Number of registered states: 1116
[t=8.77986s, 73984 KB] Int hash set load factor: 1116/2048 = 0.544922
[t=8.77986s, 73984 KB] Int hash set resizes: 11
[t=8.77986s, 73984 KB] Search time: 5.44421s
[t=8.77986s, 73984 KB] Total time: 8.77986s
Solution found.
Peak memory: 73984 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 20.62s
