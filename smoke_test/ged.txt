INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/translate/translate.py benchmarks-test/ged-sat14-strips/domain.pddl benchmarks-test/ged-sat14-strips/d-10-3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.010s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Duplicate arguments: Adding equality conditions.
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 129 rules.
Computing model... [0.080s CPU, 0.084s wall-clock]
6489 relevant atoms
6462 auxiliary atoms
12951 final queue length
28100 total queue pushes
Completing instantiation... [0.180s CPU, 0.178s wall-clock]
Instantiating: [0.260s CPU, 0.269s wall-clock]
Computing fact groups...
Finding invariants...
36 initial candidates
Finding invariants: [0.110s CPU, 0.112s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.140s CPU, 0.125s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.009s wall-clock]
Translating task: [0.230s CPU, 0.232s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
37 propositions removed
Detecting unreachable propositions: [0.140s CPU, 0.141s wall-clock]
Reordering and filtering variables...
40 of 40 variables necessary.
44 of 63 mutex groups necessary.
5418 of 5418 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.039s wall-clock]
Translator variables: 40
Translator derived variables: 0
Translator facts: 857
Translator goal facts: 36
Translator mutex groups: 44
Translator total mutex groups size: 1669
Translator operators: 5418
Translator axioms: 0
Translator task size: 42886
Translator peak memory: 54364 KB
Writing output... [0.060s CPU, 0.065s wall-clock]
Done! [0.890s CPU, 0.888s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(cost_type=one))' --search 'eager(lwm_partition(hff, inter_biased_depth(tau=20, ignore_size=true), intra_biased(hff, ignore_size=true, random_seed=3)), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00523684s, 11852 KB] reading input...
[t=0.0296406s, 14868 KB] done reading input!
[t=0.0333739s, 16256 KB] Simplifying 18000 unary operators... done! [16470 unary operators]
[t=0.0492971s, 17488 KB] time to simplify: 0.0163608s
[t=0.0500882s, 17488 KB] Initializing additive heuristic...
[t=0.0501187s, 17488 KB] Initializing FF heuristic...
[t=0.0502209s, 17488 KB] Building successor generator...done!
[t=0.0518298s, 17488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0518505s, 17488 KB] time for successor generation creation: 0.00154318s
[t=0.0518823s, 17488 KB] Variables: 40
[t=0.0519028s, 17488 KB] FactPairs: 857
[t=0.0519222s, 17488 KB] Bytes per state: 20
[t=0.051962s, 17488 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0521116s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 61
[t=0.0521357s, 17488 KB] g=0, 1 evaluated, 0 expanded
[t=0.0521752s, 17488 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 61
[t=0.0521974s, 17488 KB] pruning method: none
[t=0.0522171s, 17488 KB] Start Timestep: 1698015035316 millisecond(s).
[t=0.0525375s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 60
[t=0.0525626s, 17488 KB] g=1, 4 evaluated, 1 expanded
[t=0.0540875s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 55
[t=0.0541289s, 17488 KB] g=1, 20 evaluated, 1 expanded
[t=0.0544232s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 52
[t=0.0544477s, 17488 KB] g=1, 22 evaluated, 1 expanded
[t=0.0567757s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 50
[t=0.0568037s, 17488 KB] g=2, 39 evaluated, 2 expanded
[t=0.0569535s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 49
[t=0.0569771s, 17488 KB] g=3, 40 evaluated, 3 expanded
[t=0.0706057s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 48
[t=0.0706502s, 17488 KB] g=9, 149 evaluated, 44 expanded
[t=0.0708038s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 47
[t=0.0708279s, 17488 KB] g=10, 150 evaluated, 45 expanded
[t=0.0887742s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 46
[t=0.0888422s, 17488 KB] g=16, 289 evaluated, 81 expanded
[t=0.0889964s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 45
[t=0.0890213s, 17488 KB] g=17, 290 evaluated, 82 expanded
[t=0.10195s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 44
[t=0.101987s, 17488 KB] g=23, 395 evaluated, 118 expanded
[t=0.102139s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 43
[t=0.102163s, 17488 KB] g=24, 396 evaluated, 119 expanded
[t=0.115097s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 41
[t=0.11515s, 17488 KB] g=30, 500 evaluated, 154 expanded
[t=0.115303s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 40
[t=0.115327s, 17488 KB] g=31, 501 evaluated, 155 expanded
[t=0.134114s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 39
[t=0.134195s, 17488 KB] g=38, 645 evaluated, 196 expanded
[t=0.152312s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 38
[t=0.152373s, 17488 KB] g=45, 787 evaluated, 236 expanded
[t=0.165132s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 37
[t=0.165198s, 17488 KB] g=52, 888 evaluated, 269 expanded
[t=0.178923s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 36
[t=0.178972s, 17488 KB] g=59, 998 evaluated, 311 expanded
[t=0.187373s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 35
[t=0.187427s, 17488 KB] g=64, 1067 evaluated, 320 expanded
[t=0.188912s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 34
[t=0.188939s, 17488 KB] g=66, 1078 evaluated, 322 expanded
[t=0.200965s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=0.200997s, 17488 KB] g=72, 1175 evaluated, 350 expanded
[t=0.201149s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.201173s, 17488 KB] g=73, 1176 evaluated, 351 expanded
[t=0.217207s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=0.21725s, 17488 KB] g=79, 1312 evaluated, 391 expanded
[t=0.218419s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 28
[t=0.218453s, 17488 KB] g=81, 1321 evaluated, 393 expanded
[t=0.248476s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=0.248531s, 17488 KB] g=87, 1560 evaluated, 446 expanded
[t=0.280292s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=0.280364s, 17488 KB] g=96, 1804 evaluated, 501 expanded
[t=0.291905s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=0.291968s, 17488 KB] g=102, 1898 evaluated, 524 expanded
[t=0.292121s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=0.292145s, 17488 KB] g=103, 1899 evaluated, 525 expanded
[t=0.31162s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=0.31168s, 17488 KB] g=109, 2059 evaluated, 553 expanded
[t=0.340033s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=0.340107s, 17488 KB] g=119, 2281 evaluated, 592 expanded
[t=0.351833s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=0.351905s, 17488 KB] g=125, 2376 evaluated, 619 expanded
[t=0.35206s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=0.352084s, 17488 KB] g=126, 2377 evaluated, 620 expanded
[t=0.376841s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=0.376926s, 17488 KB] g=132, 2560 evaluated, 664 expanded
[t=0.377082s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=0.377106s, 17488 KB] g=133, 2561 evaluated, 665 expanded
[t=0.408643s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=0.408733s, 17488 KB] g=139, 2807 evaluated, 716 expanded
[t=0.422111s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=0.422197s, 17488 KB] g=141, 2905 evaluated, 730 expanded
[t=0.438428s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=0.438512s, 17488 KB] g=150, 3020 evaluated, 762 expanded
[t=0.441382s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=0.441414s, 17488 KB] g=151, 3041 evaluated, 763 expanded
[t=0.441833s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=0.441857s, 17488 KB] g=155, 3045 evaluated, 767 expanded
[t=0.603717s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 10
[t=0.603803s, 17488 KB] g=158, 4205 evaluated, 821 expanded
[t=2.86956s, 18964 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 5
[t=2.86969s, 18964 KB] g=190, 22248 evaluated, 1705 expanded
[t=2.87103s, 18964 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=2.8711s, 18964 KB] g=191, 22258 evaluated, 1708 expanded
[t=2.8712s, 18964 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=2.87123s, 18964 KB] g=192, 22259 evaluated, 1709 expanded
[t=2.87132s, 18964 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=2.87137s, 18964 KB] g=193, 22260 evaluated, 1710 expanded
[t=2.87143s, 18964 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=2.87146s, 18964 KB] g=194, 22261 evaluated, 1711 expanded
[t=2.87148s, 18964 KB] Solution found!
[t=2.87151s, 18964 KB] Actual search time: 2.81928s
begin-cut sub2 sub5 (0)
end-cut-1 sub5 g36 (0)
end-cut-2 sub2 g36 (0)
begin-transpose-splice sub4 sub9 (2)
end-splice-1 sub5 sub4 (0)
end-splice-2 sub5 sub9 (0)
reset-1 sub2 (0)
begin-cut sub2 g36 (0)
end-cut-1 g36 sub6 (0)
end-cut-2 sub2 sub6 (0)
begin-transpose-splice sub16 sub4 (2)
end-splice-1 g36 sub16 (0)
end-splice-2 g36 sub4 (0)
reset-1 sub2 (0)
begin-cut sub11 sub15 (0)
end-cut-1 sub15 sub14 (0)
end-cut-2 sub11 sub14 (0)
begin-transverse-splice sub4 sub5 (2)
end-inverse-splice-1a sub15 sub4 (0)
end-inverse-splice-2 sub15 sub5 (0)
reset-1 sub11 (0)
begin-cut sub8 sub2 (0)
end-cut-1 sub2 sub6 (0)
end-cut-2 sub8 sub6 (0)
begin-transpose-splice sub15 sub5 (2)
end-splice-1 sub2 sub15 (0)
end-splice-2 sub2 sub5 (0)
reset-1 sub8 (0)
begin-cut sub8 sub6 (0)
end-cut-1 sub6 sub16 (0)
end-cut-2 sub8 sub16 (0)
begin-transverse-splice sub13 sub3 (2)
end-inverse-splice-1a sub6 sub13 (0)
end-inverse-splice-2 sub6 sub3 (0)
reset-1 sub8 (0)
begin-cut sub12 sub13 (0)
end-cut-1 sub13 sub6 (0)
end-cut-2 sub12 sub6 (0)
begin-transverse-splice sub11 sub14 (2)
end-inverse-splice-1a sub13 sub11 (0)
end-inverse-splice-2 sub13 sub14 (0)
reset-1 sub12 (0)
begin-cut sub7 sub8 (0)
end-cut-1 sub8 sub16 (0)
end-cut-2 sub7 sub16 (0)
begin-transverse-splice sub1 sub10 (2)
end-inverse-splice-1a sub8 sub1 (0)
end-inverse-splice-2 sub8 sub10 (0)
reset-1 sub7 (0)
begin-cut sub8 sub10 (0)
end-cut-1 sub10 sub7 (0)
end-cut-2 sub8 sub7 (0)
begin-transpose-splice sub13 sub14 (2)
end-splice-1 sub10 sub13 (0)
end-splice-2 sub10 sub14 (0)
reset-1 sub8 (0)
begin-cut sub6 sub3 (0)
end-cut-1 sub3 sub11 (0)
end-cut-2 sub6 sub11 (0)
begin-transpose-splice sub16 g36 (2)
end-splice-1 sub3 sub16 (0)
end-splice-2 sub3 g36 (0)
reset-1 sub6 (0)
begin-cut sub7 sub16 (0)
end-cut-1 sub16 sub3 (0)
end-cut-2 sub7 sub3 (0)
begin-transverse-splice g40 sub12 (2)
end-inverse-splice-1a sub16 g40 (0)
end-inverse-splice-2 sub16 sub12 (0)
reset-1 sub7 (0)
begin-cut sub12 sub6 (0)
end-cut-1 sub6 sub11 (0)
end-cut-2 sub12 sub11 (0)
begin-transpose-splice sub13 sub10 (2)
end-splice-1 sub6 sub13 (0)
end-splice-2 sub6 sub10 (0)
reset-1 sub12 (0)
invert-single-gene-a sub9 (1)
begin-cut sub7 sub3 (0)
end-cut-1 sub3 g36 (0)
end-cut-2 sub7 g36 (0)
begin-transpose-splice sub16 sub12 (2)
end-splice-1 sub3 sub16 (0)
end-splice-2 sub3 sub12 (0)
reset-1 sub7 (0)
invert-single-gene-a sub10 (1)
begin-cut sub7 g36 (0)
end-cut-1 g36 sub4 (0)
end-cut-2 sub7 sub4 (0)
begin-transpose-splice sub3 sub12 (2)
end-splice-1 g36 sub3 (0)
end-splice-2 g36 sub12 (0)
reset-1 sub7 (0)
begin-cut sub10 sub14 (0)
end-cut-1 sub14 sub1 (0)
end-cut-2 sub10 sub1 (0)
begin-transverse-splice sub15 sub2 (2)
end-inverse-splice-1a sub14 sub15 (0)
end-inverse-splice-2 sub14 sub2 (0)
reset-1 sub10 (0)
begin-cut sub8 sub7 (0)
end-cut-1 sub7 sub4 (0)
end-cut-2 sub8 sub4 (0)
begin-transpose-splice sub15 sub14 (2)
end-splice-1 sub7 sub15 (0)
end-splice-2 sub7 sub14 (0)
reset-1 sub8 (0)
invert-single-gene-a sub1 (1)
begin-cut sub8 sub4 (0)
end-cut-1 sub4 sub15 (0)
end-cut-2 sub8 sub15 (0)
begin-transpose-splice g36 sub12 (2)
end-splice-1 sub4 g36 (0)
end-splice-2 sub4 sub12 (0)
reset-1 sub8 (0)
invert-single-gene-a sub11 (1)
begin-cut g36 sub4 (0)
end-cut-1 sub4 sub12 (0)
end-cut-2 g36 sub12 (0)
begin-transpose-splice sub1 sub8 (2)
end-splice-1 sub4 sub1 (0)
end-splice-2 sub4 sub8 (0)
reset-1 g36 (0)
begin-cut sub4 sub8 (0)
end-cut-1 sub8 sub15 (0)
end-cut-2 sub4 sub15 (0)
begin-transpose-splice sub6 sub10 (2)
end-splice-1 sub8 sub6 (0)
end-splice-2 sub8 sub10 (0)
reset-1 sub4 (0)
begin-cut sub10 sub1 (0)
end-cut-1 sub1 sub4 (0)
end-cut-2 sub10 sub4 (0)
begin-transpose-splice sub9 g40 (2)
end-splice-1 sub1 sub9 (0)
end-splice-2 sub1 g40 (0)
reset-1 sub10 (0)
invert-single-gene-a sub12 (1)
begin-cut sub10 sub4 (0)
end-cut-1 sub4 sub15 (0)
end-cut-2 sub10 sub15 (0)
begin-transpose-splice g36 sub12 (2)
end-splice-1 sub4 g36 (0)
end-splice-2 sub4 sub12 (0)
reset-1 sub10 (0)
begin-cut sub10 sub15 (0)
continue-cut sub15 sub7 (0)
end-cut-1 sub7 sub14 (0)
end-cut-2 sub10 sub14 (0)
begin-transpose-splice sub6 sub8 (2)
continue-splice-1 sub15 sub7 (0)
continue-splice-2 sub15 sub6 (0)
end-splice-1 sub7 sub15 (0)
end-splice-2 sub7 sub8 (0)
reset-1 sub10 (0)
begin-cut sub9 sub1 (0)
end-cut-1 sub1 g40 (0)
end-cut-2 sub9 g40 (0)
begin-transverse-splice sub4 sub12 (2)
end-inverse-splice-1b sub1 sub4 (0)
end-inverse-splice-2 sub1 sub12 (0)
reset-1 sub9 (0)
invert-single-gene-a sub1 (1)
begin-cut sub13 sub6 (0)
end-cut-1 sub6 sub15 (0)
end-cut-2 sub13 sub15 (0)
begin-transpose-splice sub9 g40 (2)
end-splice-1 sub6 sub9 (0)
end-splice-2 sub6 g40 (0)
reset-1 sub13 (0)
invert-single-gene-b sub1 (1)
begin-cut sub4 sub1 (0)
end-cut-1 sub1 sub12 (0)
end-cut-2 sub4 sub12 (0)
begin-transverse-splice sub9 sub6 (2)
end-inverse-splice-1a sub1 sub9 (0)
end-inverse-splice-2 sub1 sub6 (0)
reset-1 sub4 (0)
begin-cut sub4 sub12 (0)
end-cut-1 sub12 sub11 (0)
end-cut-2 sub4 sub11 (0)
begin-transpose-splice sub1 sub6 (2)
end-splice-1 sub12 sub1 (0)
end-splice-2 sub12 sub6 (0)
reset-1 sub4 (0)
begin-cut sub4 sub11 (0)
continue-cut sub11 sub13 (0)
end-cut-1 sub13 sub15 (0)
end-cut-2 sub4 sub15 (0)
begin-transpose-splice sub12 sub6 (2)
continue-splice-1 sub11 sub13 (0)
continue-splice-2 sub11 sub12 (0)
end-splice-1 sub13 sub11 (0)
end-splice-2 sub13 sub6 (0)
[t=2.87153s, 18964 KB] Plan length: 194 step(s).
[t=2.87153s, 18964 KB] Plan cost: 59
[t=2.87153s, 18964 KB] Timestamp: 1698015038137 millisecond(s).
[t=2.87153s, 18964 KB] Expanded 1712 state(s).
[t=2.87153s, 18964 KB] Reopened 0 state(s).
[t=2.87153s, 18964 KB] Evaluated 22261 state(s).
[t=2.87153s, 18964 KB] Evaluations: 22261
[t=2.87153s, 18964 KB] Generated 26945 state(s).
[t=2.87153s, 18964 KB] Dead ends: 0 state(s).
[t=2.87153s, 18964 KB] Number of registered states: 22261
[t=2.87153s, 18964 KB] Int hash set load factor: 22261/32768 = 0.679352
[t=2.87153s, 18964 KB] Int hash set resizes: 15
[t=2.87153s, 18964 KB] Search time: 2.81957s
[t=2.87153s, 18964 KB] Total time: 2.87153s
Solution found.
Peak memory: 18964 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 3.87s
