INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/translate/translate.py benchmarks-test/ged-sat14-strips/domain.pddl benchmarks-test/ged-sat14-strips/d-10-3.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Duplicate arguments: Adding equality conditions.
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 129 rules.
Computing model... [0.080s CPU, 0.076s wall-clock]
6489 relevant atoms
6462 auxiliary atoms
12951 final queue length
28100 total queue pushes
Completing instantiation... [0.200s CPU, 0.196s wall-clock]
Instantiating: [0.280s CPU, 0.279s wall-clock]
Computing fact groups...
Finding invariants...
36 initial candidates
Finding invariants: [0.130s CPU, 0.131s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.140s CPU, 0.143s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.010s wall-clock]
Translating task: [0.320s CPU, 0.318s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
37 propositions removed
Detecting unreachable propositions: [0.150s CPU, 0.141s wall-clock]
Reordering and filtering variables...
40 of 40 variables necessary.
44 of 63 mutex groups necessary.
5418 of 5418 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.041s wall-clock]
Translator variables: 40
Translator derived variables: 0
Translator facts: 857
Translator goal facts: 36
Translator mutex groups: 44
Translator total mutex groups size: 1669
Translator operators: 5418
Translator axioms: 0
Translator task size: 42886
Translator peak memory: 54364 KB
Writing output... [0.050s CPU, 0.054s wall-clock]
Done! [1.000s CPU, 0.995s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(cost_type=one))' --search 'eager(lwmb_partition(hff, inter_biased_depth(tau=1), intra_biased(tau=1.0, ignore_size=true, random_seed=4)), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00137076s, 11760 KB] reading input...
[t=0.0225308s, 14776 KB] done reading input!
[t=0.0261526s, 16160 KB] Simplifying 18000 unary operators... done! [16470 unary operators]
[t=0.0417733s, 17392 KB] time to simplify: 0.0160576s
[t=0.0425727s, 17392 KB] Initializing additive heuristic...
[t=0.0426033s, 17392 KB] Initializing FF heuristic...
[t=0.0427153s, 17392 KB] Building successor generator...done!
[t=0.0443535s, 17392 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0443743s, 17392 KB] time for successor generation creation: 0.00156987s
[t=0.0444038s, 17392 KB] Variables: 40
[t=0.0444246s, 17392 KB] FactPairs: 857
[t=0.0444434s, 17392 KB] Bytes per state: 20
[t=0.0444811s, 17392 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.044628s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 61
[t=0.0446522s, 17392 KB] g=0, 1 evaluated, 0 expanded
[t=0.0446746s, 17392 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 61
[t=0.0446943s, 17392 KB] pruning method: none
[t=0.0447145s, 17392 KB] Start Timestep: 1698190985798 millisecond(s).
[t=0.0450544s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 60
[t=0.04508s, 17392 KB] g=1, 4 evaluated, 1 expanded
[t=0.0466175s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 55
[t=0.0466571s, 17392 KB] g=1, 20 evaluated, 1 expanded
[t=0.0469714s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 52
[t=0.0469989s, 17392 KB] g=1, 22 evaluated, 1 expanded
[t=0.0494398s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 46
[t=0.0494663s, 17392 KB] g=2, 39 evaluated, 2 expanded
[t=0.0496386s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 45
[t=0.0496684s, 17392 KB] g=3, 40 evaluated, 3 expanded
[t=0.0836513s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 44
[t=0.083711s, 17392 KB] g=9, 290 evaluated, 81 expanded
[t=0.0838682s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 43
[t=0.0838922s, 17392 KB] g=10, 291 evaluated, 82 expanded
[t=0.111143s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 39
[t=0.111207s, 17392 KB] g=16, 493 evaluated, 145 expanded
[t=0.111505s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 38
[t=0.11153s, 17392 KB] g=17, 495 evaluated, 147 expanded
[t=0.121782s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 36
[t=0.121823s, 17392 KB] g=23, 576 evaluated, 159 expanded
[t=0.12198s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 35
[t=0.122004s, 17392 KB] g=24, 577 evaluated, 160 expanded
[t=0.136148s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 34
[t=0.136226s, 17392 KB] g=30, 688 evaluated, 203 expanded
[t=0.136384s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0.136408s, 17392 KB] g=31, 689 evaluated, 204 expanded
[t=0.169432s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=0.169495s, 17392 KB] g=36, 934 evaluated, 248 expanded
[t=0.190487s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.190568s, 17392 KB] g=37, 1099 evaluated, 278 expanded
[t=0.204137s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=0.204191s, 17392 KB] g=38, 1206 evaluated, 318 expanded
[t=0.213805s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 28
[t=0.213876s, 17392 KB] g=39, 1282 evaluated, 328 expanded
[t=0.218575s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=0.218617s, 17392 KB] g=40, 1323 evaluated, 335 expanded
[t=0.239259s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=0.23932s, 17392 KB] g=41, 1487 evaluated, 362 expanded
[t=0.272167s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=0.272244s, 17392 KB] g=50, 1737 evaluated, 440 expanded
[t=0.291794s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=0.291835s, 17392 KB] g=50, 1881 evaluated, 483 expanded
[t=0.32864s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=0.328682s, 17392 KB] g=56, 2184 evaluated, 555 expanded
[t=0.336069s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=0.336108s, 17392 KB] g=58, 2239 evaluated, 565 expanded
[t=0.36221s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=0.362259s, 17392 KB] g=66, 2448 evaluated, 603 expanded
[t=0.406434s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=0.406533s, 17392 KB] g=58, 2768 evaluated, 683 expanded
[t=0.410076s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=0.410114s, 17392 KB] g=59, 2795 evaluated, 709 expanded
[t=0.456711s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=0.456788s, 17392 KB] g=79, 3155 evaluated, 793 expanded
[t=0.457235s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=0.45726s, 17392 KB] g=80, 3158 evaluated, 795 expanded
[t=0.465125s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=0.465159s, 17392 KB] g=85, 3223 evaluated, 808 expanded
[t=0.466396s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=0.466423s, 17392 KB] g=85, 3234 evaluated, 808 expanded
[t=0.530824s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=0.530887s, 17392 KB] g=87, 3736 evaluated, 925 expanded
[t=0.53162s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=0.531646s, 17392 KB] g=88, 3742 evaluated, 932 expanded
[t=0.537526s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 11
[t=0.537568s, 17392 KB] g=91, 3785 evaluated, 944 expanded
[t=0.539818s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=0.539843s, 17392 KB] g=95, 3811 evaluated, 948 expanded
[t=0.545863s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=0.545892s, 17392 KB] g=97, 3867 evaluated, 955 expanded
[t=0.547089s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=0.547113s, 17392 KB] g=98, 3879 evaluated, 956 expanded
[t=0.549389s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=0.549414s, 17392 KB] g=99, 3903 evaluated, 958 expanded
[t=0.54947s, 17392 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=0.549494s, 17392 KB] g=100, 3904 evaluated, 959 expanded
[t=0.549516s, 17392 KB] Solution found!
[t=0.549546s, 17392 KB] Actual search time: 0.504815s
begin-cut sub14 sub1 (0)
end-cut-1 sub1 sub10 (0)
end-cut-2 sub14 sub10 (0)
begin-transverse-splice g40 sub12 (2)
end-inverse-splice-1a sub1 g40 (0)
end-inverse-splice-2 sub1 sub12 (0)
reset-1 sub14 (0)
begin-cut sub15 sub14 (0)
end-cut-1 sub14 sub10 (0)
end-cut-2 sub15 sub10 (0)
begin-transverse-splice sub8 sub2 (2)
end-inverse-splice-1a sub14 sub8 (0)
end-inverse-splice-2 sub14 sub2 (0)
reset-1 sub15 (0)
begin-cut sub15 sub10 (0)
end-cut-1 sub10 sub7 (0)
end-cut-2 sub15 sub7 (0)
begin-transverse-splice sub8 sub14 (2)
end-inverse-splice-1a sub10 sub8 (0)
end-inverse-splice-2 sub10 sub14 (0)
reset-1 sub15 (0)
begin-cut sub11 sub15 (0)
end-cut-1 sub15 sub7 (0)
end-cut-2 sub11 sub7 (0)
begin-transpose-splice sub4 sub9 (2)
end-splice-1 sub15 sub4 (0)
end-splice-2 sub15 sub9 (0)
reset-1 sub11 (0)
begin-cut sub9 g40 (0)
end-cut-1 g40 sub1 (0)
end-cut-2 sub9 sub1 (0)
begin-transpose-splice sub6 sub16 (2)
end-splice-1 g40 sub6 (0)
end-splice-2 g40 sub16 (0)
reset-1 sub9 (0)
invert-single-gene-a sub11 (1)
invert-single-gene-a sub9 (1)
invert-single-gene-a sub13 (1)
invert-single-gene-a sub16 (1)
invert-single-gene-a sub12 (1)
begin-cut g40 sub16 (0)
end-cut-1 sub16 sub4 (0)
end-cut-2 g40 sub4 (0)
begin-transpose-splice sub13 sub3 (2)
end-splice-1 sub16 sub13 (0)
end-splice-2 sub16 sub3 (0)
reset-1 g40 (0)
begin-cut sub12 sub13 (0)
end-cut-1 sub13 sub16 (0)
end-cut-2 sub12 sub16 (0)
begin-transpose-splice g36 sub6 (2)
end-splice-1 sub13 g36 (0)
end-splice-2 sub13 sub6 (0)
reset-1 sub12 (0)
invert-single-gene-a sub8 (1)
begin-cut sub5 g36 (0)
end-cut-1 g36 sub13 (0)
end-cut-2 sub5 sub13 (0)
begin-transpose-splice sub3 sub11 (2)
end-splice-1 g36 sub3 (0)
end-splice-2 g36 sub11 (0)
reset-1 sub5 (0)
begin-cut sub5 sub13 (0)
end-cut-1 sub13 sub6 (0)
end-cut-2 sub5 sub6 (0)
begin-transpose-splice sub12 sub16 (2)
end-splice-1 sub13 sub12 (0)
end-splice-2 sub13 sub16 (0)
reset-1 sub5 (0)
invert-single-gene-a sub15 (1)
begin-cut sub5 sub6 (0)
end-cut-1 sub6 g40 (0)
end-cut-2 sub5 g40 (0)
begin-transverse-splice sub13 sub16 (2)
end-inverse-splice-1a sub6 sub13 (0)
end-inverse-splice-2 sub6 sub16 (0)
reset-1 sub5 (0)
begin-cut sub5 g40 (0)
end-cut-1 g40 sub4 (0)
end-cut-2 sub5 sub4 (0)
begin-transpose-splice sub6 sub16 (2)
end-splice-1 g40 sub6 (0)
end-splice-2 g40 sub16 (0)
reset-1 sub5 (0)
begin-cut sub5 sub4 (0)
continue-cut sub4 sub15 (0)
end-cut-1 sub15 sub9 (0)
end-cut-2 sub5 sub9 (0)
begin-transpose-splice g36 sub11 (2)
continue-splice-1 sub4 sub15 (0)
continue-splice-2 sub4 g36 (0)
end-splice-1 sub15 sub4 (0)
end-splice-2 sub15 sub11 (0)
reset-1 sub5 (0)
begin-cut sub15 sub11 (0)
end-cut-1 sub11 sub7 (0)
end-cut-2 sub15 sub7 (0)
begin-transpose-splice sub12 sub13 (2)
end-splice-1 sub11 sub12 (0)
end-splice-2 sub11 sub13 (0)
[t=0.549569s, 17392 KB] Plan length: 100 step(s).
[t=0.549569s, 17392 KB] Plan cost: 33
[t=0.549569s, 17392 KB] Timestamp: 1698190986304 millisecond(s).
[t=0.549569s, 17392 KB] Expanded 960 state(s).
[t=0.549569s, 17392 KB] Reopened 0 state(s).
[t=0.549569s, 17392 KB] Evaluated 3904 state(s).
[t=0.549569s, 17392 KB] Evaluations: 3904
[t=0.549569s, 17392 KB] Generated 3993 state(s).
[t=0.549569s, 17392 KB] Dead ends: 0 state(s).
[t=0.549569s, 17392 KB] Number of registered states: 3904
[t=0.549569s, 17392 KB] Int hash set load factor: 3904/4096 = 0.953125
[t=0.549569s, 17392 KB] Int hash set resizes: 12
[t=0.549569s, 17392 KB] Search time: 0.505089s
[t=0.549569s, 17392 KB] Total time: 0.549569s
Solution found.
Peak memory: 17392 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 1.68s
