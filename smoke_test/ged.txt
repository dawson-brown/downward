INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/translate/translate.py benchmarks-test/ged-sat14-strips/domain.pddl benchmarks-test/ged-sat14-strips/d-10-3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Duplicate arguments: Adding equality conditions.
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 129 rules.
Computing model... [0.090s CPU, 0.089s wall-clock]
6489 relevant atoms
6462 auxiliary atoms
12951 final queue length
28100 total queue pushes
Completing instantiation... [0.200s CPU, 0.203s wall-clock]
Instantiating: [0.300s CPU, 0.300s wall-clock]
Computing fact groups...
Finding invariants...
36 initial candidates
Finding invariants: [0.140s CPU, 0.135s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.150s CPU, 0.148s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.008s wall-clock]
Translating task: [0.310s CPU, 0.306s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
37 propositions removed
Detecting unreachable propositions: [0.160s CPU, 0.163s wall-clock]
Reordering and filtering variables...
40 of 40 variables necessary.
44 of 63 mutex groups necessary.
5418 of 5418 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.050s CPU, 0.046s wall-clock]
Translator variables: 40
Translator derived variables: 0
Translator facts: 857
Translator goal facts: 36
Translator mutex groups: 44
Translator total mutex groups size: 1669
Translator operators: 5418
Translator axioms: 0
Translator task size: 42886
Translator peak memory: 54364 KB
Writing output... [0.080s CPU, 0.067s wall-clock]
Done! [1.060s CPU, 1.051s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/builds/release/bin/downward --evaluator 'hff=ff(transform=adapt_costs(cost_type=one))' --search 'eager(lwm_partition(hff, inter_biased_depth(tau=1.5, ignore_size=true), intra_biased(hff, ignore_size=true, random_seed=3)), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00143647s, 11852 KB] reading input...
[t=0.0237953s, 14868 KB] done reading input!
[t=0.0280237s, 16256 KB] Simplifying 18000 unary operators... done! [16470 unary operators]
[t=0.0502683s, 17488 KB] time to simplify: 0.0227544s
[t=0.0512072s, 17488 KB] Initializing additive heuristic...
[t=0.0512412s, 17488 KB] Initializing FF heuristic...
[t=0.0513714s, 17488 KB] Building successor generator...done!
[t=0.0533105s, 17488 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0533332s, 17488 KB] time for successor generation creation: 0.00186592s
[t=0.0533649s, 17488 KB] Variables: 40
[t=0.0533876s, 17488 KB] FactPairs: 857
[t=0.0534082s, 17488 KB] Bytes per state: 20
[t=0.0534492s, 17488 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0536219s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 61
[t=0.0536484s, 17488 KB] g=0, 1 evaluated, 0 expanded
[t=0.0536894s, 17488 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 61
[t=0.0537126s, 17488 KB] pruning method: none
[t=0.0537336s, 17488 KB] Start Timestep: 1697997899191 millisecond(s).
[t=0.0540774s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 60
[t=0.0541047s, 17488 KB] g=1, 4 evaluated, 1 expanded
[t=0.0557279s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 55
[t=0.0557593s, 17488 KB] g=1, 20 evaluated, 1 expanded
[t=0.0560774s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 52
[t=0.056104s, 17488 KB] g=1, 22 evaluated, 1 expanded
[t=0.0586383s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 50
[t=0.0586718s, 17488 KB] g=2, 39 evaluated, 2 expanded
[t=0.0588346s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 49
[t=0.0588606s, 17488 KB] g=3, 40 evaluated, 3 expanded
[t=0.0657536s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 48
[t=0.0658253s, 17488 KB] g=2, 79 evaluated, 8 expanded
[t=0.0663211s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 47
[t=0.0663539s, 17488 KB] g=3, 82 evaluated, 11 expanded
[t=0.0866769s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 45
[t=0.0867499s, 17488 KB] g=4, 227 evaluated, 54 expanded
[t=0.0869075s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 44
[t=0.0869342s, 17488 KB] g=5, 228 evaluated, 55 expanded
[t=0.127799s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 43
[t=0.128006s, 17488 KB] g=12, 533 evaluated, 123 expanded
[t=0.128756s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 42
[t=0.128805s, 17488 KB] g=13, 534 evaluated, 124 expanded
[t=0.23203s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 41
[t=0.232108s, 17488 KB] g=20, 1261 evaluated, 304 expanded
[t=0.232553s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 38
[t=0.232581s, 17488 KB] g=19, 1264 evaluated, 306 expanded
[t=0.258075s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 37
[t=0.25814s, 17488 KB] g=25, 1453 evaluated, 366 expanded
[t=0.259561s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0.259648s, 17488 KB] g=26, 1463 evaluated, 367 expanded
[t=0.358187s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 32
[t=0.358279s, 17488 KB] g=34, 2111 evaluated, 618 expanded
[t=0.373194s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.373265s, 17488 KB] g=40, 2221 evaluated, 659 expanded
[t=0.373424s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=0.373451s, 17488 KB] g=41, 2222 evaluated, 660 expanded
[t=0.387993s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=0.388061s, 17488 KB] g=47, 2345 evaluated, 686 expanded
[t=0.408229s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=0.408318s, 17488 KB] g=48, 2497 evaluated, 734 expanded
[t=0.416125s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=0.416198s, 17488 KB] g=49, 2548 evaluated, 742 expanded
[t=0.502683s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=0.502762s, 17488 KB] g=64, 3199 evaluated, 918 expanded
[t=0.522043s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=0.52213s, 17488 KB] g=69, 3330 evaluated, 966 expanded
[t=0.52463s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=0.524668s, 17488 KB] g=70, 3349 evaluated, 967 expanded
[t=0.525276s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=0.525306s, 17488 KB] g=71, 3353 evaluated, 970 expanded
[t=0.534121s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=0.534224s, 17488 KB] g=76, 3418 evaluated, 981 expanded
[t=0.53658s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=0.536619s, 17488 KB] g=77, 3435 evaluated, 982 expanded
[t=0.536792s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=0.53682s, 17488 KB] g=78, 3436 evaluated, 983 expanded
[t=0.537445s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=0.537473s, 17488 KB] g=79, 3440 evaluated, 984 expanded
[t=0.553425s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=0.553487s, 17488 KB] g=84, 3570 evaluated, 1008 expanded
[t=0.558513s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=0.558547s, 17488 KB] g=85, 3617 evaluated, 1011 expanded
[t=0.56083s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=0.56087s, 17488 KB] g=87, 3636 evaluated, 1013 expanded
[t=0.562922s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=0.562953s, 17488 KB] g=88, 3655 evaluated, 1015 expanded
[t=0.564802s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=0.564828s, 17488 KB] g=89, 3674 evaluated, 1017 expanded
[t=0.565041s, 17488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=0.565066s, 17488 KB] g=90, 3676 evaluated, 1019 expanded
[t=0.565088s, 17488 KB] Solution found!
[t=0.565114s, 17488 KB] Actual search time: 0.511361s
invert-single-gene-a sub13 (1)
invert-single-gene-a sub1 (1)
invert-single-gene-a sub12 (1)
begin-cut sub7 sub8 (0)
end-cut-1 sub8 sub2 (0)
end-cut-2 sub7 sub2 (0)
begin-transverse-splice sub1 sub10 (2)
end-inverse-splice-1a sub8 sub1 (0)
end-inverse-splice-2 sub8 sub10 (0)
reset-1 sub7 (0)
begin-cut g36 sub6 (0)
end-cut-1 sub6 sub16 (0)
end-cut-2 g36 sub16 (0)
begin-transverse-splice sub13 sub3 (2)
end-inverse-splice-1a sub6 sub13 (0)
end-inverse-splice-2 sub6 sub3 (0)
reset-1 g36 (0)
begin-cut sub3 sub11 (0)
end-cut-1 sub11 sub15 (0)
end-cut-2 sub3 sub15 (0)
begin-transverse-splice sub12 sub13 (2)
end-inverse-splice-1a sub11 sub12 (0)
end-inverse-splice-2 sub11 sub13 (0)
reset-1 sub3 (0)
begin-cut g36 sub16 (0)
end-cut-1 sub16 sub4 (0)
end-cut-2 g36 sub4 (0)
begin-transverse-splice sub6 sub3 (2)
end-inverse-splice-1a sub16 sub6 (0)
end-inverse-splice-2 sub16 sub3 (0)
reset-1 g36 (0)
begin-cut sub5 g36 (0)
end-cut-1 g36 sub4 (0)
end-cut-2 sub5 sub4 (0)
begin-transpose-splice sub3 sub15 (2)
end-splice-1 g36 sub3 (0)
end-splice-2 g36 sub15 (0)
reset-1 sub5 (0)
begin-cut sub5 sub4 (0)
end-cut-1 sub4 sub9 (0)
end-cut-2 sub5 sub9 (0)
begin-transpose-splice g36 sub15 (2)
end-splice-1 sub4 g36 (0)
end-splice-2 sub4 sub15 (0)
reset-1 sub5 (0)
invert-single-gene-a sub9 (1)
invert-single-gene-a sub10 (1)
begin-cut sub3 g36 (0)
end-cut-1 g36 sub4 (0)
end-cut-2 sub3 sub4 (0)
begin-transpose-splice sub7 sub2 (2)
end-splice-1 g36 sub7 (0)
end-splice-2 g36 sub2 (0)
reset-1 sub3 (0)
begin-cut sub15 sub14 (0)
end-cut-1 sub14 sub1 (0)
end-cut-2 sub15 sub1 (0)
begin-transverse-splice g36 sub2 (2)
end-inverse-splice-1a sub14 g36 (0)
end-inverse-splice-2 sub14 sub2 (0)
reset-1 sub15 (0)
begin-cut sub10 sub7 (0)
end-cut-1 sub7 g36 (0)
end-cut-2 sub10 g36 (0)
begin-transpose-splice sub1 sub8 (2)
end-splice-1 sub7 sub1 (0)
end-splice-2 sub7 sub8 (0)
reset-1 sub10 (0)
begin-cut sub10 g36 (0)
end-cut-1 g36 sub14 (0)
end-cut-2 sub10 sub14 (0)
begin-transverse-splice sub3 sub4 (2)
end-inverse-splice-1b g36 sub3 (0)
end-inverse-splice-2 g36 sub4 (0)
reset-1 sub10 (0)
begin-cut sub15 sub1 (0)
end-cut-1 sub1 sub7 (0)
end-cut-2 sub15 sub7 (0)
begin-transpose-splice g40 sub12 (2)
end-splice-1 sub1 g40 (0)
end-splice-2 sub1 sub12 (0)
reset-1 sub15 (0)
invert-single-gene-a g36 (1)
invert-single-gene-a sub15 (1)
begin-cut sub9 g40 (0)
end-cut-1 g40 sub1 (0)
end-cut-2 sub9 sub1 (0)
begin-transpose-splice sub6 sub16 (2)
end-splice-1 g40 sub6 (0)
end-splice-2 g40 sub16 (0)
[t=0.565135s, 17488 KB] Plan length: 90 step(s).
[t=0.565135s, 17488 KB] Plan cost: 31
[t=0.565135s, 17488 KB] Timestamp: 1697997899703 millisecond(s).
[t=0.565135s, 17488 KB] Expanded 1020 state(s).
[t=0.565135s, 17488 KB] Reopened 0 state(s).
[t=0.565135s, 17488 KB] Evaluated 3676 state(s).
[t=0.565135s, 17488 KB] Evaluations: 3676
[t=0.565135s, 17488 KB] Generated 3751 state(s).
[t=0.565135s, 17488 KB] Dead ends: 0 state(s).
[t=0.565135s, 17488 KB] Number of registered states: 3676
[t=0.565135s, 17488 KB] Int hash set load factor: 3676/4096 = 0.897461
[t=0.565135s, 17488 KB] Int hash set resizes: 12
[t=0.565135s, 17488 KB] Search time: 0.511687s
[t=0.565135s, 17488 KB] Total time: 0.565135s
Solution found.
Peak memory: 17488 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 1.71s
