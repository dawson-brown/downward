#! /usr/bin/env python

import logging
import os
import multiprocessing
import subprocess
import sys

from lab.experiment import get_run_dir
from lab import tools

tools.configure_logging()

SHUFFLED_TASK_IDS = [140, 33, 107, 101, 84, 121, 49, 236, 53, 76, 191, 46, 136, 159, 69, 74, 38, 190, 128, 142, 79, 143, 160, 47, 185, 23, 30, 12, 32, 122, 186, 10, 42, 213, 225, 245, 11, 168, 3, 108, 78, 68, 35, 119, 180, 240, 188, 94, 75, 56, 241, 5, 117, 134, 20, 98, 28, 196, 4, 71, 88, 85, 182, 93, 211, 72, 216, 204, 36, 172, 189, 130, 155, 44, 153, 154, 133, 67, 7, 246, 91, 144, 197, 149, 150, 193, 222, 243, 102, 124, 14, 24, 59, 116, 175, 165, 31, 170, 60, 120, 138, 228, 179, 210, 34, 195, 151, 201, 17, 25, 194, 207, 70, 22, 50, 73, 16, 237, 152, 110, 45, 209, 27, 176, 205, 58, 125, 105, 146, 162, 118, 111, 131, 178, 13, 99, 114, 164, 219, 109, 235, 161, 169, 166, 234, 77, 167, 104, 64, 62, 54, 1, 183, 187, 233, 9, 96, 215, 55, 200, 6, 132, 221, 212, 171, 63, 135, 123, 90, 198, 80, 220, 26, 141, 177, 66, 206, 41, 127, 83, 199, 224, 158, 174, 137, 106, 184, 129, 227, 202, 226, 81, 100, 97, 112, 19, 65, 92, 52, 156, 37, 115, 229, 139, 217, 86, 2, 48, 238, 157, 192, 126, 82, 18, 95, 173, 148, 147, 113, 8, 244, 203, 61, 103, 21, 51, 230, 242, 163, 214, 40, 223, 232, 89, 145, 231, 208, 87, 29, 43, 239, 218, 39, 181, 57, 15]

# Make sure we're in the experiment directory.
os.chdir(os.path.dirname(os.path.abspath(__file__)))


def get_run_id(task_id):
    return SHUFFLED_TASK_IDS[task_id - 1]


def process_task(task_id):
    run_id = get_run_id(task_id)
    run_dir = get_run_dir(run_id)
    error = False
    driver_log_file = os.path.join(run_dir, "driver.log")

    if os.path.exists(driver_log_file):
        logging.info(f"The run in {run_dir} has already been started --> skip it")
        return False

    with open(driver_log_file, "w") as driver_log:
        with open(os.path.join(run_dir, "driver.err"), "w") as driver_err:
            logging.info(f"Starting run {run_id} (TASK_ID {task_id}) in {run_dir}")
            try:
                subprocess.check_call(
                    [tools.get_python_executable(), "run"],
                    cwd=run_dir, stdout=driver_log, stderr=driver_err)
            except subprocess.CalledProcessError:
                error = True

    # driver.log always has content for a successful run, so we never delete it.
    if os.path.getsize(driver_err.name) == 0:
        os.remove(driver_err.name)
    else:
        error = True

    return error


def main():
    pool = multiprocessing.Pool(processes=8)
    num_tasks = len(SHUFFLED_TASK_IDS)
    result = pool.map_async(process_task, range(1, num_tasks + 1))
    try:
        # Use "timeout" to fix passing KeyboardInterrupts from children
        # (see https://stackoverflow.com/questions/1408356).
        result.wait(timeout=99999)
    except KeyboardInterrupt:
        logging.warning("Main script interrupted")
        pool.terminate()
    finally:
        pool.close()
        logging.info("Joining pool processes")
        pool.join()

    if any(result.get()):
        sys.exit("Error: At least one run failed.")


if __name__ == "__main__":
    main()
