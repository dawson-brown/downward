INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/.venv/bin/python3 /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/data/assign3/code-c23fe3eeb7e93b9aa5094cd2d969854439c7c5bc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
688 relevant atoms
462 auxiliary atoms
1150 final queue length
1967 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
15 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
574 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
28 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
29 of 29 variables necessary.
15 of 29 mutex groups necessary.
392 of 392 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 29
Translator derived variables: 0
Translator facts: 240
Translator goal facts: 13
Translator mutex groups: 15
Translator total mutex groups size: 225
Translator operators: 392
Translator axioms: 0
Translator task size: 3405
Translator peak memory: 34040 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 299s
INFO     search memory limit: 3584 MB
INFO     search command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/data/assign3/code-c23fe3eeb7e93b9aa5094cd2d969854439c7c5bc_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff()])' --internal-plan-file sas_plan < output.sas
[t=0s, 10824 KB] reading input...
[t=0.00395652s, 11080 KB] done reading input!
[t=0.00791873s, 11484 KB] Simplifying 1540 unary operators... done! [1176 unary operators]
[t=0.00961197s, 11484 KB] time to simplify: 0.00169324s
[t=0.00978709s, 11484 KB] Initializing additive heuristic...
[t=0.00991267s, 11484 KB] Initializing FF heuristic...
[t=0.00994744s, 11484 KB] Building successor generator...done!
[t=0.0102847s, 11484 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0103456s, 11484 KB] time for successor generation creation: 0s
[t=0.0103795s, 11484 KB] Variables: 29
[t=0.0104179s, 11484 KB] FactPairs: 240
[t=0.0104499s, 11484 KB] Bytes per state: 12
[t=0.0104815s, 11484 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0105441s, 11484 KB] New best heuristic value for ff(): 27
[t=0.0106265s, 11484 KB] g=0, 1 evaluated, 0 expanded
[t=0.0106597s, 11484 KB] Initial heuristic value for ff(): 27
[t=0.0106944s, 11484 KB] pruning method: none
[t=0.010727s, 11484 KB] New best heuristic value for ff(): 26
[t=0.0109644s, 11484 KB] g=2, 7 evaluated, 2 expanded
[t=0.0116192s, 11484 KB] New best heuristic value for ff(): 25
[t=0.0118802s, 11484 KB] g=4, 35 evaluated, 7 expanded
[t=0.0119161s, 11484 KB] New best heuristic value for ff(): 23
[t=0.0127603s, 11484 KB] g=6, 63 evaluated, 12 expanded
[t=0.0127952s, 11484 KB] New best heuristic value for ff(): 21
[t=0.015422s, 11484 KB] g=10, 158 evaluated, 33 expanded
[t=0.0155056s, 11484 KB] New best heuristic value for ff(): 20
[t=0.0158856s, 11484 KB] g=12, 172 evaluated, 36 expanded
[t=0.0159188s, 11484 KB] New best heuristic value for ff(): 19
[t=0.0175922s, 11484 KB] g=16, 236 evaluated, 51 expanded
[t=0.0176297s, 11484 KB] New best heuristic value for ff(): 18
[t=0.0179225s, 11484 KB] g=18, 246 evaluated, 53 expanded
[t=0.0179585s, 11484 KB] New best heuristic value for ff(): 17
[t=0.0183584s, 11484 KB] g=20, 260 evaluated, 56 expanded
[t=0.0183958s, 11484 KB] New best heuristic value for ff(): 16
[t=0.0187144s, 11484 KB] g=22, 272 evaluated, 59 expanded
[t=0.0193029s, 11484 KB] New best heuristic value for ff(): 15
[t=0.0206413s, 11484 KB] g=26, 350 evaluated, 80 expanded
[t=0.0272436s, 11484 KB] New best heuristic value for ff(): 14
[t=0.0289324s, 11484 KB] g=34, 681 evaluated, 179 expanded
[t=0.0311968s, 11484 KB] New best heuristic value for ff(): 12
[t=0.0325837s, 11484 KB] g=42, 822 evaluated, 241 expanded
[t=0.0326247s, 11484 KB] New best heuristic value for ff(): 10
[t=0.0327438s, 11484 KB] g=44, 825 evaluated, 243 expanded
[t=0.0511185s, 11484 KB] New best heuristic value for ff(): 9
[t=0.0519656s, 11484 KB] g=66, 1658 evaluated, 654 expanded
[t=0.0520072s, 11484 KB] New best heuristic value for ff(): 8
[t=0.0526169s, 11484 KB] g=70, 1686 evaluated, 668 expanded
[t=0.0526518s, 11484 KB] New best heuristic value for ff(): 6
[t=0.0528033s, 11484 KB] g=72, 1692 evaluated, 670 expanded
[t=0.0528354s, 11484 KB] New best heuristic value for ff(): 5
[t=0.0529378s, 11484 KB] g=74, 1696 evaluated, 672 expanded
[t=0.0529689s, 11484 KB] New best heuristic value for ff(): 3
[t=0.053898s, 11484 KB] g=82, 1751 evaluated, 704 expanded
[t=0.0539324s, 11484 KB] New best heuristic value for ff(): 2
[t=0.0540862s, 11484 KB] g=86, 1760 evaluated, 710 expanded
[t=0.0541183s, 11484 KB] New best heuristic value for ff(): 1
[t=0.0541743s, 11484 KB] g=87, 1762 evaluated, 711 expanded
[t=0.0542065s, 11484 KB] New best heuristic value for ff(): 0
[t=0.0542471s, 11484 KB] g=88, 1763 evaluated, 712 expanded
[t=0.0542771s, 11484 KB] Solution found!
[t=0.05431s, 11484 KB] Actual search time: 0.043583s
unstack c e (1)
put-down c (1)
unstack i d (1)
stack i e (1)
pick-up n (1)
stack n c (1)
unstack d l (1)
stack d g (1)
unstack l m (1)
stack l n (1)
unstack h f (1)
stack h m (1)
unstack d g (1)
stack d h (1)
unstack f a (1)
stack f g (1)
unstack a k (1)
stack a i (1)
unstack k b (1)
stack k f (1)
unstack d h (1)
stack d b (1)
unstack h m (1)
stack h a (1)
pick-up m (1)
stack m k (1)
unstack h a (1)
stack h m (1)
unstack d b (1)
stack d a (1)
pick-up b (1)
stack b h (1)
unstack d a (1)
stack d b (1)
unstack a i (1)
stack a d (1)
unstack i e (1)
stack i a (1)
pick-up e (1)
stack e l (1)
unstack i a (1)
stack i e (1)
unstack a d (1)
stack a i (1)
unstack d b (1)
stack d a (1)
unstack b h (1)
stack b d (1)
unstack h m (1)
put-down h (1)
unstack b d (1)
stack b h (1)
unstack d a (1)
stack d b (1)
unstack m k (1)
stack m a (1)
unstack k f (1)
stack k d (1)
unstack m a (1)
stack m k (1)
unstack f g (1)
stack f m (1)
unstack g j (1)
stack g a (1)
unstack f m (1)
stack f g (1)
unstack m k (1)
stack m j (1)
unstack k d (1)
stack k f (1)
unstack m j (1)
stack m k (1)
unstack d b (1)
put-down d (1)
pick-up j (1)
stack j d (1)
unstack b h (1)
stack b j (1)
pick-up h (1)
stack h m (1)
unstack b j (1)
stack b h (1)
unstack j d (1)
put-down j (1)
pick-up d (1)
stack d b (1)
pick-up j (1)
stack j d (1)
[t=0.0543499s, 11484 KB] Plan length: 88 step(s).
[t=0.0543499s, 11484 KB] Plan cost: 88
[t=0.0543499s, 11484 KB] Expanded 713 state(s).
[t=0.0543499s, 11484 KB] Reopened 0 state(s).
[t=0.0543499s, 11484 KB] Evaluated 1763 state(s).
[t=0.0543499s, 11484 KB] Evaluations: 1763
[t=0.0543499s, 11484 KB] Generated 2696 state(s).
[t=0.0543499s, 11484 KB] Dead ends: 0 state(s).
[t=0.0543499s, 11484 KB] Number of registered states: 1763
[t=0.0543499s, 11484 KB] Int hash set load factor: 1763/2048 = 0.86084
[t=0.0543499s, 11484 KB] Int hash set resizes: 11
[t=0.0543499s, 11484 KB] Search time: 0.0438684s
[t=0.0543499s, 11484 KB] Total time: 0.0543499s
Solution found.
Peak memory: 11484 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 88 

Successful plans:
Value: 88
 sas_plan 88 

validate exit code: 0

INFO     Planner time: 0.28s
