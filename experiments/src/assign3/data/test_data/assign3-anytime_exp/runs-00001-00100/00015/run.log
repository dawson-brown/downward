INFO     planner time limit: 600s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/.venv/bin/python3 /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-67ec7e23ae54ba9fbe4811c609f97e6be26f409d_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.004s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.006s wall-clock]
308 relevant atoms
207 auxiliary atoms
515 final queue length
859 total queue pushes
Completing instantiation... [0.010s CPU, 0.009s wall-clock]
Instantiating: [0.020s CPU, 0.021s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
10 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.012s wall-clock]
234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
19 of 19 variables necessary.
10 of 19 mutex groups necessary.
162 of 162 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 19
Translator derived variables: 0
Translator facts: 110
Translator goal facts: 8
Translator mutex groups: 10
Translator total mutex groups size: 100
Translator operators: 162
Translator axioms: 0
Translator task size: 1425
Translator peak memory: 32836 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.050s CPU, 0.057s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 599s
INFO     search memory limit: 3584 MB
INFO     search command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-67ec7e23ae54ba9fbe4811c609f97e6be26f409d_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'iterated([
            lazy_wastar([h],w=5),
            lazy_wastar([h],w=4),
            lazy_wastar([h],w=3),
            lazy_wastar([h],w=2),
            astar(h)
        ],continue_on_fail=true)' --internal-plan-file sas_plan < output.sas
[t=0.00398102s, 10888 KB] reading input...
[t=0.00511208s, 10888 KB] done reading input!
[t=0.0110318s, 11276 KB] Initializing landmark cut heuristic...
[t=0.0141185s, 11276 KB] Building successor generator...done!
[t=0.0147586s, 11276 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0148833s, 11276 KB] time for successor generation creation: 0s
[t=0.0149429s, 11276 KB] Variables: 19
[t=0.0150115s, 11276 KB] FactPairs: 110
[t=0.0150661s, 11276 KB] Bytes per state: 8
[t=0.0151194s, 11276 KB] Start Timestep: 1681850624911 millisecond(s).
[t=0.015326s, 11276 KB] Building successor generator...done!
[t=0.0155663s, 11276 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0156526s, 11276 KB] time for successor generation creation: 0s
[t=0.01571s, 11276 KB] Variables: 19
[t=0.0157693s, 11276 KB] FactPairs: 110
[t=0.015826s, 11276 KB] Bytes per state: 8
[t=0.0158788s, 11276 KB] Starting search: lazy_wastar([h],w=5)
[t=0.0159667s, 11276 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0160228s, 11276 KB] Start Timestep: 1681850624912 millisecond(s).
[t=0.016082s, 11276 KB] New best heuristic value for lmcut(): 16
[t=0.0163623s, 11276 KB] g=0, 1 evaluated, 0 expanded
[t=0.0164213s, 11276 KB] Initial heuristic value for lmcut(): 16
[t=0.0187033s, 11276 KB] New best heuristic value for lmcut(): 15
[t=0.0192164s, 11276 KB] g=5, 19 evaluated, 18 expanded
[t=0.0244711s, 11276 KB] New best heuristic value for lmcut(): 14
[t=0.0276253s, 11276 KB] g=9, 91 evaluated, 90 expanded, 3 reopened
[t=0.0675234s, 11276 KB] New best heuristic value for lmcut(): 13
[t=0.0675234s, 11276 KB] g=15, 557 evaluated, 556 expanded, 53 reopened
[t=0.0714891s, 11276 KB] New best heuristic value for lmcut(): 12
[t=0.0718205s, 11276 KB] g=20, 567 evaluated, 566 expanded, 53 reopened
[t=0.071858s, 11276 KB] New best heuristic value for lmcut(): 11
[t=0.0720649s, 11276 KB] g=21, 569 evaluated, 568 expanded, 53 reopened
[t=0.072097s, 11276 KB] New best heuristic value for lmcut(): 10
[t=0.0731776s, 11276 KB] g=25, 583 evaluated, 582 expanded, 53 reopened
[t=0.159672s, 11408 KB] New best heuristic value for lmcut(): 9
[t=0.160889s, 11408 KB] g=29, 2375 evaluated, 2374 expanded, 655 reopened
[t=0.75235s, 11824 KB] New best heuristic value for lmcut(): 8
[t=0.752881s, 11824 KB] g=36, 14015 evaluated, 14014 expanded, 5212 reopened
[t=0.752881s, 11824 KB] New best heuristic value for lmcut(): 7
[t=0.752881s, 11824 KB] g=37, 14017 evaluated, 14016 expanded, 5212 reopened
[t=0.752881s, 11824 KB] New best heuristic value for lmcut(): 6
[t=0.752881s, 11824 KB] g=38, 14018 evaluated, 14017 expanded, 5212 reopened
[t=0.772006s, 11824 KB] New best heuristic value for lmcut(): 5
[t=0.772555s, 11824 KB] g=49, 14496 evaluated, 14495 expanded, 5382 reopened
[t=0.772616s, 11824 KB] New best heuristic value for lmcut(): 4
[t=0.77274s, 11824 KB] g=50, 14497 evaluated, 14496 expanded, 5382 reopened
[t=0.772777s, 11824 KB] New best heuristic value for lmcut(): 3
[t=0.774256s, 11824 KB] g=58, 14523 evaluated, 14522 expanded, 5382 reopened
[t=0.774296s, 11824 KB] New best heuristic value for lmcut(): 2
[t=0.774617s, 11824 KB] g=62, 14531 evaluated, 14530 expanded, 5382 reopened
[t=0.774649s, 11824 KB] New best heuristic value for lmcut(): 1
[t=0.774713s, 11824 KB] g=63, 14532 evaluated, 14531 expanded, 5382 reopened
[t=0.774743s, 11824 KB] Solution found!
[t=0.774789s, 11824 KB] Actual search time: 0.758707s
unstack f g (1)
stack f c (1)
unstack g e (1)
put-down g (1)
unstack e a (1)
put-down e (1)
unstack f c (1)
stack f e (1)
unstack a i (1)
put-down a (1)
pick-up c (1)
stack c a (1)
unstack i d (1)
stack i f (1)
unstack d h (1)
stack d g (1)
unstack h b (1)
put-down h (1)
pick-up b (1)
stack b c (1)
unstack d g (1)
stack d b (1)
pick-up g (1)
stack g d (1)
unstack i f (1)
stack i g (1)
unstack f e (1)
stack f i (1)
pick-up e (1)
stack e h (1)
unstack f i (1)
stack f e (1)
unstack i g (1)
stack i f (1)
unstack g d (1)
stack g i (1)
unstack d b (1)
stack d g (1)
unstack b c (1)
put-down b (1)
unstack d g (1)
stack d b (1)
unstack g i (1)
stack g d (1)
unstack c a (1)
stack c g (1)
pick-up a (1)
stack a i (1)
unstack c g (1)
stack c a (1)
unstack g d (1)
stack g c (1)
unstack d b (1)
put-down d (1)
unstack g c (1)
stack g d (1)
pick-up b (1)
stack b c (1)
unstack g d (1)
put-down g (1)
pick-up d (1)
stack d b (1)
pick-up g (1)
stack g d (1)
[t=0.775522s, 11824 KB] Plan length: 64 step(s).
[t=0.775665s, 11824 KB] Plan cost: 64
[t=0.775703s, 11824 KB] Solution Timestep: 1681850626073 millisecond(s).
[t=0.775742s, 11824 KB] Timestamp: 1681850626073 millisecond(s).
[t=0.775785s, 11824 KB] Expanded 14532 state(s).
[t=0.775827s, 11824 KB] Reopened 5382 state(s).
[t=0.775861s, 11824 KB] Evaluated 14533 state(s).
[t=0.775894s, 11824 KB] Evaluations: 9151
[t=0.775926s, 11824 KB] Generated 56236 state(s).
[t=0.775958s, 11824 KB] Dead ends: 0 state(s).
[t=0.77599s, 11824 KB] Number of registered states: 9151
[t=0.776024s, 11824 KB] Int hash set load factor: 9151/16384 = 0.558533
[t=0.776058s, 11824 KB] Int hash set resizes: 14
[t=0.776088s, 11824 KB] Best solution cost so far: 64
[t=0.776121s, 11824 KB] Solution found - keep searching
[t=0.776152s, 11824 KB] Building successor generator...done!
[t=0.776406s, 11824 KB] peak memory difference for successor generator creation: 0 KB
[t=0.776459s, 11824 KB] time for successor generation creation: 0s
[t=0.776492s, 11824 KB] Variables: 19
[t=0.776528s, 11824 KB] FactPairs: 110
[t=0.776559s, 11824 KB] Bytes per state: 8
[t=0.776588s, 11824 KB] Starting search: lazy_wastar([h],w=4)
[t=0.776633s, 11824 KB] Conducting lazy best first search, (real) bound = 64
[t=0.776665s, 11824 KB] Start Timestep: 1681850626075 millisecond(s).
[t=0.776697s, 11824 KB] New best heuristic value for lmcut(): 16
[t=0.776829s, 11824 KB] g=0, 1 evaluated, 0 expanded
[t=0.776863s, 11824 KB] Initial heuristic value for lmcut(): 16
[t=0.77695s, 11824 KB] New best heuristic value for lmcut(): 15
[t=0.778511s, 11824 KB] g=5, 19 evaluated, 18 expanded
[t=0.784291s, 11824 KB] New best heuristic value for lmcut(): 14
[t=0.784594s, 11824 KB] g=9, 86 evaluated, 85 expanded, 1 reopened
[t=0.820043s, 11824 KB] New best heuristic value for lmcut(): 13
[t=0.82041s, 11824 KB] g=15, 538 evaluated, 537 expanded, 34 reopened
[t=0.820442s, 11824 KB] New best heuristic value for lmcut(): 12
[t=0.821256s, 11824 KB] g=20, 551 evaluated, 550 expanded, 34 reopened
[t=0.821284s, 11824 KB] New best heuristic value for lmcut(): 11
[t=0.82142s, 11824 KB] g=21, 553 evaluated, 552 expanded, 34 reopened
[t=0.821446s, 11824 KB] New best heuristic value for lmcut(): 10
[t=0.822173s, 11824 KB] g=25, 567 evaluated, 566 expanded, 34 reopened
[t=0.872319s, 11824 KB] New best heuristic value for lmcut(): 9
[t=0.872585s, 11824 KB] g=29, 1326 evaluated, 1325 expanded, 158 reopened
[t=2.16592s, 12332 KB] New best heuristic value for lmcut(): 8
[t=2.16678s, 12332 KB] g=31, 21840 evaluated, 21839 expanded, 5103 reopened
[t=2.16683s, 12332 KB] New best heuristic value for lmcut(): 7
[t=2.16798s, 12332 KB] g=35, 21857 evaluated, 21856 expanded, 5103 reopened
[t=2.16802s, 12332 KB] New best heuristic value for lmcut(): 6
[t=2.16816s, 12332 KB] g=36, 21859 evaluated, 21858 expanded, 5103 reopened
[t=2.1682s, 12332 KB] New best heuristic value for lmcut(): 5
[t=2.16829s, 12332 KB] g=37, 21860 evaluated, 21859 expanded, 5103 reopened
[t=2.16833s, 12332 KB] New best heuristic value for lmcut(): 4
[t=2.16841s, 12332 KB] g=38, 21861 evaluated, 21860 expanded, 5103 reopened
[t=2.1689s, 12332 KB] New best heuristic value for lmcut(): 3
[t=2.1689s, 12332 KB] g=46, 21898 evaluated, 21897 expanded, 5106 reopened
[t=2.1689s, 12332 KB] New best heuristic value for lmcut(): 2
[t=2.1689s, 12332 KB] g=50, 21907 evaluated, 21906 expanded, 5106 reopened
[t=2.1689s, 12332 KB] New best heuristic value for lmcut(): 1
[t=2.1689s, 12332 KB] g=51, 21908 evaluated, 21907 expanded, 5106 reopened
[t=2.1689s, 12332 KB] Solution found!
[t=2.1689s, 12332 KB] Actual search time: 1.39221s
unstack f g (1)
stack f c (1)
unstack g e (1)
put-down g (1)
unstack e a (1)
stack e g (1)
unstack a i (1)
stack a e (1)
unstack i d (1)
stack i f (1)
unstack a e (1)
stack a i (1)
unstack d h (1)
stack d a (1)
unstack h b (1)
put-down h (1)
unstack d a (1)
stack d b (1)
unstack e g (1)
stack e h (1)
pick-up g (1)
stack g d (1)
unstack a i (1)
stack a e (1)
unstack i f (1)
stack i g (1)
unstack a e (1)
stack a i (1)
unstack f c (1)
stack f e (1)
unstack a i (1)
stack a c (1)
unstack i g (1)
stack i f (1)
unstack a c (1)
stack a i (1)
pick-up c (1)
stack c a (1)
unstack g d (1)
stack g c (1)
unstack d b (1)
put-down d (1)
unstack g c (1)
stack g d (1)
pick-up b (1)
stack b c (1)
unstack g d (1)
put-down g (1)
pick-up d (1)
stack d b (1)
pick-up g (1)
stack g d (1)
[t=2.1689s, 12332 KB] Plan length: 52 step(s).
[t=2.1689s, 12332 KB] Plan cost: 52
[t=2.1689s, 12332 KB] Solution Timestep: 1681850628034 millisecond(s).
[t=2.1689s, 12332 KB] Timestamp: 1681850628034 millisecond(s).
[t=2.1689s, 12332 KB] Expanded 21908 state(s).
[t=2.1689s, 12332 KB] Reopened 5106 state(s).
[t=2.1689s, 12332 KB] Evaluated 21909 state(s).
[t=2.1689s, 12332 KB] Evaluations: 16803
[t=2.1689s, 12332 KB] Generated 86953 state(s).
[t=2.1689s, 12332 KB] Dead ends: 0 state(s).
[t=2.1689s, 12332 KB] Number of registered states: 16803
[t=2.1689s, 12332 KB] Int hash set load factor: 16803/32768 = 0.512787
[t=2.1689s, 12332 KB] Int hash set resizes: 15
[t=2.1689s, 12332 KB] Best solution cost so far: 52
[t=2.1689s, 12332 KB] Solution found - keep searching
[t=2.1689s, 12332 KB] Building successor generator...done!
[t=2.1689s, 12332 KB] peak memory difference for successor generator creation: 0 KB
[t=2.1689s, 12332 KB] time for successor generation creation: 0s
[t=2.1689s, 12332 KB] Variables: 19
[t=2.1689s, 12332 KB] FactPairs: 110
[t=2.17222s, 12332 KB] Bytes per state: 8
[t=2.17222s, 12332 KB] Starting search: lazy_wastar([h],w=3)
[t=2.17222s, 12332 KB] Conducting lazy best first search, (real) bound = 52
[t=2.17222s, 12332 KB] Start Timestep: 1681850628041 millisecond(s).
[t=2.17222s, 12332 KB] New best heuristic value for lmcut(): 16
[t=2.17222s, 12332 KB] g=0, 1 evaluated, 0 expanded
[t=2.17222s, 12332 KB] Initial heuristic value for lmcut(): 16
[t=2.17401s, 12332 KB] New best heuristic value for lmcut(): 15
[t=2.17401s, 12332 KB] g=5, 19 evaluated, 18 expanded
[t=2.17681s, 12332 KB] New best heuristic value for lmcut(): 14
[t=2.17681s, 12332 KB] g=9, 80 evaluated, 79 expanded
[t=2.21984s, 12332 KB] New best heuristic value for lmcut(): 13
[t=2.21984s, 12332 KB] g=15, 510 evaluated, 509 expanded, 16 reopened
[t=2.22597s, 12332 KB] New best heuristic value for lmcut(): 12
[t=2.22597s, 12332 KB] g=17, 577 evaluated, 576 expanded, 20 reopened
[t=2.23311s, 12332 KB] New best heuristic value for lmcut(): 11
[t=2.23311s, 12332 KB] g=22, 633 evaluated, 632 expanded, 27 reopened
[t=2.23311s, 12332 KB] New best heuristic value for lmcut(): 10
[t=2.23311s, 12332 KB] g=23, 643 evaluated, 642 expanded, 27 reopened
[t=2.26623s, 12332 KB] New best heuristic value for lmcut(): 9
[t=2.26935s, 12332 KB] g=25, 1062 evaluated, 1061 expanded, 64 reopened
[t=2.38213s, 12332 KB] New best heuristic value for lmcut(): 8
[t=2.38399s, 12332 KB] g=29, 2460 evaluated, 2459 expanded, 190 reopened
[t=2.82885s, 12332 KB] New best heuristic value for lmcut(): 7
[t=2.83215s, 12332 KB] g=31, 8754 evaluated, 8753 expanded, 1314 reopened
[t=2.83363s, 12332 KB] New best heuristic value for lmcut(): 6
[t=2.83604s, 12332 KB] g=35, 8815 evaluated, 8814 expanded, 1315 reopened
[t=2.84337s, 12332 KB] New best heuristic value for lmcut(): 5
[t=2.8465s, 12332 KB] g=37, 8994 evaluated, 8993 expanded, 1345 reopened
[t=2.84655s, 12332 KB] New best heuristic value for lmcut(): 4
[t=2.84665s, 12332 KB] g=38, 8995 evaluated, 8994 expanded, 1345 reopened
[t=2.88486s, 12332 KB] New best heuristic value for lmcut(): 3
[t=2.88509s, 12332 KB] g=34, 9650 evaluated, 9649 expanded, 1498 reopened
[t=2.88527s, 12332 KB] New best heuristic value for lmcut(): 2
[t=2.88553s, 12332 KB] g=38, 9659 evaluated, 9658 expanded, 1498 reopened
[t=2.88556s, 12332 KB] New best heuristic value for lmcut(): 1
[t=2.88563s, 12332 KB] g=39, 9660 evaluated, 9659 expanded, 1498 reopened
[t=2.88572s, 12332 KB] Solution found!
[t=2.88581s, 12332 KB] Actual search time: 0.713583s
unstack f g (1)
put-down f (1)
unstack g e (1)
put-down g (1)
unstack e a (1)
put-down e (1)
unstack a i (1)
put-down a (1)
pick-up c (1)
stack c a (1)
unstack i d (1)
stack i f (1)
unstack d h (1)
put-down d (1)
pick-up g (1)
stack g d (1)
unstack h b (1)
put-down h (1)
pick-up e (1)
stack e h (1)
unstack i f (1)
stack i b (1)
pick-up f (1)
stack f e (1)
unstack i b (1)
stack i f (1)
unstack c a (1)
stack c b (1)
pick-up a (1)
stack a i (1)
unstack c b (1)
stack c a (1)
pick-up b (1)
stack b c (1)
unstack g d (1)
put-down g (1)
pick-up d (1)
stack d b (1)
pick-up g (1)
stack g d (1)
[t=2.88623s, 12332 KB] Plan length: 40 step(s).
[t=2.88628s, 12332 KB] Plan cost: 40
[t=2.88631s, 12332 KB] Solution Timestep: 1681850628953 millisecond(s).
[t=2.88634s, 12332 KB] Timestamp: 1681850628953 millisecond(s).
[t=2.88637s, 12332 KB] Expanded 9660 state(s).
[t=2.8864s, 12332 KB] Reopened 1498 state(s).
[t=2.88643s, 12332 KB] Evaluated 9661 state(s).
[t=2.88646s, 12332 KB] Evaluations: 8163
[t=2.88649s, 12332 KB] Generated 38485 state(s).
[t=2.88652s, 12332 KB] Dead ends: 0 state(s).
[t=2.88655s, 12332 KB] Number of registered states: 8163
[t=2.88658s, 12332 KB] Int hash set load factor: 8163/16384 = 0.49823
[t=2.88661s, 12332 KB] Int hash set resizes: 14
[t=2.88664s, 12332 KB] Best solution cost so far: 40
[t=2.88667s, 12332 KB] Solution found - keep searching
[t=2.8867s, 12332 KB] Building successor generator...done!
[t=2.8869s, 12332 KB] peak memory difference for successor generator creation: 0 KB
[t=2.88695s, 12332 KB] time for successor generation creation: 0s
[t=2.88698s, 12332 KB] Variables: 19
[t=2.88701s, 12332 KB] FactPairs: 110
[t=2.88704s, 12332 KB] Bytes per state: 8
[t=2.88707s, 12332 KB] Starting search: lazy_wastar([h],w=2)
[t=2.88711s, 12332 KB] Conducting lazy best first search, (real) bound = 40
[t=2.88714s, 12332 KB] Start Timestep: 1681850628954 millisecond(s).
[t=2.88717s, 12332 KB] New best heuristic value for lmcut(): 16
[t=2.88733s, 12332 KB] g=0, 1 evaluated, 0 expanded
[t=2.88736s, 12332 KB] Initial heuristic value for lmcut(): 16
[t=2.88811s, 12332 KB] New best heuristic value for lmcut(): 15
[t=2.8892s, 12332 KB] g=5, 19 evaluated, 18 expanded
[t=2.89935s, 12332 KB] New best heuristic value for lmcut(): 14
[t=2.90044s, 12332 KB] g=9, 132 evaluated, 131 expanded
[t=2.99955s, 12332 KB] New best heuristic value for lmcut(): 13
[t=3.00027s, 12332 KB] g=15, 1146 evaluated, 1145 expanded
[t=3.0062s, 12332 KB] New best heuristic value for lmcut(): 12
[t=3.00634s, 12332 KB] g=17, 1213 evaluated, 1212 expanded
[t=3.4981s, 12332 KB] New best heuristic value for lmcut(): 11
[t=3.49977s, 12332 KB] g=19, 6413 evaluated, 6412 expanded, 66 reopened
[t=3.49981s, 12332 KB] New best heuristic value for lmcut(): 10
[t=3.50076s, 12332 KB] g=21, 6425 evaluated, 6424 expanded, 66 reopened
[t=3.76646s, 12332 KB] New best heuristic value for lmcut(): 9
[t=3.76856s, 12332 KB] g=23, 9422 evaluated, 9421 expanded, 227 reopened
[t=3.79379s, 12332 KB] New best heuristic value for lmcut(): 8
[t=3.79469s, 12332 KB] g=27, 9781 evaluated, 9780 expanded, 252 reopened
[t=5.25397s, 12792 KB] New best heuristic value for lmcut(): 7
[t=5.25454s, 12792 KB] g=26, 27279 evaluated, 27278 expanded, 1507 reopened
[t=5.25459s, 12792 KB] New best heuristic value for lmcut(): 6
[t=5.25469s, 12792 KB] g=27, 27280 evaluated, 27279 expanded, 1507 reopened
[t=5.25472s, 12792 KB] New best heuristic value for lmcut(): 5
[t=5.25481s, 12792 KB] g=28, 27281 evaluated, 27280 expanded, 1507 reopened
[t=5.25484s, 12792 KB] New best heuristic value for lmcut(): 4
[t=5.25498s, 12792 KB] g=29, 27283 evaluated, 27282 expanded, 1507 reopened
[t=5.25501s, 12792 KB] New best heuristic value for lmcut(): 3
[t=5.25743s, 12792 KB] g=33, 27328 evaluated, 27327 expanded, 1508 reopened
[t=5.25747s, 12792 KB] New best heuristic value for lmcut(): 2
[t=5.25754s, 12792 KB] g=34, 27329 evaluated, 27328 expanded, 1508 reopened
[t=5.25757s, 12792 KB] New best heuristic value for lmcut(): 1
[t=5.25764s, 12792 KB] g=35, 27330 evaluated, 27329 expanded, 1508 reopened
[t=5.25768s, 12792 KB] Solution found!
[t=5.25774s, 12792 KB] Actual search time: 2.37057s
unstack f g (1)
stack f c (1)
unstack g e (1)
put-down g (1)
unstack e a (1)
stack e g (1)
unstack a i (1)
put-down a (1)
unstack i d (1)
stack i f (1)
unstack d h (1)
stack d e (1)
unstack h b (1)
put-down h (1)
unstack d e (1)
stack d b (1)
unstack e g (1)
stack e h (1)
unstack i f (1)
stack i a (1)
unstack f c (1)
stack f e (1)
unstack i a (1)
stack i f (1)
pick-up a (1)
stack a i (1)
pick-up c (1)
stack c a (1)
unstack d b (1)
stack d g (1)
pick-up b (1)
stack b c (1)
unstack d g (1)
stack d b (1)
pick-up g (1)
stack g d (1)
[t=5.25813s, 12792 KB] Plan length: 36 step(s).
[t=5.25821s, 12792 KB] Plan cost: 36
[t=5.25825s, 12792 KB] Solution Timestep: 1681850631448 millisecond(s).
[t=5.25828s, 12792 KB] Timestamp: 1681850631448 millisecond(s).
[t=5.25831s, 12792 KB] Expanded 27330 state(s).
[t=5.25834s, 12792 KB] Reopened 1508 state(s).
[t=5.25838s, 12792 KB] Evaluated 27331 state(s).
[t=5.25841s, 12792 KB] Evaluations: 25823
[t=5.25844s, 12792 KB] Generated 121175 state(s).
[t=5.25847s, 12792 KB] Dead ends: 0 state(s).
[t=5.2585s, 12792 KB] Number of registered states: 25823
[t=5.25853s, 12792 KB] Int hash set load factor: 25823/32768 = 0.788055
[t=5.25856s, 12792 KB] Int hash set resizes: 15
[t=5.2586s, 12792 KB] Best solution cost so far: 36
[t=5.25863s, 12792 KB] Solution found - keep searching
[t=5.25866s, 12792 KB] Building successor generator...done!
[t=5.25893s, 12792 KB] peak memory difference for successor generator creation: 0 KB
[t=5.25899s, 12792 KB] time for successor generation creation: 0s
[t=5.25902s, 12792 KB] Variables: 19
[t=5.25906s, 12792 KB] FactPairs: 110
[t=5.25909s, 12792 KB] Bytes per state: 8
[t=5.25912s, 12792 KB] Starting search: astar(h)
[t=5.25916s, 12792 KB] Conducting best first search with reopening closed nodes, (real) bound = 36
[t=5.25919s, 12792 KB] New best heuristic value for lmcut(): 16
[t=5.25935s, 12792 KB] g=0, 1 evaluated, 0 expanded
[t=5.25938s, 12792 KB] f = 16, 1 evaluated, 0 expanded
[t=5.25942s, 12792 KB] Initial heuristic value for lmcut(): 16
[t=5.25945s, 12792 KB] pruning method: none
[t=5.25949s, 12792 KB] Start Timestep: 1681850631449 millisecond(s).
[t=5.25952s, 12792 KB] f = 17, 3 evaluated, 1 expanded
[t=5.25979s, 12792 KB] f = 18, 6 evaluated, 3 expanded
[t=5.26014s, 12792 KB] f = 19, 9 evaluated, 6 expanded
[t=5.26103s, 12792 KB] f = 20, 16 evaluated, 9 expanded
[t=5.26148s, 12792 KB] New best heuristic value for lmcut(): 15
[t=5.26176s, 12792 KB] g=5, 19 evaluated, 11 expanded
[t=5.26197s, 12792 KB] f = 21, 31 evaluated, 18 expanded
[t=5.26477s, 12792 KB] f = 22, 57 evaluated, 30 expanded
[t=5.27248s, 12792 KB] f = 23, 127 evaluated, 66 expanded
[t=5.27266s, 12792 KB] New best heuristic value for lmcut(): 14
[t=5.27322s, 12792 KB] g=9, 132 evaluated, 71 expanded
[t=5.28224s, 12792 KB] f = 24, 227 evaluated, 113 expanded
[t=5.29203s, 12792 KB] f = 25, 321 evaluated, 175 expanded
[t=5.32728s, 12792 KB] f = 26, 699 evaluated, 345 expanded
[t=5.3783s, 12792 KB] f = 27, 1187 evaluated, 567 expanded
[t=5.55114s, 12792 KB] f = 28, 2936 evaluated, 1350 expanded
[t=5.55373s, 12792 KB] New best heuristic value for lmcut(): 13
[t=5.55389s, 12792 KB] g=15, 2937 evaluated, 1353 expanded
[t=5.86008s, 12792 KB] f = 29, 6071 evaluated, 2654 expanded
[t=5.86083s, 12792 KB] New best heuristic value for lmcut(): 12
[t=5.86123s, 12792 KB] g=17, 6074 evaluated, 2656 expanded
[t=6.90009s, 12792 KB] f = 30, 16553 evaluated, 7032 expanded
[t=6.9016s, 12792 KB] New best heuristic value for lmcut(): 11
[t=6.90173s, 12792 KB] g=19, 16554 evaluated, 7034 expanded
[t=8.38413s, 13308 KB] New best heuristic value for lmcut(): 10
[t=8.38774s, 13308 KB] g=20, 31621 evaluated, 13418 expanded
[t=8.38778s, 13308 KB] New best heuristic value for lmcut(): 9
[t=8.38803s, 13308 KB] g=21, 31624 evaluated, 13419 expanded
[t=8.38808s, 13308 KB] New best heuristic value for lmcut(): 8
[t=8.38865s, 13308 KB] g=22, 31633 evaluated, 13420 expanded
[t=8.38869s, 13308 KB] New best heuristic value for lmcut(): 7
[t=8.38878s, 13308 KB] g=23, 31634 evaluated, 13421 expanded
[t=8.38882s, 13308 KB] New best heuristic value for lmcut(): 6
[t=8.38926s, 13308 KB] g=24, 31642 evaluated, 13423 expanded
[t=8.3893s, 13308 KB] New best heuristic value for lmcut(): 5
[t=8.38954s, 13308 KB] g=25, 31646 evaluated, 13424 expanded
[t=8.38958s, 13308 KB] New best heuristic value for lmcut(): 4
[t=8.38975s, 13308 KB] g=26, 31649 evaluated, 13425 expanded
[t=8.38979s, 13308 KB] New best heuristic value for lmcut(): 3
[t=8.38995s, 13308 KB] g=27, 31652 evaluated, 13426 expanded
[t=8.38999s, 13308 KB] New best heuristic value for lmcut(): 2
[t=8.39009s, 13308 KB] g=28, 31654 evaluated, 13427 expanded
[t=8.39012s, 13308 KB] New best heuristic value for lmcut(): 1
[t=8.39023s, 13308 KB] g=29, 31656 evaluated, 13428 expanded
[t=8.39026s, 13308 KB] New best heuristic value for lmcut(): 0
[t=8.39031s, 13308 KB] g=30, 31657 evaluated, 13429 expanded
[t=8.39035s, 13308 KB] Solution found!
[t=8.39038s, 13308 KB] Actual search time: 3.13086s
unstack f g (1)
stack f c (1)
unstack g e (1)
put-down g (1)
unstack e a (1)
stack e g (1)
unstack a i (1)
put-down a (1)
unstack i d (1)
stack i a (1)
unstack d h (1)
put-down d (1)
unstack h b (1)
put-down h (1)
unstack e g (1)
stack e h (1)
unstack f c (1)
stack f e (1)
unstack i a (1)
stack i f (1)
pick-up a (1)
stack a i (1)
pick-up c (1)
stack c a (1)
pick-up b (1)
stack b c (1)
pick-up d (1)
stack d b (1)
pick-up g (1)
stack g d (1)
[t=8.3907s, 13308 KB] Plan length: 30 step(s).
[t=8.39075s, 13308 KB] Plan cost: 30
[t=8.39079s, 13308 KB] Solution Timestep: 1681850634711 millisecond(s).
[t=8.39082s, 13308 KB] Timestamp: 1681850634711 millisecond(s).
[t=8.39085s, 13308 KB] Expanded 13430 state(s).
[t=8.39089s, 13308 KB] Reopened 0 state(s).
[t=8.39092s, 13308 KB] Evaluated 31657 state(s).
[t=8.39095s, 13308 KB] Evaluations: 31657
[t=8.39098s, 13308 KB] Generated 59760 state(s).
[t=8.39101s, 13308 KB] Dead ends: 0 state(s).
[t=8.39104s, 13308 KB] Expanded until last jump: 7032 state(s).
[t=8.39108s, 13308 KB] Reopened until last jump: 0 state(s).
[t=8.39111s, 13308 KB] Evaluated until last jump: 16553 state(s).
[t=8.39114s, 13308 KB] Generated until last jump: 30848 state(s).
[t=8.39117s, 13308 KB] Number of registered states: 31657
[t=8.3912s, 13308 KB] Int hash set load factor: 31657/65536 = 0.483047
[t=8.39124s, 13308 KB] Int hash set resizes: 16
[t=8.39127s, 13308 KB] Best solution cost so far: 30
[t=8.3913s, 13308 KB] Solution found - keep searching
[t=8.39133s, 13308 KB] Optimal Solution: found
[t=8.39156s, 13308 KB] Actual search time: 8.37624s
[t=8.3916s, 13308 KB] Cumulative statistics:
[t=8.3916s, 13308 KB] Timestamp: 1681850634712 millisecond(s).
[t=8.3916s, 13308 KB] Expanded 86860 state(s).
[t=8.3916s, 13308 KB] Reopened 13494 state(s).
[t=8.3916s, 13308 KB] Evaluated 105091 state(s).
[t=8.3916s, 13308 KB] Evaluations: 91597
[t=8.3916s, 13308 KB] Generated 362609 state(s).
[t=8.3916s, 13308 KB] Dead ends: 0 state(s).
[t=8.3916s, 13308 KB] Search time: 8.37648s
[t=8.3916s, 13308 KB] Total time: 8.3916s
Solution found.
Peak memory: 13308 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan.1 sas_plan.2 sas_plan.3 sas_plan.4 sas_plan.5
Checking plan: sas_plan.1
Plan executed successfully - checking goal
Plan valid
Final value: 64 
Checking plan: sas_plan.2
Plan executed successfully - checking goal
Plan valid
Final value: 52 
Checking plan: sas_plan.3
Plan executed successfully - checking goal
Plan valid
Final value: 40 
Checking plan: sas_plan.4
Plan executed successfully - checking goal
Plan valid
Final value: 36 
Checking plan: sas_plan.5
Plan executed successfully - checking goal
Plan valid
Final value: 30 

Successful plans:
Value: 64
 sas_plan.1 64 

Value: 52
 sas_plan.2 52 

Value: 40
 sas_plan.3 40 

Value: 36
 sas_plan.4 36 

Value: 30
 sas_plan.5 30 

validate exit code: 0

INFO     Planner time: 8.70s
