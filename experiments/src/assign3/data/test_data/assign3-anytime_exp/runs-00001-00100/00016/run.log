INFO     planner time limit: 600s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/.venv/bin/python3 /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-67ec7e23ae54ba9fbe4811c609f97e6be26f409d_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.004s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.007s wall-clock]
308 relevant atoms
207 auxiliary atoms
515 final queue length
858 total queue pushes
Completing instantiation... [0.010s CPU, 0.011s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.020s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
10 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.013s wall-clock]
234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.008s wall-clock]
Reordering and filtering variables...
19 of 19 variables necessary.
10 of 19 mutex groups necessary.
162 of 162 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 19
Translator derived variables: 0
Translator facts: 110
Translator goal facts: 8
Translator mutex groups: 10
Translator total mutex groups size: 100
Translator operators: 162
Translator axioms: 0
Translator task size: 1425
Translator peak memory: 32824 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.060s CPU, 0.065s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 599s
INFO     search memory limit: 3584 MB
INFO     search command line string: /home/dawson/Documents/Masters/Thesis/search/code/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-67ec7e23ae54ba9fbe4811c609f97e6be26f409d_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'iterated([
            lazy_wastar([h],w=5),
            lazy_wastar([h],w=4),
            lazy_wastar([h],w=3),
            lazy_wastar([h],w=2),
            astar(h)
        ],continue_on_fail=true)' --internal-plan-file sas_plan < output.sas
[t=0.00399972s, 10888 KB] reading input...
[t=0.00492227s, 10888 KB] done reading input!
[t=0.0115102s, 11276 KB] Initializing landmark cut heuristic...
[t=0.0127759s, 11276 KB] Building successor generator...done!
[t=0.0132191s, 11276 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0133011s, 11276 KB] time for successor generation creation: 0s
[t=0.0133482s, 11276 KB] Variables: 19
[t=0.0133969s, 11276 KB] FactPairs: 110
[t=0.0134391s, 11276 KB] Bytes per state: 8
[t=0.0134812s, 11276 KB] Start Timestep: 1681850624933 millisecond(s).
[t=0.0136251s, 11276 KB] Building successor generator...done!
[t=0.0138128s, 11276 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0138822s, 11276 KB] time for successor generation creation: 0s
[t=0.0139261s, 11276 KB] Variables: 19
[t=0.01397s, 11276 KB] FactPairs: 110
[t=0.0140122s, 11276 KB] Bytes per state: 8
[t=0.0140538s, 11276 KB] Starting search: lazy_wastar([h],w=5)
[t=0.0141163s, 11276 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0141593s, 11276 KB] Start Timestep: 1681850624934 millisecond(s).
[t=0.0142017s, 11276 KB] New best heuristic value for lmcut(): 16
[t=0.0144445s, 11276 KB] g=0, 1 evaluated, 0 expanded
[t=0.0144903s, 11276 KB] Initial heuristic value for lmcut(): 16
[t=0.0181082s, 11276 KB] New best heuristic value for lmcut(): 15
[t=0.0207927s, 11276 KB] g=12, 52 evaluated, 51 expanded, 4 reopened
[t=0.0208372s, 11276 KB] New best heuristic value for lmcut(): 14
[t=0.0210038s, 11276 KB] g=13, 53 evaluated, 52 expanded, 4 reopened
[t=0.0248978s, 11276 KB] New best heuristic value for lmcut(): 13
[t=0.0271824s, 11276 KB] g=19, 107 evaluated, 106 expanded, 4 reopened
[t=0.0272264s, 11276 KB] New best heuristic value for lmcut(): 12
[t=0.027654s, 11276 KB] g=21, 111 evaluated, 110 expanded, 4 reopened
[t=0.0276908s, 11276 KB] New best heuristic value for lmcut(): 11
[t=0.0281825s, 11276 KB] g=23, 116 evaluated, 115 expanded, 4 reopened
[t=0.0286982s, 11276 KB] New best heuristic value for lmcut(): 10
[t=0.0302828s, 11276 KB] g=25, 137 evaluated, 136 expanded, 4 reopened
[t=0.0303228s, 11276 KB] New best heuristic value for lmcut(): 9
[t=0.0320347s, 11276 KB] g=31, 157 evaluated, 156 expanded, 4 reopened
[t=0.0775943s, 11276 KB] New best heuristic value for lmcut(): 8
[t=0.0783064s, 11276 KB] g=35, 796 evaluated, 795 expanded, 91 reopened
[t=0.0783457s, 11276 KB] New best heuristic value for lmcut(): 7
[t=0.0784451s, 11276 KB] g=36, 797 evaluated, 796 expanded, 91 reopened
[t=0.27426s, 11408 KB] New best heuristic value for lmcut(): 6
[t=0.274641s, 11408 KB] g=42, 3870 evaluated, 3869 expanded, 628 reopened
[t=0.274707s, 11408 KB] New best heuristic value for lmcut(): 5
[t=0.275329s, 11408 KB] g=46, 3882 evaluated, 3881 expanded, 628 reopened
[t=0.275364s, 11408 KB] New best heuristic value for lmcut(): 4
[t=0.275438s, 11408 KB] g=47, 3883 evaluated, 3882 expanded, 628 reopened
[t=0.275472s, 11408 KB] New best heuristic value for lmcut(): 3
[t=0.275545s, 11408 KB] g=48, 3884 evaluated, 3883 expanded, 628 reopened
[t=0.275637s, 11408 KB] New best heuristic value for lmcut(): 2
[t=0.275945s, 11408 KB] g=52, 3892 evaluated, 3891 expanded, 628 reopened
[t=0.275976s, 11408 KB] New best heuristic value for lmcut(): 1
[t=0.276037s, 11408 KB] g=53, 3893 evaluated, 3892 expanded, 628 reopened
[t=0.276066s, 11408 KB] Solution found!
[t=0.276111s, 11408 KB] Actual search time: 0.26191s
unstack f e (1)
put-down f (1)
unstack e b (1)
put-down e (1)
pick-up f (1)
stack f e (1)
unstack b d (1)
stack b f (1)
unstack d c (1)
stack d b (1)
unstack c i (1)
put-down c (1)
unstack i g (1)
put-down i (1)
unstack d b (1)
stack d i (1)
unstack g h (1)
stack g d (1)
unstack h a (1)
stack h g (1)
unstack b f (1)
stack b h (1)
pick-up a (1)
stack a b (1)
unstack f e (1)
stack f a (1)
pick-up e (1)
stack e c (1)
unstack f a (1)
stack f e (1)
unstack a b (1)
stack a f (1)
unstack b h (1)
put-down b (1)
unstack a f (1)
stack a b (1)
unstack h g (1)
stack h a (1)
unstack g d (1)
stack g f (1)
unstack h a (1)
stack h g (1)
unstack a b (1)
stack a d (1)
pick-up b (1)
stack b h (1)
unstack a d (1)
stack a b (1)
unstack d i (1)
put-down d (1)
pick-up i (1)
stack i a (1)
pick-up d (1)
stack d i (1)
[t=0.276587s, 11408 KB] Plan length: 54 step(s).
[t=0.276634s, 11408 KB] Plan cost: 54
[t=0.276665s, 11408 KB] Solution Timestep: 1681850625221 millisecond(s).
[t=0.276695s, 11408 KB] Timestamp: 1681850625221 millisecond(s).
[t=0.276729s, 11408 KB] Expanded 3893 state(s).
[t=0.276757s, 11408 KB] Reopened 628 state(s).
[t=0.276785s, 11408 KB] Evaluated 3894 state(s).
[t=0.276812s, 11408 KB] Evaluations: 3266
[t=0.276841s, 11408 KB] Generated 15054 state(s).
[t=0.276868s, 11408 KB] Dead ends: 0 state(s).
[t=0.276896s, 11408 KB] Number of registered states: 3266
[t=0.276924s, 11408 KB] Int hash set load factor: 3266/4096 = 0.797363
[t=0.276953s, 11408 KB] Int hash set resizes: 12
[t=0.276979s, 11408 KB] Best solution cost so far: 54
[t=0.277007s, 11408 KB] Solution found - keep searching
[t=0.277035s, 11408 KB] Building successor generator...done!
[t=0.277193s, 11408 KB] peak memory difference for successor generator creation: 0 KB
[t=0.277241s, 11408 KB] time for successor generation creation: 0s
[t=0.27727s, 11408 KB] Variables: 19
[t=0.277301s, 11408 KB] FactPairs: 110
[t=0.27733s, 11408 KB] Bytes per state: 8
[t=0.277358s, 11408 KB] Starting search: lazy_wastar([h],w=4)
[t=0.277398s, 11408 KB] Conducting lazy best first search, (real) bound = 54
[t=0.277427s, 11408 KB] Start Timestep: 1681850625222 millisecond(s).
[t=0.277456s, 11408 KB] New best heuristic value for lmcut(): 16
[t=0.277594s, 11408 KB] g=0, 1 evaluated, 0 expanded
[t=0.277624s, 11408 KB] Initial heuristic value for lmcut(): 16
[t=0.2827s, 11408 KB] New best heuristic value for lmcut(): 15
[t=0.284247s, 11408 KB] g=12, 73 evaluated, 72 expanded, 3 reopened
[t=0.284301s, 11408 KB] New best heuristic value for lmcut(): 14
[t=0.284476s, 11408 KB] g=13, 74 evaluated, 73 expanded, 3 reopened
[t=0.290503s, 11408 KB] New best heuristic value for lmcut(): 13
[t=0.290874s, 11408 KB] g=19, 149 evaluated, 148 expanded, 3 reopened
[t=0.290915s, 11408 KB] New best heuristic value for lmcut(): 12
[t=0.291272s, 11408 KB] g=21, 153 evaluated, 152 expanded, 3 reopened
[t=0.291305s, 11408 KB] New best heuristic value for lmcut(): 11
[t=0.291781s, 11408 KB] g=23, 158 evaluated, 157 expanded, 3 reopened
[t=0.291813s, 11408 KB] New best heuristic value for lmcut(): 10
[t=0.293506s, 11408 KB] g=25, 179 evaluated, 178 expanded, 3 reopened
[t=0.294354s, 11408 KB] New best heuristic value for lmcut(): 9
[t=0.296282s, 11408 KB] g=31, 216 evaluated, 215 expanded, 4 reopened
[t=0.392662s, 11408 KB] New best heuristic value for lmcut(): 8
[t=0.394057s, 11408 KB] g=30, 1622 evaluated, 1621 expanded, 156 reopened
[t=0.40449s, 11408 KB] New best heuristic value for lmcut(): 7
[t=0.404751s, 11408 KB] g=35, 1784 evaluated, 1783 expanded, 174 reopened
[t=1.0241s, 11760 KB] New best heuristic value for lmcut(): 6
[t=1.02633s, 11760 KB] g=31, 11879 evaluated, 11878 expanded, 2892 reopened
[t=1.02638s, 11760 KB] New best heuristic value for lmcut(): 5
[t=1.02664s, 11760 KB] g=33, 11883 evaluated, 11882 expanded, 2892 reopened
[t=1.02667s, 11760 KB] New best heuristic value for lmcut(): 4
[t=1.02681s, 11760 KB] g=34, 11885 evaluated, 11884 expanded, 2892 reopened
[t=1.02792s, 11760 KB] New best heuristic value for lmcut(): 3
[t=1.02827s, 11760 KB] g=39, 11920 evaluated, 11919 expanded, 2898 reopened
[t=1.02831s, 11760 KB] New best heuristic value for lmcut(): 2
[t=1.02837s, 11760 KB] g=40, 11921 evaluated, 11920 expanded, 2898 reopened
[t=1.0284s, 11760 KB] New best heuristic value for lmcut(): 1
[t=1.02846s, 11760 KB] g=41, 11922 evaluated, 11921 expanded, 2898 reopened
[t=1.02849s, 11760 KB] Solution found!
[t=1.02853s, 11760 KB] Actual search time: 0.751077s
unstack f e (1)
put-down f (1)
unstack e b (1)
stack e f (1)
unstack b d (1)
stack b e (1)
unstack d c (1)
put-down d (1)
unstack c i (1)
put-down c (1)
pick-up d (1)
stack d i (1)
unstack b e (1)
stack b d (1)
unstack e f (1)
stack e c (1)
pick-up f (1)
stack f e (1)
unstack b d (1)
put-down b (1)
unstack d i (1)
stack d b (1)
unstack i g (1)
stack i d (1)
unstack g h (1)
stack g f (1)
unstack h a (1)
stack h g (1)
unstack i d (1)
stack i a (1)
unstack d b (1)
put-down d (1)
pick-up b (1)
stack b h (1)
unstack i a (1)
stack i d (1)
pick-up a (1)
stack a b (1)
unstack i d (1)
stack i a (1)
pick-up d (1)
stack d i (1)
[t=1.02893s, 11760 KB] Plan length: 42 step(s).
[t=1.02898s, 11760 KB] Plan cost: 42
[t=1.02901s, 11760 KB] Solution Timestep: 1681850626140 millisecond(s).
[t=1.02904s, 11760 KB] Timestamp: 1681850626140 millisecond(s).
[t=1.02907s, 11760 KB] Expanded 11922 state(s).
[t=1.0291s, 11760 KB] Reopened 2898 state(s).
[t=1.02913s, 11760 KB] Evaluated 11923 state(s).
[t=1.02916s, 11760 KB] Evaluations: 9025
[t=1.02919s, 11760 KB] Generated 48011 state(s).
[t=1.02922s, 11760 KB] Dead ends: 0 state(s).
[t=1.02924s, 11760 KB] Number of registered states: 9025
[t=1.02927s, 11760 KB] Int hash set load factor: 9025/16384 = 0.550842
[t=1.0293s, 11760 KB] Int hash set resizes: 14
[t=1.02933s, 11760 KB] Best solution cost so far: 42
[t=1.02936s, 11760 KB] Solution found - keep searching
[t=1.02939s, 11760 KB] Building successor generator...done!
[t=1.02961s, 11760 KB] peak memory difference for successor generator creation: 0 KB
[t=1.02966s, 11760 KB] time for successor generation creation: 0s
[t=1.02969s, 11760 KB] Variables: 19
[t=1.02972s, 11760 KB] FactPairs: 110
[t=1.02975s, 11760 KB] Bytes per state: 8
[t=1.02978s, 11760 KB] Starting search: lazy_wastar([h],w=3)
[t=1.02982s, 11760 KB] Conducting lazy best first search, (real) bound = 42
[t=1.02985s, 11760 KB] Start Timestep: 1681850626142 millisecond(s).
[t=1.02988s, 11760 KB] New best heuristic value for lmcut(): 16
[t=1.03003s, 11760 KB] g=0, 1 evaluated, 0 expanded
[t=1.03006s, 11760 KB] Initial heuristic value for lmcut(): 16
[t=1.03468s, 11760 KB] New best heuristic value for lmcut(): 15
[t=1.03819s, 11760 KB] g=11, 81 evaluated, 80 expanded, 1 reopened
[t=1.04261s, 11760 KB] New best heuristic value for lmcut(): 14
[t=1.04496s, 11760 KB] g=13, 147 evaluated, 146 expanded, 2 reopened
[t=1.045s, 11760 KB] New best heuristic value for lmcut(): 13
[t=1.04513s, 11760 KB] g=14, 148 evaluated, 147 expanded, 2 reopened
[t=1.04516s, 11760 KB] New best heuristic value for lmcut(): 12
[t=1.04627s, 11760 KB] g=17, 160 evaluated, 159 expanded, 2 reopened
[t=1.04646s, 11760 KB] New best heuristic value for lmcut(): 11
[t=1.04652s, 11760 KB] g=18, 162 evaluated, 161 expanded, 2 reopened
[t=1.05746s, 11760 KB] New best heuristic value for lmcut(): 10
[t=1.05774s, 11760 KB] g=23, 307 evaluated, 306 expanded, 15 reopened
[t=1.05778s, 11760 KB] New best heuristic value for lmcut(): 9
[t=1.05844s, 11760 KB] g=25, 315 evaluated, 314 expanded, 15 reopened
[t=1.06935s, 11760 KB] New best heuristic value for lmcut(): 8
[t=1.0695s, 11760 KB] g=23, 463 evaluated, 462 expanded, 22 reopened
[t=1.06983s, 11760 KB] New best heuristic value for lmcut(): 7
[t=1.07016s, 11760 KB] g=24, 471 evaluated, 470 expanded, 22 reopened
[t=1.0702s, 11760 KB] New best heuristic value for lmcut(): 6
[t=1.0703s, 11760 KB] g=25, 472 evaluated, 471 expanded, 22 reopened
[t=1.07033s, 11760 KB] New best heuristic value for lmcut(): 5
[t=1.07076s, 11760 KB] g=26, 478 evaluated, 477 expanded, 22 reopened
[t=1.0708s, 11760 KB] New best heuristic value for lmcut(): 4
[t=1.07088s, 11760 KB] g=27, 479 evaluated, 478 expanded, 22 reopened
[t=1.07091s, 11760 KB] New best heuristic value for lmcut(): 3
[t=1.07097s, 11760 KB] g=28, 480 evaluated, 479 expanded, 22 reopened
[t=1.07101s, 11760 KB] New best heuristic value for lmcut(): 2
[t=1.07139s, 11760 KB] g=32, 489 evaluated, 488 expanded, 22 reopened
[t=1.07143s, 11760 KB] New best heuristic value for lmcut(): 1
[t=1.07149s, 11760 KB] g=33, 490 evaluated, 489 expanded, 22 reopened
[t=1.07152s, 11760 KB] Solution found!
[t=1.07157s, 11760 KB] Actual search time: 0.0416867s
unstack f e (1)
put-down f (1)
unstack e b (1)
put-down e (1)
unstack b d (1)
stack b f (1)
unstack d c (1)
stack d b (1)
unstack c i (1)
put-down c (1)
pick-up e (1)
stack e c (1)
unstack i g (1)
put-down i (1)
unstack d b (1)
stack d i (1)
unstack b f (1)
stack b d (1)
pick-up f (1)
stack f e (1)
unstack g h (1)
stack g f (1)
unstack h a (1)
stack h g (1)
unstack b d (1)
stack b h (1)
pick-up a (1)
stack a b (1)
unstack d i (1)
put-down d (1)
pick-up i (1)
stack i a (1)
pick-up d (1)
stack d i (1)
[t=1.07203s, 11760 KB] Plan length: 34 step(s).
[t=1.07209s, 11760 KB] Plan cost: 34
[t=1.07212s, 11760 KB] Solution Timestep: 1681850626187 millisecond(s).
[t=1.07215s, 11760 KB] Timestamp: 1681850626187 millisecond(s).
[t=1.07218s, 11760 KB] Expanded 490 state(s).
[t=1.07221s, 11760 KB] Reopened 22 state(s).
[t=1.07224s, 11760 KB] Evaluated 491 state(s).
[t=1.07226s, 11760 KB] Evaluations: 469
[t=1.07229s, 11760 KB] Generated 1699 state(s).
[t=1.07232s, 11760 KB] Dead ends: 0 state(s).
[t=1.07234s, 11760 KB] Number of registered states: 469
[t=1.07237s, 11760 KB] Int hash set load factor: 469/512 = 0.916016
[t=1.0724s, 11760 KB] Int hash set resizes: 9
[t=1.07243s, 11760 KB] Best solution cost so far: 34
[t=1.07246s, 11760 KB] Solution found - keep searching
[t=1.07253s, 11760 KB] Building successor generator...done!
[t=1.07273s, 11760 KB] peak memory difference for successor generator creation: 0 KB
[t=1.07278s, 11760 KB] time for successor generation creation: 0s
[t=1.0728s, 11760 KB] Variables: 19
[t=1.07284s, 11760 KB] FactPairs: 110
[t=1.07286s, 11760 KB] Bytes per state: 8
[t=1.07289s, 11760 KB] Starting search: lazy_wastar([h],w=2)
[t=1.07293s, 11760 KB] Conducting lazy best first search, (real) bound = 34
[t=1.07296s, 11760 KB] Start Timestep: 1681850626188 millisecond(s).
[t=1.07299s, 11760 KB] New best heuristic value for lmcut(): 16
[t=1.07313s, 11760 KB] g=0, 1 evaluated, 0 expanded
[t=1.07316s, 11760 KB] Initial heuristic value for lmcut(): 16
[t=1.08365s, 11760 KB] New best heuristic value for lmcut(): 15
[t=1.08699s, 11760 KB] g=11, 137 evaluated, 136 expanded
[t=1.08847s, 11760 KB] New best heuristic value for lmcut(): 14
[t=1.08933s, 11760 KB] g=12, 159 evaluated, 158 expanded
[t=1.08937s, 11760 KB] New best heuristic value for lmcut(): 13
[t=1.0895s, 11760 KB] g=13, 160 evaluated, 159 expanded
[t=1.09314s, 11760 KB] New best heuristic value for lmcut(): 12
[t=1.09373s, 11760 KB] g=17, 207 evaluated, 206 expanded, 1 reopened
[t=1.09377s, 11760 KB] New best heuristic value for lmcut(): 11
[t=1.09401s, 11760 KB] g=18, 209 evaluated, 208 expanded, 1 reopened
[t=1.09867s, 11760 KB] New best heuristic value for lmcut(): 10
[t=1.09919s, 11760 KB] g=18, 280 evaluated, 279 expanded, 16 reopened
[t=1.09924s, 11760 KB] New best heuristic value for lmcut(): 9
[t=1.09937s, 11760 KB] g=19, 281 evaluated, 280 expanded, 16 reopened
[t=1.09942s, 11760 KB] New best heuristic value for lmcut(): 8
[t=1.0995s, 11760 KB] g=20, 282 evaluated, 281 expanded, 16 reopened
[t=1.09953s, 11760 KB] New best heuristic value for lmcut(): 7
[t=1.09966s, 11760 KB] g=21, 284 evaluated, 283 expanded, 16 reopened
[t=1.09969s, 11760 KB] New best heuristic value for lmcut(): 6
[t=1.0999s, 11760 KB] g=23, 288 evaluated, 287 expanded, 16 reopened
[t=1.09994s, 11760 KB] New best heuristic value for lmcut(): 5
[t=1.10019s, 11760 KB] g=25, 293 evaluated, 292 expanded, 16 reopened
[t=1.10023s, 11760 KB] New best heuristic value for lmcut(): 4
[t=1.10034s, 11760 KB] g=26, 295 evaluated, 294 expanded, 16 reopened
[t=1.10243s, 11760 KB] New best heuristic value for lmcut(): 3
[t=1.1032s, 11760 KB] g=28, 348 evaluated, 347 expanded, 17 reopened
[t=1.10324s, 11760 KB] New best heuristic value for lmcut(): 2
[t=1.1041s, 11760 KB] g=32, 367 evaluated, 366 expanded, 17 reopened
[t=1.10414s, 11760 KB] New best heuristic value for lmcut(): 1
[t=1.10422s, 11760 KB] g=33, 368 evaluated, 367 expanded, 17 reopened
[t=1.10748s, 11760 KB] Solution found!
[t=1.10777s, 11760 KB] Actual search time: 0.0347809s
unstack f e (1)
put-down f (1)
unstack e b (1)
stack e f (1)
unstack b d (1)
put-down b (1)
unstack d c (1)
stack d b (1)
unstack c i (1)
put-down c (1)
unstack e f (1)
stack e c (1)
pick-up f (1)
stack f e (1)
unstack i g (1)
put-down i (1)
unstack g h (1)
stack g f (1)
unstack h a (1)
stack h g (1)
unstack d b (1)
stack d i (1)
pick-up b (1)
stack b h (1)
pick-up a (1)
stack a b (1)
unstack d i (1)
put-down d (1)
pick-up i (1)
stack i a (1)
pick-up d (1)
stack d i (1)
[t=1.10811s, 11760 KB] Plan length: 32 step(s).
[t=1.10816s, 11760 KB] Plan cost: 32
[t=1.10819s, 11760 KB] Solution Timestep: 1681850626226 millisecond(s).
[t=1.10822s, 11760 KB] Timestamp: 1681850626226 millisecond(s).
[t=1.10825s, 11760 KB] Expanded 456 state(s).
[t=1.1083s, 11760 KB] Reopened 53 state(s).
[t=1.10832s, 11760 KB] Evaluated 457 state(s).
[t=1.10835s, 11760 KB] Evaluations: 404
[t=1.10838s, 11760 KB] Generated 1566 state(s).
[t=1.10841s, 11760 KB] Dead ends: 0 state(s).
[t=1.10843s, 11760 KB] Number of registered states: 404
[t=1.10846s, 11760 KB] Int hash set load factor: 404/512 = 0.789062
[t=1.10849s, 11760 KB] Int hash set resizes: 9
[t=1.10852s, 11760 KB] Best solution cost so far: 32
[t=1.10855s, 11760 KB] Solution found - keep searching
[t=1.10857s, 11760 KB] Building successor generator...done!
[t=1.1087s, 11760 KB] peak memory difference for successor generator creation: 0 KB
[t=1.10875s, 11760 KB] time for successor generation creation: 0s
[t=1.10878s, 11760 KB] Variables: 19
[t=1.10881s, 11760 KB] FactPairs: 110
[t=1.10884s, 11760 KB] Bytes per state: 8
[t=1.10887s, 11760 KB] Starting search: astar(h)
[t=1.1089s, 11760 KB] Conducting best first search with reopening closed nodes, (real) bound = 32
[t=1.10893s, 11760 KB] New best heuristic value for lmcut(): 16
[t=1.10909s, 11760 KB] g=0, 1 evaluated, 0 expanded
[t=1.10912s, 11760 KB] f = 16, 1 evaluated, 0 expanded
[t=1.10915s, 11760 KB] Initial heuristic value for lmcut(): 16
[t=1.10919s, 11760 KB] pruning method: none
[t=1.10922s, 11760 KB] Start Timestep: 1681850626227 millisecond(s).
[t=1.10925s, 11760 KB] f = 17, 2 evaluated, 1 expanded
[t=1.10939s, 11760 KB] f = 19, 3 evaluated, 2 expanded
[t=1.10954s, 11760 KB] f = 20, 4 evaluated, 3 expanded
[t=1.10968s, 11760 KB] f = 21, 6 evaluated, 4 expanded
[t=1.11015s, 11760 KB] f = 22, 11 evaluated, 7 expanded
[t=1.11046s, 11760 KB] f = 23, 17 evaluated, 10 expanded
[t=1.11108s, 11760 KB] f = 24, 31 evaluated, 18 expanded
[t=1.11266s, 11760 KB] f = 25, 55 evaluated, 29 expanded
[t=1.12062s, 11760 KB] f = 26, 128 evaluated, 66 expanded
[t=1.12239s, 11760 KB] New best heuristic value for lmcut(): 15
[t=1.1233s, 11760 KB] g=11, 137 evaluated, 72 expanded
[t=1.12455s, 11760 KB] New best heuristic value for lmcut(): 14
[t=1.12548s, 11760 KB] g=12, 160 evaluated, 82 expanded
[t=1.12552s, 11760 KB] New best heuristic value for lmcut(): 13
[t=1.12584s, 11760 KB] g=13, 163 evaluated, 83 expanded
[t=1.12763s, 11760 KB] New best heuristic value for lmcut(): 12
[t=1.12946s, 11760 KB] g=14, 201 evaluated, 101 expanded
[t=1.1295s, 11760 KB] New best heuristic value for lmcut(): 11
[t=1.12971s, 11760 KB] g=15, 203 evaluated, 102 expanded
[t=1.13813s, 11760 KB] f = 27, 320 evaluated, 148 expanded
[t=1.17951s, 11760 KB] f = 28, 729 evaluated, 330 expanded
[t=1.17977s, 11760 KB] New best heuristic value for lmcut(): 10
[t=1.18024s, 11760 KB] g=18, 736 evaluated, 334 expanded
[t=1.18029s, 11760 KB] New best heuristic value for lmcut(): 9
[t=1.18053s, 11760 KB] g=19, 739 evaluated, 335 expanded
[t=1.18057s, 11760 KB] New best heuristic value for lmcut(): 8
[t=1.18073s, 11760 KB] g=20, 741 evaluated, 336 expanded
[t=1.18076s, 11760 KB] New best heuristic value for lmcut(): 7
[t=1.18103s, 11760 KB] g=21, 745 evaluated, 337 expanded
[t=1.18333s, 11760 KB] New best heuristic value for lmcut(): 6
[t=1.18677s, 11760 KB] g=22, 835 evaluated, 369 expanded
[t=1.18682s, 11760 KB] New best heuristic value for lmcut(): 5
[t=1.18696s, 11760 KB] g=23, 837 evaluated, 370 expanded
[t=1.187s, 11760 KB] New best heuristic value for lmcut(): 4
[t=1.18711s, 11760 KB] g=24, 839 evaluated, 371 expanded
[t=1.18714s, 11760 KB] New best heuristic value for lmcut(): 3
[t=1.18726s, 11760 KB] g=25, 841 evaluated, 372 expanded
[t=1.1873s, 11760 KB] New best heuristic value for lmcut(): 2
[t=1.18736s, 11760 KB] g=26, 842 evaluated, 373 expanded
[t=1.18739s, 11760 KB] New best heuristic value for lmcut(): 1
[t=1.18749s, 11760 KB] g=27, 844 evaluated, 374 expanded
[t=1.18752s, 11760 KB] New best heuristic value for lmcut(): 0
[t=1.18756s, 11760 KB] g=28, 845 evaluated, 375 expanded
[t=1.1876s, 11760 KB] Solution found!
[t=1.18763s, 11760 KB] Actual search time: 0.0783828s
unstack f e (1)
put-down f (1)
unstack e b (1)
stack e f (1)
unstack b d (1)
put-down b (1)
unstack d c (1)
put-down d (1)
unstack c i (1)
put-down c (1)
unstack e f (1)
stack e c (1)
pick-up f (1)
stack f e (1)
unstack i g (1)
stack i d (1)
unstack g h (1)
stack g f (1)
unstack h a (1)
stack h g (1)
pick-up b (1)
stack b h (1)
pick-up a (1)
stack a b (1)
unstack i d (1)
stack i a (1)
pick-up d (1)
stack d i (1)
[t=1.18797s, 11760 KB] Plan length: 28 step(s).
[t=1.18808s, 11760 KB] Plan cost: 28
[t=1.18812s, 11760 KB] Solution Timestep: 1681850626355 millisecond(s).
[t=1.18815s, 11760 KB] Timestamp: 1681850626355 millisecond(s).
[t=1.18819s, 11760 KB] Expanded 376 state(s).
[t=1.18822s, 11760 KB] Reopened 0 state(s).
[t=1.18825s, 11760 KB] Evaluated 845 state(s).
[t=1.18828s, 11760 KB] Evaluations: 845
[t=1.1883s, 11760 KB] Generated 1413 state(s).
[t=1.18833s, 11760 KB] Dead ends: 0 state(s).
[t=1.18836s, 11760 KB] Expanded until last jump: 330 state(s).
[t=1.18839s, 11760 KB] Reopened until last jump: 0 state(s).
[t=1.18843s, 11760 KB] Evaluated until last jump: 729 state(s).
[t=1.18846s, 11760 KB] Generated until last jump: 1242 state(s).
[t=1.18849s, 11760 KB] Number of registered states: 845
[t=1.18853s, 11760 KB] Int hash set load factor: 845/1024 = 0.825195
[t=1.18856s, 11760 KB] Int hash set resizes: 10
[t=1.18859s, 11760 KB] Best solution cost so far: 28
[t=1.18862s, 11760 KB] Solution found - keep searching
[t=1.18865s, 11760 KB] Optimal Solution: found
[t=1.18871s, 11760 KB] Actual search time: 1.17508s
[t=1.18874s, 11760 KB] Cumulative statistics:
[t=1.18874s, 11760 KB] Timestamp: 1681850626355 millisecond(s).
[t=1.18874s, 11760 KB] Expanded 17137 state(s).
[t=1.18874s, 11760 KB] Reopened 3601 state(s).
[t=1.18874s, 11760 KB] Evaluated 17610 state(s).
[t=1.18874s, 11760 KB] Evaluations: 14009
[t=1.18874s, 11760 KB] Generated 67743 state(s).
[t=1.18874s, 11760 KB] Dead ends: 0 state(s).
[t=1.18874s, 11760 KB] Search time: 1.17526s
[t=1.18874s, 11760 KB] Total time: 1.18874s
Solution found.
Peak memory: 11760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan.1 sas_plan.2 sas_plan.3 sas_plan.4 sas_plan.5
Checking plan: sas_plan.1
Plan executed successfully - checking goal
Plan valid
Final value: 54 
Checking plan: sas_plan.2
Plan executed successfully - checking goal
Plan valid
Final value: 42 
Checking plan: sas_plan.3
Plan executed successfully - checking goal
Plan valid
Final value: 34 
Checking plan: sas_plan.4
Plan executed successfully - checking goal
Plan valid
Final value: 32 
Checking plan: sas_plan.5
Plan executed successfully - checking goal
Plan valid
Final value: 28 

Successful plans:
Value: 54
 sas_plan.1 54 

Value: 42
 sas_plan.2 42 

Value: 34
 sas_plan.3 34 

Value: 32
 sas_plan.4 32 

Value: 28
 sas_plan.5 28 

validate exit code: 0

INFO     Planner time: 1.51s
