INFO     planner time limit: 600s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/assign3/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
876 relevant atoms
886 auxiliary atoms
1762 final queue length
3028 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.010s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.015s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.008s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
696 of 696 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 78
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 696
Translator axioms: 0
Translator task size: 4098
Translator peak memory: 34884 KB
Writing output... [0.010s CPU, 0.003s wall-clock]
Done! [0.070s CPU, 0.066s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 599s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'iterated([
            lazy_wastar([h],w=5),
            lazy_wastar([h],w=4),
            lazy_wastar([h],w=3),
            lazy_wastar([h],w=2),
            astar(h)
        ],continue_on_fail=true)' --internal-plan-file sas_plan < output.sas
[t=0.00105125s, 10884 KB] reading input...
[t=0.00313245s, 11008 KB] done reading input!
[t=0.00627302s, 11596 KB] Initializing landmark cut heuristic...
[t=0.0064689s, 11596 KB] Building successor generator...done!
[t=0.00681041s, 11596 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00686338s, 11596 KB] time for successor generation creation: 0s
[t=0.0068886s, 11596 KB] Variables: 8
[t=0.00691412s, 11596 KB] FactPairs: 78
[t=0.00693693s, 11596 KB] Bytes per state: 4
[t=0.00698724s, 11596 KB] Start Timestep: 1681992807423 millisecond(s).
[t=0.00705147s, 11596 KB] Building successor generator...done!
[t=0.00713626s, 11596 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00717639s, 11596 KB] time for successor generation creation: 0s
[t=0.00720677s, 11596 KB] Variables: 8
[t=0.00723179s, 11596 KB] FactPairs: 78
[t=0.00725524s, 11596 KB] Bytes per state: 4
[t=0.0072793s, 11596 KB] Starting search: lazy_wastar([h],w=5)
[t=0.00731476s, 11596 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00733873s, 11596 KB] Start Timestep: 1681992807423 millisecond(s).
[t=0.00736344s, 11596 KB] New best heuristic value for lmcut(): 152
[t=0.0075793s, 11596 KB] g=0, 1 evaluated, 0 expanded
[t=0.00760356s, 11596 KB] Initial heuristic value for lmcut(): 152
[t=0.0076321s, 11596 KB] New best heuristic value for lmcut(): 136
[t=0.00794187s, 11596 KB] g=29, 2 evaluated, 1 expanded
[t=0.00811828s, 11596 KB] New best heuristic value for lmcut(): 119
[t=0.00831756s, 11596 KB] g=43, 3 evaluated, 2 expanded
[t=0.00834331s, 11596 KB] New best heuristic value for lmcut(): 114
[t=0.00871807s, 11596 KB] g=70, 4 evaluated, 3 expanded
[t=0.0133319s, 11596 KB] New best heuristic value for lmcut(): 111
[t=0.0139685s, 11596 KB] g=73, 24 evaluated, 23 expanded
[t=0.0343267s, 11596 KB] New best heuristic value for lmcut(): 107
[t=0.034598s, 11596 KB] g=128, 115 evaluated, 114 expanded, 15 reopened
[t=0.035455s, 11596 KB] New best heuristic value for lmcut(): 103
[t=0.0355044s, 11596 KB] g=145, 118 evaluated, 117 expanded, 15 reopened
[t=0.036346s, 11596 KB] New best heuristic value for lmcut(): 99
[t=0.0364289s, 11596 KB] g=162, 121 evaluated, 120 expanded, 15 reopened
[t=0.0415793s, 11596 KB] New best heuristic value for lmcut(): 98
[t=0.0423081s, 11596 KB] g=163, 142 evaluated, 141 expanded, 16 reopened
[t=0.0426048s, 11596 KB] New best heuristic value for lmcut(): 92
[t=0.0435906s, 11596 KB] g=180, 146 evaluated, 145 expanded, 16 reopened
[t=0.0793764s, 11596 KB] New best heuristic value for lmcut(): 80
[t=0.0799227s, 11596 KB] g=167, 353 evaluated, 352 expanded, 103 reopened
[t=0.0814495s, 11596 KB] New best heuristic value for lmcut(): 79
[t=0.0817802s, 11596 KB] g=168, 359 evaluated, 358 expanded, 103 reopened
[t=0.223195s, 11596 KB] New best heuristic value for lmcut(): 78
[t=0.223903s, 11596 KB] g=215, 1008 evaluated, 1007 expanded, 254 reopened
[t=0.231549s, 11596 KB] New best heuristic value for lmcut(): 72
[t=0.23243s, 11596 KB] g=216, 1042 evaluated, 1041 expanded, 255 reopened
[t=0.251468s, 11596 KB] New best heuristic value for lmcut(): 71
[t=0.252059s, 11596 KB] g=257, 1136 evaluated, 1135 expanded, 260 reopened
[t=0.275618s, 11728 KB] New best heuristic value for lmcut(): 51
[t=0.275987s, 11728 KB] g=283, 1386 evaluated, 1385 expanded, 413 reopened
[t=1.03717s, 11996 KB] New best heuristic value for lmcut(): 50
[t=1.03803s, 11996 KB] g=309, 5744 evaluated, 5743 expanded, 1833 reopened
[t=3.38834s, 13188 KB] New best heuristic value for lmcut(): 48
[t=3.38864s, 13188 KB] g=294, 26299 evaluated, 26298 expanded, 13001 reopened
[t=3.38867s, 13188 KB] New best heuristic value for lmcut(): 31
[t=3.38903s, 13188 KB] g=321, 26304 evaluated, 26303 expanded, 13001 reopened
[t=3.38906s, 13188 KB] New best heuristic value for lmcut(): 16
[t=3.38929s, 13188 KB] g=350, 26308 evaluated, 26307 expanded, 13001 reopened
[t=3.38933s, 13188 KB] New best heuristic value for lmcut(): 2
[t=3.38952s, 13188 KB] g=364, 26312 evaluated, 26311 expanded, 13001 reopened
[t=3.38955s, 13188 KB] New best heuristic value for lmcut(): 1
[t=3.38976s, 13188 KB] g=365, 26317 evaluated, 26316 expanded, 13001 reopened
[t=3.38979s, 13188 KB] Solution found!
[t=3.39006s, 13188 KB] Actual search time: 3.38269s
drive truck-2 city-loc-6 city-loc-1 (29)
drive truck-2 city-loc-1 city-loc-5 (14)
pick-up truck-2 city-loc-5 package-4 capacity-3 capacity-4 (1)
pick-up truck-1 city-loc-6 package-3 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-4 (27)
drive truck-1 city-loc-4 city-loc-8 (30)
pick-up truck-1 city-loc-8 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-loc-8 city-loc-7 (21)
drop truck-1 city-loc-7 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-loc-7 city-loc-10 (21)
pick-up truck-1 city-loc-10 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-10 city-loc-8 (23)
drive truck-2 city-loc-5 city-loc-9 (27)
drive truck-2 city-loc-9 city-loc-4 (19)
drive truck-2 city-loc-4 city-loc-8 (30)
drive truck-2 city-loc-8 city-loc-3 (17)
drop truck-2 city-loc-3 package-4 capacity-3 capacity-4 (1)
drive truck-1 city-loc-8 city-loc-4 (30)
drive truck-1 city-loc-4 city-loc-6 (27)
drive truck-1 city-loc-6 city-loc-1 (29)
drive truck-1 city-loc-1 city-loc-5 (14)
drop truck-1 city-loc-5 package-1 capacity-1 capacity-2 (1)
drop truck-1 city-loc-5 package-3 capacity-2 capacity-3 (1)
[t=3.39031s, 13188 KB] Plan length: 23 step(s).
[t=3.39035s, 13188 KB] Plan cost: 366
[t=3.39037s, 13188 KB] Solution Timestep: 1681992810836 millisecond(s).
[t=3.3904s, 13188 KB] Timestamp: 1681992810836 millisecond(s).
[t=3.39042s, 13188 KB] Expanded 26323 state(s).
[t=3.39045s, 13188 KB] Reopened 13001 state(s).
[t=3.39047s, 13188 KB] Evaluated 26324 state(s).
[t=3.39049s, 13188 KB] Evaluations: 13323
[t=3.39051s, 13188 KB] Generated 199241 state(s).
[t=3.39054s, 13188 KB] Dead ends: 0 state(s).
[t=3.39056s, 13188 KB] Number of registered states: 13323
[t=3.39058s, 13188 KB] Int hash set load factor: 13323/16384 = 0.813171
[t=3.39061s, 13188 KB] Int hash set resizes: 14
[t=3.39063s, 13188 KB] Best solution cost so far: 366
[t=3.39065s, 13188 KB] Solution found - keep searching
[t=3.39097s, 13188 KB] Building successor generator...done!
[t=3.39111s, 13188 KB] peak memory difference for successor generator creation: 0 KB
[t=3.39115s, 13188 KB] time for successor generation creation: 0s
[t=3.39117s, 13188 KB] Variables: 8
[t=3.3912s, 13188 KB] FactPairs: 78
[t=3.39122s, 13188 KB] Bytes per state: 4
[t=3.39125s, 13188 KB] Starting search: lazy_wastar([h],w=4)
[t=3.39128s, 13188 KB] Conducting lazy best first search, (real) bound = 366
[t=3.3913s, 13188 KB] Start Timestep: 1681992810837 millisecond(s).
[t=3.39133s, 13188 KB] New best heuristic value for lmcut(): 152
[t=3.39155s, 13188 KB] g=0, 1 evaluated, 0 expanded
[t=3.39158s, 13188 KB] Initial heuristic value for lmcut(): 152
[t=3.3916s, 13188 KB] New best heuristic value for lmcut(): 136
[t=3.39191s, 13188 KB] g=29, 2 evaluated, 1 expanded
[t=3.39194s, 13188 KB] New best heuristic value for lmcut(): 119
[t=3.39228s, 13188 KB] g=43, 3 evaluated, 2 expanded
[t=3.3923s, 13188 KB] New best heuristic value for lmcut(): 114
[t=3.39268s, 13188 KB] g=70, 4 evaluated, 3 expanded
[t=3.39712s, 13188 KB] New best heuristic value for lmcut(): 111
[t=3.39794s, 13188 KB] g=73, 24 evaluated, 23 expanded
[t=3.42124s, 13188 KB] New best heuristic value for lmcut(): 107
[t=3.42132s, 13188 KB] g=128, 127 evaluated, 126 expanded, 17 reopened
[t=3.42135s, 13188 KB] New best heuristic value for lmcut(): 103
[t=3.42221s, 13188 KB] g=145, 130 evaluated, 129 expanded, 17 reopened
[t=3.42224s, 13188 KB] New best heuristic value for lmcut(): 102
[t=3.42282s, 13188 KB] g=145, 132 evaluated, 131 expanded, 17 reopened
[t=3.42326s, 13188 KB] New best heuristic value for lmcut(): 99
[t=3.42369s, 13188 KB] g=162, 135 evaluated, 134 expanded, 17 reopened
[t=3.42372s, 13188 KB] New best heuristic value for lmcut(): 95
[t=3.42403s, 13188 KB] g=165, 136 evaluated, 135 expanded, 17 reopened
[t=3.42637s, 13188 KB] New best heuristic value for lmcut(): 93
[t=3.42709s, 13188 KB] g=187, 146 evaluated, 145 expanded, 17 reopened
[t=3.43581s, 13188 KB] New best heuristic value for lmcut(): 92
[t=3.43652s, 13188 KB] g=180, 188 evaluated, 187 expanded, 28 reopened
[t=3.4557s, 13188 KB] New best heuristic value for lmcut(): 80
[t=3.45585s, 13188 KB] g=167, 275 evaluated, 274 expanded, 49 reopened
[t=3.45672s, 13188 KB] New best heuristic value for lmcut(): 79
[t=3.45771s, 13188 KB] g=168, 281 evaluated, 280 expanded, 49 reopened
[t=3.63943s, 13188 KB] New best heuristic value for lmcut(): 78
[t=3.64011s, 13188 KB] g=215, 1087 evaluated, 1086 expanded, 207 reopened
[t=3.64883s, 13188 KB] New best heuristic value for lmcut(): 72
[t=3.64889s, 13188 KB] g=216, 1122 evaluated, 1121 expanded, 208 reopened
[t=3.66349s, 13188 KB] New best heuristic value for lmcut(): 71
[t=3.66394s, 13188 KB] g=255, 1227 evaluated, 1226 expanded, 248 reopened
[t=3.69856s, 13188 KB] New best heuristic value for lmcut(): 51
[t=3.69917s, 13188 KB] g=283, 1398 evaluated, 1397 expanded, 267 reopened
[t=5.95933s, 13188 KB] New best heuristic value for lmcut(): 50
[t=5.96042s, 13188 KB] g=268, 18355 evaluated, 18354 expanded, 8633 reopened
[t=8.28753s, 13976 KB] New best heuristic value for lmcut(): 49
[t=8.28774s, 13976 KB] g=289, 37998 evaluated, 37997 expanded, 19136 reopened
[t=8.29356s, 13976 KB] New best heuristic value for lmcut(): 48
[t=8.29451s, 13976 KB] g=304, 38054 evaluated, 38053 expanded, 19156 reopened
[t=8.29458s, 13976 KB] New best heuristic value for lmcut(): 18
[t=8.29474s, 13976 KB] g=334, 38056 evaluated, 38055 expanded, 19156 reopened
[t=8.29476s, 13976 KB] New best heuristic value for lmcut(): 1
[t=8.29491s, 13976 KB] g=351, 38058 evaluated, 38057 expanded, 19156 reopened
[t=8.29494s, 13976 KB] Solution found!
[t=8.29498s, 13976 KB] Actual search time: 4.90365s
drive truck-2 city-loc-6 city-loc-4 (27)
drive truck-2 city-loc-4 city-loc-8 (30)
pick-up truck-1 city-loc-6 package-3 capacity-2 capacity-3 (1)
pick-up truck-2 city-loc-8 package-2 capacity-3 capacity-4 (1)
drive truck-1 city-loc-6 city-loc-4 (27)
drive truck-2 city-loc-8 city-loc-10 (23)
pick-up truck-2 city-loc-10 package-1 capacity-2 capacity-3 (1)
drive truck-2 city-loc-10 city-loc-7 (21)
drop truck-2 city-loc-7 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-7 city-loc-8 (21)
drop truck-1 city-loc-4 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-4 (30)
pick-up truck-2 city-loc-4 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-4 city-loc-9 (19)
drive truck-2 city-loc-9 city-loc-5 (27)
drop truck-2 city-loc-5 package-1 capacity-2 capacity-3 (1)
drop truck-2 city-loc-5 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-5 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-5 city-loc-1 (14)
drive truck-2 city-loc-1 city-loc-6 (29)
drive truck-2 city-loc-6 city-loc-4 (27)
drive truck-2 city-loc-4 city-loc-8 (30)
drive truck-2 city-loc-8 city-loc-3 (17)
drop truck-2 city-loc-3 package-4 capacity-3 capacity-4 (1)
[t=8.29524s, 13976 KB] Plan length: 24 step(s).
[t=8.29528s, 13976 KB] Plan cost: 352
[t=8.2953s, 13976 KB] Solution Timestep: 1681992815781 millisecond(s).
[t=8.29533s, 13976 KB] Timestamp: 1681992815782 millisecond(s).
[t=8.29536s, 13976 KB] Expanded 38058 state(s).
[t=8.29538s, 13976 KB] Reopened 19156 state(s).
[t=8.29541s, 13976 KB] Evaluated 38059 state(s).
[t=8.29543s, 13976 KB] Evaluations: 18903
[t=8.29545s, 13976 KB] Generated 289230 state(s).
[t=8.29548s, 13976 KB] Dead ends: 0 state(s).
[t=8.2955s, 13976 KB] Number of registered states: 18903
[t=8.29552s, 13976 KB] Int hash set load factor: 18903/32768 = 0.576874
[t=8.29555s, 13976 KB] Int hash set resizes: 15
[t=8.29557s, 13976 KB] Best solution cost so far: 352
[t=8.29559s, 13976 KB] Solution found - keep searching
[t=8.29562s, 13976 KB] Building successor generator...done!
[t=8.29616s, 13976 KB] peak memory difference for successor generator creation: 0 KB
[t=8.2962s, 13976 KB] time for successor generation creation: 0s
[t=8.29622s, 13976 KB] Variables: 8
[t=8.29626s, 13976 KB] FactPairs: 78
[t=8.29628s, 13976 KB] Bytes per state: 4
[t=8.2963s, 13976 KB] Starting search: lazy_wastar([h],w=3)
[t=8.29634s, 13976 KB] Conducting lazy best first search, (real) bound = 352
[t=8.29636s, 13976 KB] Start Timestep: 1681992815783 millisecond(s).
[t=8.29654s, 13976 KB] New best heuristic value for lmcut(): 152
[t=8.29662s, 13976 KB] g=0, 1 evaluated, 0 expanded
[t=8.29664s, 13976 KB] Initial heuristic value for lmcut(): 152
[t=8.29667s, 13976 KB] New best heuristic value for lmcut(): 136
[t=8.29698s, 13976 KB] g=29, 2 evaluated, 1 expanded
[t=8.29717s, 13976 KB] New best heuristic value for lmcut(): 119
[t=8.29736s, 13976 KB] g=43, 3 evaluated, 2 expanded
[t=8.29738s, 13976 KB] New best heuristic value for lmcut(): 114
[t=8.29776s, 13976 KB] g=70, 4 evaluated, 3 expanded
[t=8.30343s, 13976 KB] New best heuristic value for lmcut(): 111
[t=8.30397s, 13976 KB] g=71, 29 evaluated, 28 expanded, 1 reopened
[t=8.31392s, 13976 KB] New best heuristic value for lmcut(): 110
[t=8.31433s, 13976 KB] g=88, 69 evaluated, 68 expanded, 3 reopened
[t=8.31495s, 13976 KB] New best heuristic value for lmcut(): 109
[t=8.31551s, 13976 KB] g=89, 73 evaluated, 72 expanded, 3 reopened
[t=8.31703s, 13976 KB] New best heuristic value for lmcut(): 108
[t=8.31756s, 13976 KB] g=90, 81 evaluated, 80 expanded, 3 reopened
[t=8.34s, 13976 KB] New best heuristic value for lmcut(): 107
[t=8.34008s, 13976 KB] g=128, 175 evaluated, 174 expanded, 13 reopened
[t=8.34216s, 13976 KB] New best heuristic value for lmcut(): 103
[t=8.34262s, 13976 KB] g=145, 184 evaluated, 183 expanded, 13 reopened
[t=8.34319s, 13976 KB] New best heuristic value for lmcut(): 102
[t=8.34323s, 13976 KB] g=145, 186 evaluated, 185 expanded, 13 reopened
[t=8.34326s, 13976 KB] New best heuristic value for lmcut(): 95
[t=8.34357s, 13976 KB] g=149, 187 evaluated, 186 expanded, 13 reopened
[t=8.3463s, 13976 KB] New best heuristic value for lmcut(): 93
[t=8.34661s, 13976 KB] g=171, 197 evaluated, 196 expanded, 13 reopened
[t=8.3518s, 13976 KB] New best heuristic value for lmcut(): 92
[t=8.35211s, 13976 KB] g=146, 216 evaluated, 215 expanded, 13 reopened
[t=8.3946s, 13976 KB] New best heuristic value for lmcut(): 80
[t=8.39495s, 13976 KB] g=167, 383 evaluated, 382 expanded, 25 reopened
[t=8.39667s, 13976 KB] New best heuristic value for lmcut(): 79
[t=8.39681s, 13976 KB] g=168, 389 evaluated, 388 expanded, 25 reopened
[t=8.5225s, 13976 KB] New best heuristic value for lmcut(): 75
[t=8.52265s, 13976 KB] g=134, 987 evaluated, 986 expanded, 173 reopened
[t=8.79881s, 13976 KB] New best heuristic value for lmcut(): 69
[t=8.79894s, 13976 KB] g=207, 2601 evaluated, 2600 expanded, 733 reopened
[t=9.24323s, 13976 KB] New best heuristic value for lmcut(): 51
[t=9.24341s, 13976 KB] g=239, 5011 evaluated, 5010 expanded, 1489 reopened
[t=9.29046s, 13976 KB] New best heuristic value for lmcut(): 50
[t=9.29127s, 13976 KB] g=249, 5211 evaluated, 5210 expanded, 1516 reopened
[t=13.3591s, 13976 KB] New best heuristic value for lmcut(): 49
[t=13.3596s, 13976 KB] g=250, 34542 evaluated, 34541 expanded, 15702 reopened
[t=13.3599s, 13976 KB] New best heuristic value for lmcut(): 48
[t=13.3605s, 13976 KB] g=251, 34547 evaluated, 34546 expanded, 15702 reopened
[t=13.3662s, 13976 KB] New best heuristic value for lmcut(): 47
[t=13.3664s, 13976 KB] g=303, 34582 evaluated, 34581 expanded, 15702 reopened
[t=13.4134s, 13976 KB] New best heuristic value for lmcut(): 30
[t=13.4142s, 13976 KB] g=329, 34907 evaluated, 34906 expanded, 15818 reopened
[t=13.4144s, 13976 KB] New best heuristic value for lmcut(): 28
[t=13.4144s, 13976 KB] g=346, 34909 evaluated, 34908 expanded, 15818 reopened
[t=13.4145s, 13976 KB] New best heuristic value for lmcut(): 1
[t=13.4152s, 13976 KB] g=348, 34919 evaluated, 34918 expanded, 15819 reopened
[t=13.4152s, 13976 KB] Solution found!
[t=13.4153s, 13976 KB] Actual search time: 5.11889s
pick-up truck-1 city-loc-6 package-3 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-5 (29)
drop truck-1 city-loc-5 package-3 capacity-2 capacity-3 (1)
pick-up truck-1 city-loc-5 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-5 city-loc-9 (27)
drive truck-1 city-loc-9 city-loc-4 (19)
drive truck-2 city-loc-6 city-loc-9 (17)
drive truck-1 city-loc-4 city-loc-8 (30)
drive truck-2 city-loc-9 city-loc-4 (19)
drive truck-1 city-loc-8 city-loc-10 (23)
pick-up truck-1 city-loc-10 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-10 city-loc-8 (23)
drive truck-1 city-loc-8 city-loc-3 (17)
drop truck-1 city-loc-3 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-loc-3 city-loc-8 (17)
drop truck-1 city-loc-8 package-1 capacity-2 capacity-3 (1)
pick-up truck-1 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-1 city-loc-8 city-loc-7 (21)
drop truck-1 city-loc-7 package-2 capacity-2 capacity-3 (1)
drive truck-1 city-loc-7 city-loc-8 (21)
pick-up truck-1 city-loc-8 package-1 capacity-2 capacity-3 (1)
drive truck-1 city-loc-8 city-loc-4 (30)
drive truck-1 city-loc-4 city-loc-9 (19)
drive truck-1 city-loc-9 city-loc-5 (27)
drop truck-1 city-loc-5 package-1 capacity-2 capacity-3 (1)
[t=13.4156s, 13976 KB] Plan length: 25 step(s).
[t=13.4156s, 13976 KB] Plan cost: 349
[t=13.4156s, 13976 KB] Solution Timestep: 1681992820946 millisecond(s).
[t=13.4157s, 13976 KB] Timestamp: 1681992820946 millisecond(s).
[t=13.4157s, 13976 KB] Expanded 34919 state(s).
[t=13.4157s, 13976 KB] Reopened 15819 state(s).
[t=13.4157s, 13976 KB] Evaluated 34920 state(s).
[t=13.4157s, 13976 KB] Evaluations: 19101
[t=13.4158s, 13976 KB] Generated 265585 state(s).
[t=13.4158s, 13976 KB] Dead ends: 0 state(s).
[t=13.4158s, 13976 KB] Number of registered states: 19101
[t=13.4158s, 13976 KB] Int hash set load factor: 19101/32768 = 0.582916
[t=13.4159s, 13976 KB] Int hash set resizes: 15
[t=13.4159s, 13976 KB] Best solution cost so far: 349
[t=13.4159s, 13976 KB] Solution found - keep searching
[t=13.4159s, 13976 KB] Building successor generator...done!
[t=13.4164s, 13976 KB] peak memory difference for successor generator creation: 0 KB
[t=13.4164s, 13976 KB] time for successor generation creation: 0s
[t=13.4164s, 13976 KB] Variables: 8
[t=13.4165s, 13976 KB] FactPairs: 78
[t=13.4165s, 13976 KB] Bytes per state: 4
[t=13.4165s, 13976 KB] Starting search: lazy_wastar([h],w=2)
[t=13.4165s, 13976 KB] Conducting lazy best first search, (real) bound = 349
[t=13.4166s, 13976 KB] Start Timestep: 1681992820947 millisecond(s).
[t=13.4167s, 13976 KB] New best heuristic value for lmcut(): 152
[t=13.4168s, 13976 KB] g=0, 1 evaluated, 0 expanded
[t=13.4169s, 13976 KB] Initial heuristic value for lmcut(): 152
[t=13.4169s, 13976 KB] New best heuristic value for lmcut(): 136
[t=13.4172s, 13976 KB] g=29, 2 evaluated, 1 expanded
[t=13.4172s, 13976 KB] New best heuristic value for lmcut(): 119
[t=13.4176s, 13976 KB] g=43, 3 evaluated, 2 expanded
[t=13.4177s, 13976 KB] New best heuristic value for lmcut(): 114
[t=13.418s, 13976 KB] g=70, 4 evaluated, 3 expanded
[t=13.424s, 13976 KB] New best heuristic value for lmcut(): 111
[t=13.4242s, 13976 KB] g=71, 29 evaluated, 28 expanded, 1 reopened
[t=13.4303s, 13976 KB] New best heuristic value for lmcut(): 103
[t=13.431s, 13976 KB] g=57, 56 evaluated, 55 expanded, 4 reopened
[t=13.4313s, 13976 KB] New best heuristic value for lmcut(): 102
[t=13.4316s, 13976 KB] g=74, 58 evaluated, 57 expanded, 4 reopened
[t=13.4344s, 13976 KB] New best heuristic value for lmcut(): 101
[t=13.4348s, 13976 KB] g=59, 70 evaluated, 69 expanded, 5 reopened
[t=13.4533s, 13976 KB] New best heuristic value for lmcut(): 96
[t=13.4538s, 13976 KB] g=106, 150 evaluated, 149 expanded, 18 reopened
[t=13.4585s, 13976 KB] New best heuristic value for lmcut(): 95
[t=13.4588s, 13976 KB] g=107, 169 evaluated, 168 expanded, 18 reopened
[t=13.4648s, 13976 KB] New best heuristic value for lmcut(): 94
[t=13.4654s, 13976 KB] g=108, 193 evaluated, 192 expanded, 18 reopened
[t=13.4973s, 13976 KB] New best heuristic value for lmcut(): 93
[t=13.4982s, 13976 KB] g=118, 352 evaluated, 351 expanded, 62 reopened
[t=13.4997s, 13976 KB] New best heuristic value for lmcut(): 92
[t=13.5002s, 13976 KB] g=93, 359 evaluated, 358 expanded, 62 reopened
[t=13.513s, 13976 KB] New best heuristic value for lmcut(): 80
[t=13.5137s, 13976 KB] g=98, 408 evaluated, 407 expanded, 64 reopened
[t=13.514s, 13976 KB] New best heuristic value for lmcut(): 79
[t=13.5148s, 13976 KB] g=99, 412 evaluated, 411 expanded, 64 reopened
[t=13.8079s, 13976 KB] New best heuristic value for lmcut(): 78
[t=13.8089s, 13976 KB] g=141, 1846 evaluated, 1845 expanded, 474 reopened
[t=14.0861s, 13976 KB] New best heuristic value for lmcut(): 75
[t=14.0869s, 13976 KB] g=134, 3043 evaluated, 3042 expanded, 674 reopened
[t=14.1229s, 13976 KB] New best heuristic value for lmcut(): 72
[t=14.1233s, 13976 KB] g=161, 3186 evaluated, 3185 expanded, 679 reopened
[t=14.2528s, 13976 KB] New best heuristic value for lmcut(): 71
[t=14.2532s, 13976 KB] g=163, 3726 evaluated, 3725 expanded, 725 reopened
[t=14.5046s, 13976 KB] New best heuristic value for lmcut(): 68
[t=14.5052s, 13976 KB] g=202, 4783 evaluated, 4782 expanded, 859 reopened
[t=15.9572s, 13976 KB] New best heuristic value for lmcut(): 51
[t=15.9583s, 13976 KB] g=201, 12546 evaluated, 12545 expanded, 3294 reopened
[t=18.2439s, 13976 KB] New best heuristic value for lmcut(): 49
[t=18.2445s, 13976 KB] g=222, 24238 evaluated, 24237 expanded, 6335 reopened
[t=18.2449s, 13976 KB] New best heuristic value for lmcut(): 48
[t=18.2451s, 13976 KB] g=223, 24241 evaluated, 24240 expanded, 6335 reopened
[t=18.2533s, 13976 KB] New best heuristic value for lmcut(): 47
[t=18.2539s, 13976 KB] g=275, 24292 evaluated, 24291 expanded, 6336 reopened
[t=18.6701s, 13976 KB] New best heuristic value for lmcut(): 30
[t=18.6703s, 13976 KB] g=286, 26287 evaluated, 26286 expanded, 6696 reopened
[t=18.6703s, 13976 KB] New best heuristic value for lmcut(): 15
[t=18.6707s, 13976 KB] g=315, 26292 evaluated, 26291 expanded, 6696 reopened
[t=18.6707s, 13976 KB] New best heuristic value for lmcut(): 1
[t=18.671s, 13976 KB] g=329, 26297 evaluated, 26296 expanded, 6696 reopened
[t=18.6711s, 13976 KB] Solution found!
[t=18.6711s, 13976 KB] Actual search time: 5.25453s
pick-up truck-1 city-loc-6 package-3 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-5 (29)
drop truck-1 city-loc-5 package-3 capacity-2 capacity-3 (1)
pick-up truck-1 city-loc-5 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-5 city-loc-9 (27)
drive truck-1 city-loc-9 city-loc-4 (19)
drive truck-2 city-loc-6 city-loc-9 (17)
drive truck-1 city-loc-4 city-loc-8 (30)
drive truck-2 city-loc-9 city-loc-4 (19)
pick-up truck-1 city-loc-8 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-loc-8 city-loc-10 (23)
pick-up truck-1 city-loc-10 package-1 capacity-0 capacity-1 (1)
drive truck-1 city-loc-10 city-loc-7 (21)
drop truck-1 city-loc-7 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-loc-7 city-loc-3 (20)
drop truck-1 city-loc-3 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-loc-3 city-loc-8 (17)
drive truck-1 city-loc-8 city-loc-4 (30)
drive truck-1 city-loc-4 city-loc-6 (27)
drive truck-1 city-loc-6 city-loc-1 (29)
drive truck-1 city-loc-1 city-loc-5 (14)
drop truck-1 city-loc-5 package-1 capacity-2 capacity-3 (1)
[t=18.6714s, 13976 KB] Plan length: 22 step(s).
[t=18.6714s, 13976 KB] Plan cost: 330
[t=18.6715s, 13976 KB] Solution Timestep: 1681992826248 millisecond(s).
[t=18.6715s, 13976 KB] Timestamp: 1681992826248 millisecond(s).
[t=18.6715s, 13976 KB] Expanded 26298 state(s).
[t=18.6715s, 13976 KB] Reopened 6696 state(s).
[t=18.6716s, 13976 KB] Evaluated 26299 state(s).
[t=18.6716s, 13976 KB] Evaluations: 19603
[t=18.6716s, 13976 KB] Generated 201125 state(s).
[t=18.6716s, 13976 KB] Dead ends: 0 state(s).
[t=18.6717s, 13976 KB] Number of registered states: 19603
[t=18.6717s, 13976 KB] Int hash set load factor: 19603/32768 = 0.598236
[t=18.6717s, 13976 KB] Int hash set resizes: 15
[t=18.6717s, 13976 KB] Best solution cost so far: 330
[t=18.6717s, 13976 KB] Solution found - keep searching
[t=18.6718s, 13976 KB] Building successor generator...done!
[t=18.6721s, 13976 KB] peak memory difference for successor generator creation: 0 KB
[t=18.6722s, 13976 KB] time for successor generation creation: 0s
[t=18.6722s, 13976 KB] Variables: 8
[t=18.6722s, 13976 KB] FactPairs: 78
[t=18.6722s, 13976 KB] Bytes per state: 4
[t=18.6723s, 13976 KB] Starting search: astar(h)
[t=18.6723s, 13976 KB] Conducting best first search with reopening closed nodes, (real) bound = 330
[t=18.6723s, 13976 KB] New best heuristic value for lmcut(): 152
[t=18.6726s, 13976 KB] g=0, 1 evaluated, 0 expanded
[t=18.6726s, 13976 KB] f = 152, 1 evaluated, 0 expanded
[t=18.6726s, 13976 KB] Initial heuristic value for lmcut(): 152
[t=18.6726s, 13976 KB] pruning method: none
[t=18.6727s, 13976 KB] Start Timestep: 1681992826250 millisecond(s).
[t=18.6727s, 13976 KB] New best heuristic value for lmcut(): 136
[t=18.673s, 13976 KB] g=29, 2 evaluated, 1 expanded
[t=18.6731s, 13976 KB] New best heuristic value for lmcut(): 130
[t=18.6734s, 13976 KB] g=27, 3 evaluated, 1 expanded
[t=18.6734s, 13976 KB] New best heuristic value for lmcut(): 119
[t=18.6737s, 13976 KB] g=29, 4 evaluated, 1 expanded
[t=18.6741s, 13976 KB] New best heuristic value for lmcut(): 114
[t=18.6742s, 13976 KB] g=17, 5 evaluated, 1 expanded
[t=18.6762s, 13976 KB] New best heuristic value for lmcut(): 112
[t=18.6765s, 13976 KB] g=44, 13 evaluated, 2 expanded
[t=18.6772s, 13976 KB] New best heuristic value for lmcut(): 111
[t=18.6773s, 13976 KB] g=18, 16 evaluated, 2 expanded
[t=18.6887s, 13976 KB] New best heuristic value for lmcut(): 110
[t=18.6894s, 13976 KB] g=57, 61 evaluated, 11 expanded
[t=18.695s, 13976 KB] New best heuristic value for lmcut(): 108
[t=18.6956s, 13976 KB] g=31, 84 evaluated, 15 expanded
[t=18.7023s, 13976 KB] New best heuristic value for lmcut(): 102
[t=18.7031s, 13976 KB] g=45, 112 evaluated, 19 expanded
[t=18.7244s, 13976 KB] f = 156, 190 evaluated, 35 expanded
[t=18.7253s, 13976 KB] f = 157, 195 evaluated, 37 expanded
[t=18.7337s, 13976 KB] f = 158, 222 evaluated, 43 expanded
[t=18.7348s, 13976 KB] New best heuristic value for lmcut(): 100
[t=18.7358s, 13976 KB] g=58, 228 evaluated, 45 expanded
[t=18.7379s, 13976 KB] f = 160, 238 evaluated, 47 expanded
[t=18.7452s, 13976 KB] f = 161, 263 evaluated, 51 expanded
[t=18.7463s, 13976 KB] New best heuristic value for lmcut(): 99
[t=18.7473s, 13976 KB] g=75, 269 evaluated, 52 expanded
[t=18.7494s, 13976 KB] New best heuristic value for lmcut(): 98
[t=18.7499s, 13976 KB] g=76, 278 evaluated, 53 expanded
[t=18.7504s, 13976 KB] New best heuristic value for lmcut(): 97
[t=18.7506s, 13976 KB] g=80, 280 evaluated, 53 expanded
[t=18.7506s, 13976 KB] f = 162, 281 evaluated, 53 expanded
[t=18.7515s, 13976 KB] f = 163, 284 evaluated, 55 expanded
[t=18.7578s, 13976 KB] f = 165, 305 evaluated, 59 expanded
[t=18.758s, 13976 KB] f = 167, 308 evaluated, 63 expanded
[t=18.7587s, 13976 KB] f = 168, 310 evaluated, 64 expanded
[t=18.7735s, 13976 KB] f = 169, 364 evaluated, 72 expanded
[t=18.7829s, 13976 KB] f = 170, 396 evaluated, 78 expanded
[t=18.7846s, 13976 KB] f = 173, 399 evaluated, 79 expanded
[t=18.7849s, 13976 KB] f = 174, 401 evaluated, 81 expanded
[t=18.786s, 13976 KB] New best heuristic value for lmcut(): 92
[t=18.7867s, 13976 KB] g=93, 405 evaluated, 82 expanded
[t=18.7881s, 13976 KB] f = 175, 410 evaluated, 83 expanded
[t=18.8017s, 13976 KB] f = 176, 458 evaluated, 92 expanded
[t=18.8084s, 13976 KB] f = 177, 481 evaluated, 99 expanded
[t=18.8164s, 13976 KB] f = 178, 508 evaluated, 105 expanded
[t=18.829s, 13976 KB] f = 179, 552 evaluated, 116 expanded
[t=18.8489s, 13976 KB] f = 180, 620 evaluated, 128 expanded
[t=18.8599s, 13976 KB] f = 181, 661 evaluated, 135 expanded
[t=18.8741s, 13976 KB] f = 182, 709 evaluated, 144 expanded
[t=18.8751s, 13976 KB] New best heuristic value for lmcut(): 80
[t=18.8754s, 13976 KB] g=98, 713 evaluated, 145 expanded
[t=18.8761s, 13976 KB] New best heuristic value for lmcut(): 79
[t=18.8763s, 13976 KB] g=99, 716 evaluated, 146 expanded
[t=18.8929s, 13976 KB] f = 183, 778 evaluated, 163 expanded, 1 reopened
[t=18.917s, 13976 KB] f = 184, 862 evaluated, 185 expanded, 1 reopened
[t=18.9401s, 13976 KB] f = 185, 944 evaluated, 209 expanded, 3 reopened
[t=18.958s, 13976 KB] f = 186, 1008 evaluated, 230 expanded, 3 reopened
[t=18.971s, 13976 KB] f = 187, 1055 evaluated, 242 expanded, 3 reopened
[t=18.9799s, 13976 KB] f = 188, 1088 evaluated, 258 expanded, 3 reopened
[t=19.0051s, 13976 KB] f = 189, 1179 evaluated, 286 expanded, 3 reopened
[t=19.0282s, 13976 KB] f = 190, 1255 evaluated, 310 expanded, 5 reopened
[t=19.0398s, 13976 KB] f = 191, 1296 evaluated, 323 expanded, 5 reopened
[t=19.0503s, 13976 KB] f = 192, 1334 evaluated, 343 expanded, 5 reopened
[t=19.0622s, 13976 KB] f = 193, 1375 evaluated, 358 expanded, 5 reopened
[t=19.0711s, 13976 KB] f = 194, 1407 evaluated, 375 expanded, 5 reopened
[t=19.09s, 13976 KB] f = 195, 1469 evaluated, 401 expanded, 5 reopened
[t=19.1097s, 13976 KB] f = 196, 1536 evaluated, 431 expanded, 5 reopened
[t=19.1239s, 13976 KB] f = 197, 1587 evaluated, 456 expanded, 5 reopened
[t=19.1407s, 13976 KB] f = 198, 1647 evaluated, 485 expanded, 5 reopened
[t=19.169s, 13976 KB] f = 199, 1746 evaluated, 517 expanded, 5 reopened
[t=19.1942s, 13976 KB] f = 200, 1837 evaluated, 555 expanded, 5 reopened
[t=19.2189s, 13976 KB] f = 201, 1924 evaluated, 596 expanded, 5 reopened
[t=19.2367s, 13976 KB] f = 202, 1989 evaluated, 617 expanded, 5 reopened
[t=19.2577s, 13976 KB] f = 203, 2063 evaluated, 647 expanded, 5 reopened
[t=19.284s, 13976 KB] f = 204, 2153 evaluated, 676 expanded, 5 reopened
[t=19.3344s, 13976 KB] f = 205, 2327 evaluated, 729 expanded, 5 reopened
[t=19.3784s, 13976 KB] New best heuristic value for lmcut(): 78
[t=19.379s, 13976 KB] g=127, 2485 evaluated, 774 expanded, 5 reopened
[t=19.3889s, 13976 KB] New best heuristic value for lmcut(): 74
[t=19.3895s, 13976 KB] g=157, 2527 evaluated, 780 expanded, 5 reopened
[t=19.4466s, 13976 KB] f = 206, 2742 evaluated, 824 expanded, 8 reopened
[t=19.4834s, 13976 KB] f = 207, 2871 evaluated, 859 expanded, 8 reopened
[t=19.5296s, 13976 KB] f = 208, 3036 evaluated, 921 expanded, 8 reopened
[t=19.5527s, 13976 KB] f = 209, 3116 evaluated, 950 expanded, 8 reopened
[t=19.6187s, 13976 KB] f = 210, 3357 evaluated, 1016 expanded, 9 reopened
[t=19.666s, 13976 KB] f = 211, 3528 evaluated, 1078 expanded, 12 reopened
[t=19.7362s, 13976 KB] f = 212, 3781 evaluated, 1141 expanded, 13 reopened
[t=19.8115s, 13976 KB] f = 213, 4058 evaluated, 1228 expanded, 13 reopened
[t=19.9307s, 13976 KB] f = 214, 4512 evaluated, 1351 expanded, 13 reopened
[t=20.0345s, 13976 KB] f = 215, 4891 evaluated, 1477 expanded, 13 reopened
[t=20.0963s, 13976 KB] f = 216, 5113 evaluated, 1562 expanded, 13 reopened
[t=20.1854s, 13976 KB] f = 217, 5439 evaluated, 1671 expanded, 14 reopened
[t=20.2305s, 13976 KB] f = 218, 5597 evaluated, 1743 expanded, 14 reopened
[t=20.2723s, 13976 KB] f = 219, 5746 evaluated, 1809 expanded, 15 reopened
[t=20.309s, 13976 KB] f = 220, 5877 evaluated, 1862 expanded, 15 reopened
[t=20.3238s, 13976 KB] New best heuristic value for lmcut(): 72
[t=20.324s, 13976 KB] g=152, 5928 evaluated, 1874 expanded, 15 reopened
[t=20.3604s, 13976 KB] f = 221, 6056 evaluated, 1931 expanded, 15 reopened
[t=20.3911s, 13976 KB] New best heuristic value for lmcut(): 71
[t=20.3914s, 13976 KB] g=154, 6170 evaluated, 1955 expanded, 15 reopened
[t=20.4232s, 13976 KB] f = 222, 6281 evaluated, 2008 expanded, 15 reopened
[t=20.4882s, 13976 KB] f = 223, 6507 evaluated, 2082 expanded, 17 reopened
[t=20.5688s, 13976 KB] f = 224, 6799 evaluated, 2196 expanded, 17 reopened
[t=20.6432s, 13976 KB] f = 225, 7073 evaluated, 2294 expanded, 25 reopened
[t=20.7435s, 13976 KB] f = 226, 7428 evaluated, 2411 expanded, 25 reopened
[t=20.8781s, 13976 KB] f = 227, 7917 evaluated, 2561 expanded, 31 reopened
[t=21.0028s, 13976 KB] f = 228, 8372 evaluated, 2717 expanded, 32 reopened
[t=21.0971s, 13976 KB] f = 229, 8718 evaluated, 2841 expanded, 32 reopened
[t=21.1865s, 13976 KB] f = 230, 9044 evaluated, 2955 expanded, 32 reopened
[t=21.3131s, 13976 KB] f = 231, 9521 evaluated, 3097 expanded, 32 reopened
[t=21.4882s, 13976 KB] New best heuristic value for lmcut(): 69
[t=21.4886s, 13976 KB] g=153, 10180 evaluated, 3284 expanded, 37 reopened
[t=21.4966s, 13976 KB] f = 232, 10211 evaluated, 3300 expanded, 37 reopened
[t=21.6527s, 13976 KB] f = 233, 10781 evaluated, 3477 expanded, 37 reopened
[t=21.7847s, 13976 KB] f = 234, 11260 evaluated, 3654 expanded, 46 reopened
[t=21.99s, 13976 KB] f = 235, 12066 evaluated, 3899 expanded, 46 reopened
[t=21.9923s, 13976 KB] New best heuristic value for lmcut(): 68
[t=21.9934s, 13976 KB] g=187, 12079 evaluated, 3902 expanded, 46 reopened
[t=22.2399s, 13976 KB] f = 236, 13030 evaluated, 4190 expanded, 46 reopened
[t=22.4779s, 13976 KB] f = 237, 13945 evaluated, 4476 expanded, 46 reopened
[t=22.5942s, 13976 KB] f = 238, 14378 evaluated, 4646 expanded, 47 reopened
[t=22.7379s, 13976 KB] f = 239, 14915 evaluated, 4832 expanded, 47 reopened
[t=22.7431s, 13976 KB] New best heuristic value for lmcut(): 66
[t=22.7436s, 13976 KB] g=185, 14933 evaluated, 4835 expanded, 47 reopened
[t=22.891s, 14032 KB] f = 240, 15469 evaluated, 5043 expanded, 47 reopened
[t=23.0336s, 14032 KB] f = 241, 15995 evaluated, 5265 expanded, 47 reopened
[t=23.189s, 14032 KB] f = 242, 16557 evaluated, 5507 expanded, 47 reopened
[t=23.3716s, 14032 KB] f = 243, 17220 evaluated, 5794 expanded, 47 reopened
[t=23.5895s, 14032 KB] f = 244, 18023 evaluated, 6131 expanded, 47 reopened
[t=23.8589s, 14032 KB] f = 245, 18996 evaluated, 6481 expanded, 47 reopened
[t=24.1222s, 14032 KB] f = 246, 19962 evaluated, 6887 expanded, 51 reopened
[t=24.4444s, 14164 KB] f = 247, 21148 evaluated, 7286 expanded, 51 reopened
[t=24.7147s, 14164 KB] f = 248, 22124 evaluated, 7657 expanded, 51 reopened
[t=24.9425s, 14300 KB] f = 249, 22958 evaluated, 7976 expanded, 51 reopened
[t=25.1461s, 14300 KB] f = 250, 23752 evaluated, 8304 expanded, 51 reopened
[t=25.3433s, 14300 KB] f = 251, 24459 evaluated, 8635 expanded, 51 reopened
[t=25.3443s, 14300 KB] New best heuristic value for lmcut(): 65
[t=25.3447s, 14300 KB] g=186, 24463 evaluated, 8636 expanded, 51 reopened
[t=25.5707s, 14300 KB] f = 252, 25345 evaluated, 8985 expanded, 51 reopened
[t=25.8035s, 14432 KB] f = 253, 26201 evaluated, 9416 expanded, 51 reopened
[t=26.0058s, 14432 KB] f = 254, 26964 evaluated, 9807 expanded, 51 reopened
[t=26.0194s, 14432 KB] New best heuristic value for lmcut(): 51
[t=26.02s, 14432 KB] g=201, 27014 evaluated, 9820 expanded, 51 reopened
[t=26.2995s, 14432 KB] f = 255, 28049 evaluated, 10302 expanded, 51 reopened
[t=26.5538s, 14564 KB] f = 256, 29024 evaluated, 10709 expanded, 51 reopened
[t=26.7902s, 15080 KB] f = 257, 29902 evaluated, 11140 expanded, 59 reopened
[t=27.0235s, 15080 KB] f = 258, 30818 evaluated, 11555 expanded, 59 reopened
[t=27.3119s, 15080 KB] f = 259, 31946 evaluated, 12013 expanded, 60 reopened
[t=27.6856s, 15080 KB] f = 260, 33396 evaluated, 12583 expanded, 60 reopened
[t=28.008s, 15080 KB] f = 261, 34613 evaluated, 13144 expanded, 60 reopened
[t=28.3785s, 15080 KB] f = 262, 36040 evaluated, 13798 expanded, 60 reopened
[t=28.7396s, 15216 KB] f = 263, 37405 evaluated, 14475 expanded, 62 reopened
[t=29.1311s, 15216 KB] f = 264, 38882 evaluated, 15130 expanded, 62 reopened
[t=29.5767s, 15352 KB] f = 265, 40567 evaluated, 15897 expanded, 65 reopened
[t=30.147s, 15352 KB] f = 266, 42752 evaluated, 16739 expanded, 70 reopened
[t=30.7559s, 15488 KB] f = 267, 45083 evaluated, 17610 expanded, 75 reopened
[t=30.758s, 15488 KB] New best heuristic value for lmcut(): 49
[t=30.7588s, 15488 KB] g=220, 45096 evaluated, 17613 expanded, 75 reopened
[t=31.6262s, 15620 KB] f = 268, 48408 evaluated, 18718 expanded, 77 reopened
[t=32.2573s, 15756 KB] f = 269, 50765 evaluated, 19540 expanded, 79 reopened
[t=32.2583s, 15756 KB] New best heuristic value for lmcut(): 47
[t=32.2587s, 15756 KB] g=250, 50770 evaluated, 19541 expanded, 79 reopened
[t=33.028s, 15888 KB] f = 270, 53733 evaluated, 20475 expanded, 85 reopened
[t=33.0437s, 15888 KB] New best heuristic value for lmcut(): 30
[t=33.0444s, 15888 KB] g=250, 53816 evaluated, 20491 expanded, 85 reopened
[t=33.0444s, 15888 KB] New best heuristic value for lmcut(): 28
[t=33.0445s, 15888 KB] g=242, 53817 evaluated, 20491 expanded, 85 reopened
[t=33.0447s, 15888 KB] New best heuristic value for lmcut(): 1
[t=33.045s, 15888 KB] g=269, 53823 evaluated, 20492 expanded, 85 reopened
[t=33.045s, 15888 KB] New best heuristic value for lmcut(): 0
[t=33.0453s, 15888 KB] g=270, 53830 evaluated, 20493 expanded, 85 reopened
[t=33.0453s, 15888 KB] Solution found!
[t=33.0454s, 15888 KB] Actual search time: 14.3727s
pick-up truck-1 city-loc-6 package-3 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-5 (29)
drop truck-1 city-loc-5 package-3 capacity-2 capacity-3 (1)
pick-up truck-1 city-loc-5 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-5 city-loc-9 (27)
drive truck-1 city-loc-9 city-loc-4 (19)
drive truck-1 city-loc-4 city-loc-8 (30)
pick-up truck-1 city-loc-8 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-loc-8 city-loc-10 (23)
pick-up truck-1 city-loc-10 package-1 capacity-0 capacity-1 (1)
drive truck-1 city-loc-10 city-loc-7 (21)
drop truck-1 city-loc-7 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-loc-7 city-loc-3 (20)
drop truck-1 city-loc-3 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-loc-3 city-loc-8 (17)
drive truck-1 city-loc-8 city-loc-4 (30)
drive truck-1 city-loc-4 city-loc-9 (19)
drive truck-1 city-loc-9 city-loc-5 (27)
drop truck-1 city-loc-5 package-1 capacity-2 capacity-3 (1)
[t=33.0456s, 15888 KB] Plan length: 19 step(s).
[t=33.0457s, 15888 KB] Plan cost: 270
[t=33.0457s, 15888 KB] Solution Timestep: 1681992840762 millisecond(s).
[t=33.0457s, 15888 KB] Timestamp: 1681992840763 millisecond(s).
[t=33.0458s, 15888 KB] Expanded 20494 state(s).
[t=33.0458s, 15888 KB] Reopened 85 state(s).
[t=33.0458s, 15888 KB] Evaluated 53831 state(s).
[t=33.0458s, 15888 KB] Evaluations: 53831
[t=33.0458s, 15888 KB] Generated 158978 state(s).
[t=33.0459s, 15888 KB] Dead ends: 0 state(s).
[t=33.0459s, 15888 KB] Expanded until last jump: 20475 state(s).
[t=33.0459s, 15888 KB] Reopened until last jump: 85 state(s).
[t=33.0459s, 15888 KB] Evaluated until last jump: 53733 state(s).
[t=33.046s, 15888 KB] Generated until last jump: 158835 state(s).
[t=33.046s, 15888 KB] Number of registered states: 53831
[t=33.046s, 15888 KB] Int hash set load factor: 53831/65536 = 0.821396
[t=33.046s, 15888 KB] Int hash set resizes: 16
[t=33.0461s, 15888 KB] Best solution cost so far: 270
[t=33.0461s, 15888 KB] Solution found - keep searching
[t=33.0474s, 15888 KB] Optimal Solution: found
[t=33.0476s, 15888 KB] Actual search time: 33.0405s
[t=33.0476s, 15888 KB] Cumulative statistics:
[t=33.0476s, 15888 KB] Timestamp: 1681992840765 millisecond(s).
[t=33.0476s, 15888 KB] Expanded 146092 state(s).
[t=33.0476s, 15888 KB] Reopened 54757 state(s).
[t=33.0476s, 15888 KB] Evaluated 179433 state(s).
[t=33.0476s, 15888 KB] Evaluations: 124761
[t=33.0476s, 15888 KB] Generated 1114159 state(s).
[t=33.0476s, 15888 KB] Dead ends: 0 state(s).
[t=33.0476s, 15888 KB] Search time: 33.0406s
[t=33.0476s, 15888 KB] Total time: 33.0476s
Solution found.
Peak memory: 15888 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan.1 sas_plan.2 sas_plan.3 sas_plan.4 sas_plan.5
Checking plan: sas_plan.1
Plan executed successfully - checking goal
Plan valid
Final value: 366 
Checking plan: sas_plan.2
Plan executed successfully - checking goal
Plan valid
Final value: 352 
Checking plan: sas_plan.3
Plan executed successfully - checking goal
Plan valid
Final value: 349 
Checking plan: sas_plan.4
Plan executed successfully - checking goal
Plan valid
Final value: 330 
Checking plan: sas_plan.5
Plan executed successfully - checking goal
Plan valid
Final value: 270 

Successful plans:
Value: 270
 sas_plan.5 270 

Value: 330
 sas_plan.4 330 

Value: 349
 sas_plan.3 349 

Value: 352
 sas_plan.2 352 

Value: 366
 sas_plan.1 366 

validate exit code: 0

INFO     Planner time: 33.20s
