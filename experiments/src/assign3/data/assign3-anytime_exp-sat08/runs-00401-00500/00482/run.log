INFO     planner time limit: 600s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/assign3/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
876 relevant atoms
886 auxiliary atoms
1762 final queue length
3028 total queue pushes
Completing instantiation... [0.010s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.015s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.008s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
696 of 696 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 78
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 696
Translator axioms: 0
Translator task size: 4098
Translator peak memory: 34884 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.060s CPU, 0.066s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 599s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'eager_anytime(epsilon_greedy(
        sum([weight(h, 2, verbosity=normal), g()]), epsilon=0.5, random_seed=1234), 
        reopen_closed=true, f_eval=sum([h, g()]))' --internal-plan-file sas_plan < output.sas
[t=0.00210273s, 10884 KB] reading input...
[t=0.00418132s, 11008 KB] done reading input!
[t=0.00626914s, 11572 KB] Initializing landmark cut heuristic...
[t=0.00657396s, 11572 KB] Building successor generator...done!
[t=0.00690388s, 11572 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00695893s, 11572 KB] time for successor generation creation: 0s
[t=0.00698449s, 11572 KB] Variables: 8
[t=0.00701146s, 11572 KB] FactPairs: 78
[t=0.00703492s, 11572 KB] Bytes per state: 4
[t=0.00705927s, 11572 KB] Conducting best first anytime search with reopening closed nodes, (real) bound = 2147483647
[t=0.00720942s, 11572 KB] New best heuristic value for lmcut(): 152
[t=0.00733222s, 11572 KB] g=0, 1 evaluated, 0 expanded
[t=0.00735721s, 11572 KB] Initial heuristic value for lmcut(): 152
[t=0.00738268s, 11572 KB] Start Timestep: 1681956963772 millisecond(s).
[t=0.00742674s, 11572 KB] New best heuristic value for lmcut(): 136
[t=0.00774974s, 11572 KB] g=29, 2 evaluated, 1 expanded
[t=0.00777562s, 11572 KB] New best heuristic value for lmcut(): 130
[t=0.00811727s, 11572 KB] g=27, 3 evaluated, 1 expanded
[t=0.00817813s, 11572 KB] New best heuristic value for lmcut(): 119
[t=0.00848807s, 11572 KB] g=29, 4 evaluated, 1 expanded
[t=0.00851374s, 11572 KB] New best heuristic value for lmcut(): 114
[t=0.00888348s, 11572 KB] g=17, 5 evaluated, 1 expanded
[t=0.0112859s, 11572 KB] New best heuristic value for lmcut(): 112
[t=0.0116272s, 11572 KB] g=44, 15 evaluated, 2 expanded
[t=0.0133635s, 11572 KB] New best heuristic value for lmcut(): 111
[t=0.013666s, 11572 KB] g=18, 22 evaluated, 3 expanded
[t=0.0164952s, 11572 KB] New best heuristic value for lmcut(): 102
[t=0.0165336s, 11572 KB] g=45, 32 evaluated, 5 expanded
[t=0.0165595s, 11572 KB] New best heuristic value for lmcut(): 100
[t=0.0172204s, 11572 KB] g=58, 34 evaluated, 5 expanded
[t=0.0416522s, 11572 KB] New best heuristic value for lmcut(): 87
[t=0.0424336s, 11572 KB] g=129, 127 evaluated, 26 expanded
[t=0.134938s, 11572 KB] New best heuristic value for lmcut(): 81
[t=0.135117s, 11572 KB] g=116, 455 evaluated, 96 expanded, 1 reopened
[t=0.166427s, 11572 KB] New best heuristic value for lmcut(): 80
[t=0.166659s, 11572 KB] g=98, 567 evaluated, 119 expanded, 1 reopened
[t=0.168489s, 11572 KB] New best heuristic value for lmcut(): 79
[t=0.169121s, 11572 KB] g=99, 576 evaluated, 122 expanded, 1 reopened
[t=0.440289s, 11572 KB] New best heuristic value for lmcut(): 78
[t=0.440788s, 11572 KB] g=141, 1560 evaluated, 395 expanded, 25 reopened
[t=0.603895s, 11572 KB] New best heuristic value for lmcut(): 70
[t=0.603991s, 11572 KB] g=157, 2145 evaluated, 598 expanded, 68 reopened
[t=0.610152s, 11572 KB] New best heuristic value for lmcut(): 69
[t=0.610312s, 11572 KB] g=159, 2168 evaluated, 602 expanded, 68 reopened
[t=1.31636s, 11756 KB] New best heuristic value for lmcut(): 68
[t=1.31651s, 11756 KB] g=202, 4784 evaluated, 1360 expanded, 136 reopened
[t=1.45685s, 11756 KB] New best heuristic value for lmcut(): 51
[t=1.45767s, 11756 KB] g=210, 5309 evaluated, 1539 expanded, 165 reopened
[t=4.87033s, 12736 KB] New best heuristic value for lmcut(): 49
[t=4.87138s, 12736 KB] g=220, 18313 evaluated, 6253 expanded, 1019 reopened
[t=4.87141s, 12736 KB] New best heuristic value for lmcut(): 47
[t=4.8723s, 12736 KB] g=250, 18319 evaluated, 6254 expanded, 1019 reopened
[t=4.90169s, 12736 KB] New best heuristic value for lmcut(): 30
[t=4.90202s, 12736 KB] g=277, 18462 evaluated, 6284 expanded, 1021 reopened
[t=4.90205s, 12736 KB] New best heuristic value for lmcut(): 28
[t=4.90212s, 12736 KB] g=269, 18463 evaluated, 6284 expanded, 1021 reopened
[t=4.90214s, 12736 KB] New best heuristic value for lmcut(): 1
[t=4.9025s, 12736 KB] g=296, 18469 evaluated, 6285 expanded, 1021 reopened
[t=4.90266s, 12736 KB] New best heuristic value for lmcut(): 0
[t=4.90278s, 12736 KB] g=297, 18476 evaluated, 6286 expanded, 1021 reopened
[t=4.9028s, 12736 KB] Solution found!
pick-up truck-1 city-loc-6 package-3 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-5 (29)
drop truck-1 city-loc-5 package-3 capacity-2 capacity-3 (1)
pick-up truck-1 city-loc-5 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-5 city-loc-9 (27)
drive truck-2 city-loc-6 city-loc-4 (27)
drive truck-1 city-loc-9 city-loc-4 (19)
drive truck-1 city-loc-4 city-loc-8 (30)
pick-up truck-1 city-loc-8 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-loc-8 city-loc-10 (23)
pick-up truck-1 city-loc-10 package-1 capacity-0 capacity-1 (1)
drive truck-1 city-loc-10 city-loc-7 (21)
drop truck-1 city-loc-7 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-loc-7 city-loc-3 (20)
drop truck-1 city-loc-3 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-loc-3 city-loc-8 (17)
drive truck-1 city-loc-8 city-loc-4 (30)
drive truck-1 city-loc-4 city-loc-9 (19)
drive truck-1 city-loc-9 city-loc-5 (27)
drop truck-1 city-loc-5 package-1 capacity-2 capacity-3 (1)
[t=4.90307s, 12736 KB] Plan length: 20 step(s).
[t=4.90312s, 12736 KB] Plan cost: 297
[t=4.90314s, 12736 KB] Solution: Incumbent solution found!
[t=4.90317s, 12736 KB] Solution Timestep: 1681956968711 millisecond(s).
[t=4.90319s, 12736 KB] Timestamp: 1681956968711 millisecond(s).
[t=4.90322s, 12736 KB] Expanded 6287 state(s).
[t=4.90324s, 12736 KB] Reopened 1021 state(s).
[t=4.90326s, 12736 KB] Evaluated 18477 state(s).
[t=4.90329s, 12736 KB] Evaluations: 18477
[t=4.90331s, 12736 KB] Generated 48442 state(s).
[t=4.90333s, 12736 KB] Dead ends: 0 state(s).
[t=4.90336s, 12736 KB] Number of registered states: 18477
[t=4.90338s, 12736 KB] Int hash set load factor: 18477/32768 = 0.563873
[t=4.9034s, 12736 KB] Int hash set resizes: 15
[t=14.8031s, 13748 KB] Solution found!
pick-up truck-1 city-loc-6 package-3 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-5 (29)
pick-up truck-1 city-loc-5 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-loc-5 city-loc-9 (27)
drive truck-1 city-loc-9 city-loc-4 (19)
drive truck-1 city-loc-4 city-loc-8 (30)
pick-up truck-1 city-loc-8 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-loc-8 city-loc-7 (21)
drop truck-1 city-loc-7 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-loc-7 city-loc-10 (21)
pick-up truck-1 city-loc-10 package-1 capacity-0 capacity-1 (1)
drive truck-1 city-loc-10 city-loc-8 (23)
drive truck-1 city-loc-8 city-loc-3 (17)
drop truck-1 city-loc-3 package-4 capacity-0 capacity-1 (1)
drive truck-1 city-loc-3 city-loc-8 (17)
drive truck-1 city-loc-8 city-loc-4 (30)
drive truck-1 city-loc-4 city-loc-9 (19)
drive truck-1 city-loc-9 city-loc-5 (27)
drop truck-1 city-loc-5 package-1 capacity-1 capacity-2 (1)
drop truck-1 city-loc-5 package-3 capacity-2 capacity-3 (1)
[t=14.8037s, 13748 KB] Plan length: 20 step(s).
[t=14.8037s, 13748 KB] Plan cost: 288
[t=14.8038s, 13748 KB] Solution: Incumbent solution found!
[t=14.8038s, 13748 KB] Solution Timestep: 1681956978708 millisecond(s).
[t=14.8038s, 13748 KB] Timestamp: 1681956978708 millisecond(s).
[t=14.8038s, 13748 KB] Expanded 23687 state(s).
[t=14.8039s, 13748 KB] Reopened 3736 state(s).
[t=14.8039s, 13748 KB] Evaluated 36976 state(s).
[t=14.8039s, 13748 KB] Evaluations: 56980
[t=14.8039s, 13748 KB] Generated 182377 state(s).
[t=14.8039s, 13748 KB] Dead ends: 0 state(s).
[t=14.804s, 13748 KB] Number of registered states: 56980
[t=14.804s, 13748 KB] Int hash set load factor: 56980/65536 = 0.869446
[t=14.804s, 13748 KB] Int hash set resizes: 16
[t=17.3186s, 14776 KB] Solution found!
drive truck-2 city-loc-6 city-loc-5 (29)
pick-up truck-2 city-loc-5 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-5 city-loc-9 (27)
drive truck-2 city-loc-9 city-loc-4 (19)
drive truck-2 city-loc-4 city-loc-8 (30)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-10 (23)
pick-up truck-2 city-loc-10 package-1 capacity-1 capacity-2 (1)
drive truck-2 city-loc-10 city-loc-7 (21)
drop truck-2 city-loc-7 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-loc-7 city-loc-3 (20)
drop truck-2 city-loc-3 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-3 city-loc-8 (17)
drive truck-2 city-loc-8 city-loc-4 (30)
drive truck-2 city-loc-4 city-loc-6 (27)
pick-up truck-2 city-loc-6 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-5 (29)
drop truck-2 city-loc-5 package-1 capacity-2 capacity-3 (1)
drop truck-2 city-loc-5 package-3 capacity-3 capacity-4 (1)
[t=17.3197s, 14776 KB] Plan length: 19 step(s).
[t=17.3198s, 14776 KB] Plan cost: 280
[t=17.3198s, 14776 KB] Solution: Incumbent solution found!
[t=17.3198s, 14776 KB] Solution Timestep: 1681956981245 millisecond(s).
[t=17.3198s, 14776 KB] Timestamp: 1681956981245 millisecond(s).
[t=17.3199s, 14776 KB] Expanded 28879 state(s).
[t=17.3199s, 14776 KB] Reopened 4337 state(s).
[t=17.3199s, 14776 KB] Evaluated 39276 state(s).
[t=17.3199s, 14776 KB] Evaluations: 66651
[t=17.32s, 14776 KB] Generated 221893 state(s).
[t=17.32s, 14776 KB] Dead ends: 0 state(s).
[t=17.32s, 14776 KB] Number of registered states: 66651
[t=17.32s, 14776 KB] Int hash set load factor: 66651/131072 = 0.508507
[t=17.3201s, 14776 KB] Int hash set resizes: 17
[t=19.7187s, 14776 KB] Solution found!
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-loc-6 city-loc-5 (29)
drop truck-2 city-loc-5 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-5 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-5 city-loc-9 (27)
drive truck-2 city-loc-9 city-loc-4 (19)
drive truck-2 city-loc-4 city-loc-8 (30)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-3 (17)
drop truck-2 city-loc-3 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-3 city-loc-7 (20)
drop truck-2 city-loc-7 package-2 capacity-3 capacity-4 (1)
drive truck-2 city-loc-7 city-loc-10 (21)
pick-up truck-2 city-loc-10 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-loc-10 city-loc-8 (23)
drive truck-2 city-loc-8 city-loc-4 (30)
drive truck-2 city-loc-4 city-loc-9 (19)
drive truck-2 city-loc-9 city-loc-5 (27)
drop truck-2 city-loc-5 package-1 capacity-3 capacity-4 (1)
[t=19.7191s, 14776 KB] Plan length: 19 step(s).
[t=19.7191s, 14776 KB] Plan cost: 270
[t=19.7191s, 14776 KB] Solution: Incumbent solution found!
[t=19.7192s, 14776 KB] Solution Timestep: 1681956983667 millisecond(s).
[t=19.7192s, 14776 KB] Timestamp: 1681956983667 millisecond(s).
[t=19.7192s, 14776 KB] Expanded 34692 state(s).
[t=19.7192s, 14776 KB] Reopened 5110 state(s).
[t=19.7193s, 14776 KB] Evaluated 40403 state(s).
[t=19.7193s, 14776 KB] Evaluations: 76010
[t=19.7193s, 14776 KB] Generated 266469 state(s).
[t=19.7193s, 14776 KB] Dead ends: 0 state(s).
[t=19.7194s, 14776 KB] Number of registered states: 76010
[t=19.7194s, 14776 KB] Int hash set load factor: 76010/131072 = 0.57991
[t=19.7194s, 14776 KB] Int hash set resizes: 17
[t=24.4765s, 15076 KB] Optimal Solution: found
[t=24.4767s, 15076 KB] Actual search time: 24.4692s
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-loc-6 city-loc-5 (29)
drop truck-2 city-loc-5 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-5 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-5 city-loc-9 (27)
drive truck-2 city-loc-9 city-loc-4 (19)
drive truck-2 city-loc-4 city-loc-8 (30)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-3 (17)
drop truck-2 city-loc-3 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-3 city-loc-7 (20)
drop truck-2 city-loc-7 package-2 capacity-3 capacity-4 (1)
drive truck-2 city-loc-7 city-loc-10 (21)
pick-up truck-2 city-loc-10 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-loc-10 city-loc-8 (23)
drive truck-2 city-loc-8 city-loc-4 (30)
drive truck-2 city-loc-4 city-loc-9 (19)
drive truck-2 city-loc-9 city-loc-5 (27)
drop truck-2 city-loc-5 package-1 capacity-3 capacity-4 (1)
[t=24.4767s, 15076 KB] Plan length: 19 step(s).
[t=24.4767s, 15076 KB] Plan cost: 270
[t=24.4767s, 15076 KB] Timestamp: 1681956988466 millisecond(s).
[t=24.4767s, 15076 KB] Expanded 47717 state(s).
[t=24.4767s, 15076 KB] Reopened 5984 state(s).
[t=24.4767s, 15076 KB] Evaluated 41733 state(s).
[t=24.4767s, 15076 KB] Evaluations: 93808
[t=24.4767s, 15076 KB] Generated 367036 state(s).
[t=24.4767s, 15076 KB] Dead ends: 0 state(s).
[t=24.4767s, 15076 KB] Number of registered states: 93808
[t=24.4767s, 15076 KB] Int hash set load factor: 93808/131072 = 0.715698
[t=24.4767s, 15076 KB] Int hash set resizes: 17
[t=24.4767s, 15076 KB] Search time: 24.4696s
[t=24.4767s, 15076 KB] Total time: 24.4767s
Solution found.
Peak memory: 15076 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan sas_plan.1 sas_plan.2 sas_plan.3 sas_plan.4
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 270 
Checking plan: sas_plan.1
Plan executed successfully - checking goal
Plan valid
Final value: 297 
Checking plan: sas_plan.2
Plan executed successfully - checking goal
Plan valid
Final value: 288 
Checking plan: sas_plan.3
Plan executed successfully - checking goal
Plan valid
Final value: 280 
Checking plan: sas_plan.4
Plan executed successfully - checking goal
Plan valid
Final value: 270 

Successful plans:
Value: 270
 sas_plan 270 
sas_plan.4 270 

Value: 280
 sas_plan.3 280 

Value: 288
 sas_plan.2 288 

Value: 297
 sas_plan.1 297 

validate exit code: 0

INFO     Planner time: 24.64s
