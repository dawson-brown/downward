INFO     planner time limit: 600s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/assign3/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.360s CPU, 0.365s wall-clock]
32897 relevant atoms
6080 auxiliary atoms
38977 final queue length
186369 total queue pushes
Completing instantiation... [2.240s CPU, 2.259s wall-clock]
Instantiating: [2.620s CPU, 2.641s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.040s CPU, 0.042s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
8 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.040s CPU, 0.043s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.070s CPU, 0.068s wall-clock]
Translating task: [1.610s CPU, 1.618s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.960s CPU, 0.971s wall-clock]
Reordering and filtering variables...
16 of 16 variables necessary.
0 of 8 mutex groups necessary.
32736 of 32736 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.230s CPU, 0.226s wall-clock]
Translator variables: 16
Translator derived variables: 0
Translator facts: 80
Translator goal facts: 16
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 32736
Translator axioms: 0
Translator task size: 294864
Translator peak memory: 232028 KB
Writing output... [0.210s CPU, 0.210s wall-clock]
Done! [5.750s CPU, 5.794s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 594s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'iterated([
            lazy_wastar([h],w=5),
            lazy_wastar([h],w=4),
            lazy_wastar([h],w=3),
            lazy_wastar([h],w=2),
            astar(h)
        ],continue_on_fail=true)' --internal-plan-file sas_plan < output.sas
[t=0.00105196s, 10884 KB] reading input...
[t=0.147132s, 24640 KB] done reading input!
[t=0.170245s, 32748 KB] Initializing landmark cut heuristic...
[t=0.1704s, 32748 KB] Building successor generator...done!
[t=0.183052s, 36704 KB] peak memory difference for successor generator creation: 3956 KB
[t=0.183153s, 36704 KB] time for successor generation creation: 0.0122573s
[t=0.183178s, 36704 KB] Variables: 16
[t=0.183209s, 36704 KB] FactPairs: 80
[t=0.183233s, 36704 KB] Bytes per state: 4
[t=0.183256s, 36704 KB] Start Timestep: 1682000743869 millisecond(s).
[t=0.183373s, 36704 KB] Building successor generator...done!
[t=0.183475s, 36704 KB] peak memory difference for successor generator creation: 0 KB
[t=0.183525s, 36704 KB] time for successor generation creation: 0s
[t=0.183549s, 36704 KB] Variables: 16
[t=0.183573s, 36704 KB] FactPairs: 80
[t=0.183594s, 36704 KB] Bytes per state: 4
[t=0.183617s, 36704 KB] Starting search: lazy_wastar([h],w=5)
[t=0.183655s, 36704 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.183684s, 36704 KB] Start Timestep: 1682000743870 millisecond(s).
[t=0.196303s, 36704 KB] New best heuristic value for lmcut(): 24
[t=0.197017s, 36704 KB] g=0, 1 evaluated, 0 expanded
[t=0.197046s, 36704 KB] Initial heuristic value for lmcut(): 24
[t=0.207826s, 36704 KB] New best heuristic value for lmcut(): 21
[t=0.208572s, 36704 KB] g=3, 2 evaluated, 1 expanded
[t=0.219363s, 36704 KB] New best heuristic value for lmcut(): 19
[t=0.219905s, 36704 KB] g=6, 3 evaluated, 2 expanded
[t=0.229823s, 36704 KB] New best heuristic value for lmcut(): 16
[t=0.230261s, 36704 KB] g=9, 4 evaluated, 3 expanded
[t=0.239259s, 36704 KB] New best heuristic value for lmcut(): 13
[t=0.2394s, 36704 KB] g=12, 5 evaluated, 4 expanded
[t=0.246589s, 36704 KB] New best heuristic value for lmcut(): 12
[t=0.246887s, 36704 KB] g=15, 6 evaluated, 5 expanded
[t=0.289705s, 36704 KB] New best heuristic value for lmcut(): 9
[t=0.290192s, 36704 KB] g=18, 13 evaluated, 12 expanded, 2 reopened
[t=0.312837s, 36704 KB] New best heuristic value for lmcut(): 8
[t=0.313455s, 36704 KB] g=21, 18 evaluated, 17 expanded, 4 reopened
[t=0.333848s, 36704 KB] New best heuristic value for lmcut(): 5
[t=0.334496s, 36704 KB] g=24, 23 evaluated, 22 expanded, 6 reopened
[t=0.723316s, 36704 KB] New best heuristic value for lmcut(): 2
[t=0.723718s, 36704 KB] g=30, 134 evaluated, 133 expanded, 60 reopened
[t=0.733779s, 36704 KB] New best heuristic value for lmcut(): 1
[t=0.734293s, 36704 KB] g=33, 137 evaluated, 136 expanded, 61 reopened
[t=0.74847s, 36704 KB] Solution found!
[t=0.749028s, 36704 KB] Actual search time: 0.565319s
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-1a car-in-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-1b car-out-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2a car-in-2b car-out-2a car-out-2b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-2b car-out-2a car-out-1b car-in-1a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-2a car-out-1b car-in-1a car-in-2b (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2b car-out-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1b car-out-1a car-out-2b car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-1a car-out-2b car-in-2a car-in-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-2b car-in-2a car-in-1b car-out-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-2a car-in-1b car-out-1a car-out-2b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-2a car-out-1b (3)
[t=0.749225s, 36704 KB] Plan length: 14 step(s).
[t=0.749262s, 36704 KB] Plan cost: 36
[t=0.749286s, 36704 KB] Solution Timestep: 1682000744443 millisecond(s).
[t=0.749315s, 36704 KB] Timestamp: 1682000744443 millisecond(s).
[t=0.749338s, 36704 KB] Expanded 141 state(s).
[t=0.749361s, 36704 KB] Reopened 63 state(s).
[t=0.749382s, 36704 KB] Evaluated 142 state(s).
[t=0.749405s, 36704 KB] Evaluations: 79
[t=0.749428s, 36704 KB] Generated 1128 state(s).
[t=0.749451s, 36704 KB] Dead ends: 0 state(s).
[t=0.749473s, 36704 KB] Number of registered states: 79
[t=0.749496s, 36704 KB] Int hash set load factor: 79/128 = 0.617188
[t=0.749522s, 36704 KB] Int hash set resizes: 7
[t=0.749544s, 36704 KB] Best solution cost so far: 36
[t=0.749568s, 36704 KB] Solution found - keep searching
[t=0.749591s, 36704 KB] Building successor generator...done!
[t=0.749717s, 36704 KB] peak memory difference for successor generator creation: 0 KB
[t=0.749755s, 36704 KB] time for successor generation creation: 0s
[t=0.749779s, 36704 KB] Variables: 16
[t=0.749805s, 36704 KB] FactPairs: 80
[t=0.749828s, 36704 KB] Bytes per state: 4
[t=0.749851s, 36704 KB] Starting search: lazy_wastar([h],w=4)
[t=0.749886s, 36704 KB] Conducting lazy best first search, (real) bound = 36
[t=0.749908s, 36704 KB] Start Timestep: 1682000744444 millisecond(s).
[t=0.761696s, 36704 KB] New best heuristic value for lmcut(): 24
[t=0.762371s, 36704 KB] g=0, 1 evaluated, 0 expanded
[t=0.762399s, 36704 KB] Initial heuristic value for lmcut(): 24
[t=0.773226s, 36704 KB] New best heuristic value for lmcut(): 21
[t=0.77409s, 36704 KB] g=3, 2 evaluated, 1 expanded
[t=0.78475s, 36704 KB] New best heuristic value for lmcut(): 19
[t=0.785421s, 36704 KB] g=6, 3 evaluated, 2 expanded
[t=0.795227s, 36704 KB] New best heuristic value for lmcut(): 16
[t=0.795774s, 36704 KB] g=9, 4 evaluated, 3 expanded
[t=0.804645s, 36704 KB] New best heuristic value for lmcut(): 13
[t=0.80486s, 36704 KB] g=12, 5 evaluated, 4 expanded
[t=0.811964s, 36704 KB] New best heuristic value for lmcut(): 12
[t=0.812329s, 36704 KB] g=15, 6 evaluated, 5 expanded
[t=0.855063s, 36704 KB] New best heuristic value for lmcut(): 9
[t=0.855676s, 36704 KB] g=18, 13 evaluated, 12 expanded, 2 reopened
[t=0.878679s, 36704 KB] New best heuristic value for lmcut(): 8
[t=0.878843s, 36704 KB] g=21, 18 evaluated, 17 expanded, 4 reopened
[t=0.89918s, 36704 KB] New best heuristic value for lmcut(): 5
[t=0.899981s, 36704 KB] g=24, 23 evaluated, 22 expanded, 6 reopened
[t=1.29355s, 36704 KB] New best heuristic value for lmcut(): 2
[t=1.29382s, 36704 KB] g=30, 134 evaluated, 133 expanded, 60 reopened
[t=1.304s, 36704 KB] New best heuristic value for lmcut(): 1
[t=1.30436s, 36704 KB] g=33, 137 evaluated, 136 expanded, 61 reopened
[t=1.31863s, 36704 KB] Solution found!
[t=1.31921s, 36704 KB] Actual search time: 0.569276s
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-1a car-in-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-1b car-out-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2a car-in-2b car-out-2a car-out-2b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-2b car-out-2a car-out-1b car-in-1a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-2a car-out-1b car-in-1a car-in-2b (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2b car-out-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1b car-out-1a car-out-2b car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-1a car-out-2b car-in-2a car-in-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-2b car-in-2a car-in-1b car-out-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-2a car-in-1b car-out-1a car-out-2b (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-2a car-out-1b (1)
[t=1.3194s, 36704 KB] Plan length: 14 step(s).
[t=1.31944s, 36704 KB] Plan cost: 34
[t=1.31946s, 36704 KB] Solution Timestep: 1682000745022 millisecond(s).
[t=1.31949s, 36704 KB] Timestamp: 1682000745022 millisecond(s).
[t=1.31951s, 36704 KB] Expanded 139 state(s).
[t=1.31953s, 36704 KB] Reopened 61 state(s).
[t=1.31956s, 36704 KB] Evaluated 140 state(s).
[t=1.31958s, 36704 KB] Evaluations: 79
[t=1.3196s, 36704 KB] Generated 1112 state(s).
[t=1.31962s, 36704 KB] Dead ends: 0 state(s).
[t=1.31965s, 36704 KB] Number of registered states: 79
[t=1.31967s, 36704 KB] Int hash set load factor: 79/128 = 0.617188
[t=1.31969s, 36704 KB] Int hash set resizes: 7
[t=1.31971s, 36704 KB] Best solution cost so far: 34
[t=1.31974s, 36704 KB] Solution found - keep searching
[t=1.31976s, 36704 KB] Building successor generator...done!
[t=1.31989s, 36704 KB] peak memory difference for successor generator creation: 0 KB
[t=1.31993s, 36704 KB] time for successor generation creation: 0s
[t=1.31996s, 36704 KB] Variables: 16
[t=1.31998s, 36704 KB] FactPairs: 80
[t=1.32001s, 36704 KB] Bytes per state: 4
[t=1.32003s, 36704 KB] Starting search: lazy_wastar([h],w=3)
[t=1.32006s, 36704 KB] Conducting lazy best first search, (real) bound = 34
[t=1.32008s, 36704 KB] Start Timestep: 1682000745023 millisecond(s).
[t=1.33193s, 36704 KB] New best heuristic value for lmcut(): 24
[t=1.33231s, 36704 KB] g=0, 1 evaluated, 0 expanded
[t=1.33234s, 36704 KB] Initial heuristic value for lmcut(): 24
[t=1.34343s, 36704 KB] New best heuristic value for lmcut(): 21
[t=1.34376s, 36704 KB] g=3, 2 evaluated, 1 expanded
[t=1.35489s, 36704 KB] New best heuristic value for lmcut(): 19
[t=1.35516s, 36704 KB] g=6, 3 evaluated, 2 expanded
[t=1.36431s, 36704 KB] New best heuristic value for lmcut(): 16
[t=1.36539s, 36704 KB] g=9, 4 evaluated, 3 expanded
[t=1.37375s, 36704 KB] New best heuristic value for lmcut(): 13
[t=1.37445s, 36704 KB] g=12, 5 evaluated, 4 expanded
[t=1.38106s, 36704 KB] New best heuristic value for lmcut(): 12
[t=1.38192s, 36704 KB] g=15, 6 evaluated, 5 expanded
[t=1.42513s, 36704 KB] New best heuristic value for lmcut(): 9
[t=1.42576s, 36704 KB] g=16, 14 evaluated, 13 expanded, 3 reopened
[t=1.44814s, 36704 KB] New best heuristic value for lmcut(): 8
[t=1.44912s, 36704 KB] g=19, 19 evaluated, 18 expanded, 5 reopened
[t=1.46284s, 36704 KB] New best heuristic value for lmcut(): 7
[t=1.46314s, 36704 KB] g=19, 21 evaluated, 20 expanded, 5 reopened
[t=1.48281s, 36704 KB] New best heuristic value for lmcut(): 4
[t=1.48325s, 36704 KB] g=22, 26 evaluated, 25 expanded, 7 reopened
[t=1.51536s, 36704 KB] New best heuristic value for lmcut(): 3
[t=1.51595s, 36704 KB] g=25, 33 evaluated, 32 expanded, 9 reopened
[t=1.54154s, 36704 KB] New best heuristic value for lmcut(): 2
[t=1.54223s, 36704 KB] g=28, 39 evaluated, 38 expanded, 11 reopened
[t=1.56676s, 36704 KB] New best heuristic value for lmcut(): 1
[t=1.56749s, 36704 KB] g=29, 47 evaluated, 46 expanded, 15 reopened
[t=1.58253s, 36704 KB] Solution found!
[t=1.58265s, 36704 KB] Actual search time: 0.262542s
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-1a car-in-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-1b car-out-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (1)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2a car-in-2b car-out-2a car-out-2b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2b car-out-2a car-out-2b car-in-2a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-2a car-out-2b car-out-1b car-in-1a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-out-2b car-out-1b car-in-2a car-in-2b (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1b car-in-2a car-in-1a car-out-2a (1)
rotate-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2a car-in-1a car-in-2b car-out-2b (1)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-2a car-out-1b (3)
[t=1.58282s, 36704 KB] Plan length: 12 step(s).
[t=1.58286s, 36704 KB] Plan cost: 30
[t=1.58288s, 36704 KB] Solution Timestep: 1682000745291 millisecond(s).
[t=1.58291s, 36704 KB] Timestamp: 1682000745291 millisecond(s).
[t=1.58293s, 36704 KB] Expanded 52 state(s).
[t=1.58295s, 36704 KB] Reopened 18 state(s).
[t=1.58298s, 36704 KB] Evaluated 53 state(s).
[t=1.583s, 36704 KB] Evaluations: 35
[t=1.58302s, 36704 KB] Generated 416 state(s).
[t=1.58304s, 36704 KB] Dead ends: 0 state(s).
[t=1.58307s, 36704 KB] Number of registered states: 35
[t=1.58309s, 36704 KB] Int hash set load factor: 35/64 = 0.546875
[t=1.58311s, 36704 KB] Int hash set resizes: 6
[t=1.58314s, 36704 KB] Best solution cost so far: 30
[t=1.58316s, 36704 KB] Solution found - keep searching
[t=1.58325s, 36704 KB] Building successor generator...done!
[t=1.58331s, 36704 KB] peak memory difference for successor generator creation: 0 KB
[t=1.58335s, 36704 KB] time for successor generation creation: 0s
[t=1.58338s, 36704 KB] Variables: 16
[t=1.5834s, 36704 KB] FactPairs: 80
[t=1.58342s, 36704 KB] Bytes per state: 4
[t=1.58345s, 36704 KB] Starting search: lazy_wastar([h],w=2)
[t=1.58348s, 36704 KB] Conducting lazy best first search, (real) bound = 30
[t=1.5835s, 36704 KB] Start Timestep: 1682000745292 millisecond(s).
[t=1.59581s, 36704 KB] New best heuristic value for lmcut(): 24
[t=1.59611s, 36704 KB] g=0, 1 evaluated, 0 expanded
[t=1.59614s, 36704 KB] Initial heuristic value for lmcut(): 24
[t=1.60837s, 36704 KB] New best heuristic value for lmcut(): 21
[t=1.60863s, 36704 KB] g=3, 2 evaluated, 1 expanded
[t=1.61984s, 36704 KB] New best heuristic value for lmcut(): 19
[t=1.62009s, 36704 KB] g=6, 3 evaluated, 2 expanded
[t=1.63032s, 36704 KB] New best heuristic value for lmcut(): 16
[t=1.63044s, 36704 KB] g=9, 4 evaluated, 3 expanded
[t=1.63931s, 36704 KB] New best heuristic value for lmcut(): 13
[t=1.6396s, 36704 KB] g=12, 5 evaluated, 4 expanded
[t=1.64571s, 36704 KB] New best heuristic value for lmcut(): 12
[t=1.64711s, 36704 KB] g=15, 6 evaluated, 5 expanded
[t=1.68566s, 36704 KB] New best heuristic value for lmcut(): 9
[t=1.68941s, 36704 KB] g=16, 14 evaluated, 13 expanded, 3 reopened
[t=1.70953s, 36704 KB] New best heuristic value for lmcut(): 8
[t=1.7122s, 36704 KB] g=19, 19 evaluated, 18 expanded, 5 reopened
[t=1.72547s, 36704 KB] New best heuristic value for lmcut(): 7
[t=1.72582s, 36704 KB] g=19, 21 evaluated, 20 expanded, 5 reopened
[t=1.74132s, 36704 KB] New best heuristic value for lmcut(): 4
[t=1.74524s, 36704 KB] g=22, 26 evaluated, 25 expanded, 7 reopened
[t=1.77325s, 36704 KB] New best heuristic value for lmcut(): 3
[t=1.77718s, 36704 KB] g=25, 33 evaluated, 32 expanded, 9 reopened
[t=1.80042s, 36704 KB] New best heuristic value for lmcut(): 2
[t=1.80245s, 36704 KB] g=28, 39 evaluated, 38 expanded, 11 reopened
[t=1.82507s, 36704 KB] New best heuristic value for lmcut(): 1
[t=1.82716s, 36704 KB] g=29, 47 evaluated, 46 expanded, 15 reopened
[t=1.84018s, 36704 KB] Solution found!
[t=1.84199s, 36704 KB] Actual search time: 0.258461s
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-1a car-in-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-1b car-out-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (1)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2a car-in-2b car-out-2a car-out-2b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2b car-out-2a car-out-2b car-in-2a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-2a car-out-2b car-out-1b car-in-1a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-out-2b car-out-1b car-in-2a car-in-2b (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1b car-in-2a car-in-1a car-out-2a (1)
rotate-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2a car-in-1a car-in-2b car-out-2b (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-2a car-out-1b (1)
[t=1.84217s, 36704 KB] Plan length: 12 step(s).
[t=1.8422s, 36704 KB] Plan cost: 28
[t=1.84223s, 36704 KB] Solution Timestep: 1682000745553 millisecond(s).
[t=1.84225s, 36704 KB] Timestamp: 1682000745553 millisecond(s).
[t=1.84228s, 36704 KB] Expanded 50 state(s).
[t=1.8423s, 36704 KB] Reopened 16 state(s).
[t=1.84232s, 36704 KB] Evaluated 51 state(s).
[t=1.84234s, 36704 KB] Evaluations: 35
[t=1.84236s, 36704 KB] Generated 400 state(s).
[t=1.84239s, 36704 KB] Dead ends: 0 state(s).
[t=1.84241s, 36704 KB] Number of registered states: 35
[t=1.84243s, 36704 KB] Int hash set load factor: 35/64 = 0.546875
[t=1.84246s, 36704 KB] Int hash set resizes: 6
[t=1.84248s, 36704 KB] Best solution cost so far: 28
[t=1.8425s, 36704 KB] Solution found - keep searching
[t=1.84252s, 36704 KB] Building successor generator...done!
[t=1.84262s, 36704 KB] peak memory difference for successor generator creation: 0 KB
[t=1.84266s, 36704 KB] time for successor generation creation: 0s
[t=1.84269s, 36704 KB] Variables: 16
[t=1.84271s, 36704 KB] FactPairs: 80
[t=1.84273s, 36704 KB] Bytes per state: 4
[t=1.84276s, 36704 KB] Starting search: astar(h)
[t=1.84279s, 36704 KB] Conducting best first search with reopening closed nodes, (real) bound = 28
[t=1.85183s, 36704 KB] New best heuristic value for lmcut(): 24
[t=1.85507s, 36704 KB] g=0, 1 evaluated, 0 expanded
[t=1.85511s, 36704 KB] f = 24, 1 evaluated, 0 expanded
[t=1.85513s, 36704 KB] Initial heuristic value for lmcut(): 24
[t=1.85516s, 36704 KB] pruning method: none
[t=1.85518s, 36704 KB] Start Timestep: 1682000745566 millisecond(s).
[t=1.86373s, 36704 KB] New best heuristic value for lmcut(): 21
[t=1.86627s, 36704 KB] g=3, 2 evaluated, 1 expanded
[t=1.95952s, 36704 KB] New best heuristic value for lmcut(): 19
[t=1.96017s, 36704 KB] g=6, 10 evaluated, 2 expanded
[t=1.97945s, 36704 KB] New best heuristic value for lmcut(): 18
[t=1.98178s, 36704 KB] g=6, 12 evaluated, 2 expanded
[t=2.0472s, 36704 KB] New best heuristic value for lmcut(): 16
[t=2.04739s, 36704 KB] g=9, 18 evaluated, 3 expanded
[t=2.06314s, 36704 KB] New best heuristic value for lmcut(): 15
[t=2.06716s, 36704 KB] g=9, 20 evaluated, 3 expanded
[t=2.12303s, 36704 KB] New best heuristic value for lmcut(): 13
[t=2.12647s, 36704 KB] g=12, 26 evaluated, 4 expanded
[t=2.14285s, 36704 KB] New best heuristic value for lmcut(): 12
[t=2.14401s, 36704 KB] g=12, 28 evaluated, 4 expanded
[t=2.19872s, 36704 KB] New best heuristic value for lmcut(): 11
[t=2.2013s, 36704 KB] g=15, 34 evaluated, 5 expanded
[t=2.21466s, 36704 KB] New best heuristic value for lmcut(): 9
[t=2.21599s, 36704 KB] g=15, 36 evaluated, 5 expanded
[t=2.27448s, 36704 KB] New best heuristic value for lmcut(): 8
[t=2.27782s, 36704 KB] g=18, 44 evaluated, 6 expanded
[t=2.28641s, 36704 KB] New best heuristic value for lmcut(): 6
[t=2.28919s, 36704 KB] g=18, 46 evaluated, 6 expanded
[t=2.31429s, 36704 KB] New best heuristic value for lmcut(): 5
[t=2.31486s, 36704 KB] g=21, 50 evaluated, 7 expanded
[t=2.94504s, 36704 KB] f = 25, 120 evaluated, 16 expanded
[t=5.95675s, 36704 KB] New best heuristic value for lmcut(): 4
[t=5.95766s, 36704 KB] g=21, 487 evaluated, 68 expanded
[t=5.96869s, 36704 KB] New best heuristic value for lmcut(): 3
[t=5.96891s, 36704 KB] g=24, 489 evaluated, 69 expanded
[t=33.2747s, 36704 KB] f = 26, 3584 evaluated, 507 expanded
[t=33.3976s, 36704 KB] New best heuristic value for lmcut(): 1
[t=33.3981s, 36704 KB] g=25, 3603 evaluated, 511 expanded
[t=33.4343s, 36704 KB] New best heuristic value for lmcut(): 0
[t=33.4349s, 36704 KB] g=26, 3609 evaluated, 512 expanded
[t=33.4418s, 36704 KB] Solution found!
[t=33.4422s, 36704 KB] Actual search time: 31.587s
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1b car-out-1a car-out-2a car-out-2b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-1a car-out-2a car-out-2b car-in-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-2a car-out-2b car-in-1b car-out-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-2b car-in-1b car-out-1a car-out-2a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-2a seg-out-2b car-in-2a car-in-2b car-out-2a car-out-2b (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-2b car-out-2a car-out-1b car-in-1a (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-2a car-out-1b car-in-1a car-in-2b (1)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2b car-out-2a (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-2a car-out-1b (1)
[t=33.4423s, 36704 KB] Plan length: 10 step(s).
[t=33.4424s, 36704 KB] Plan cost: 26
[t=33.4424s, 36704 KB] Solution Timestep: 1682000777392 millisecond(s).
[t=33.4424s, 36704 KB] Timestamp: 1682000777392 millisecond(s).
[t=33.4424s, 36704 KB] Expanded 513 state(s).
[t=33.4425s, 36704 KB] Reopened 0 state(s).
[t=33.4425s, 36704 KB] Evaluated 3610 state(s).
[t=33.4425s, 36704 KB] Evaluations: 3610
[t=33.4425s, 36704 KB] Generated 4092 state(s).
[t=33.4426s, 36704 KB] Dead ends: 0 state(s).
[t=33.4426s, 36704 KB] Expanded until last jump: 507 state(s).
[t=33.4426s, 36704 KB] Reopened until last jump: 0 state(s).
[t=33.4426s, 36704 KB] Evaluated until last jump: 3584 state(s).
[t=33.4427s, 36704 KB] Generated until last jump: 4056 state(s).
[t=33.4427s, 36704 KB] Number of registered states: 3610
[t=33.4427s, 36704 KB] Int hash set load factor: 3610/4096 = 0.881348
[t=33.4427s, 36704 KB] Int hash set resizes: 12
[t=33.4428s, 36704 KB] Best solution cost so far: 26
[t=33.4428s, 36704 KB] Solution found - keep searching
[t=33.4428s, 36704 KB] Optimal Solution: found
[t=33.4429s, 36704 KB] Actual search time: 33.2595s
[t=33.4429s, 36704 KB] Cumulative statistics:
[t=33.4429s, 36704 KB] Timestamp: 1682000777392 millisecond(s).
[t=33.4429s, 36704 KB] Expanded 895 state(s).
[t=33.4429s, 36704 KB] Reopened 158 state(s).
[t=33.4429s, 36704 KB] Evaluated 3996 state(s).
[t=33.4429s, 36704 KB] Evaluations: 3838
[t=33.4429s, 36704 KB] Generated 7148 state(s).
[t=33.4429s, 36704 KB] Dead ends: 0 state(s).
[t=33.4429s, 36704 KB] Search time: 33.2596s
[t=33.4429s, 36704 KB] Total time: 33.4429s
Solution found.
Peak memory: 36704 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan.1 sas_plan.2 sas_plan.3 sas_plan.4 sas_plan.5
Checking plan: sas_plan.1
Plan executed successfully - checking goal
Plan valid
Final value: 36 
Checking plan: sas_plan.2
Plan executed successfully - checking goal
Plan valid
Final value: 34 
Checking plan: sas_plan.3
Plan executed successfully - checking goal
Plan valid
Final value: 30 
Checking plan: sas_plan.4
Plan executed successfully - checking goal
Plan valid
Final value: 28 
Checking plan: sas_plan.5
Plan executed successfully - checking goal
Plan valid
Final value: 26 

Successful plans:
Value: 26
 sas_plan.5 26 

Value: 28
 sas_plan.4 28 

Value: 30
 sas_plan.3 30 

Value: 34
 sas_plan.2 34 

Value: 36
 sas_plan.1 36 

validate exit code: 0

INFO     Planner time: 39.33s
