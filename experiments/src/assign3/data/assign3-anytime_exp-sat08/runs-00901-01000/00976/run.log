INFO     planner time limit: 600s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/assign3/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.260s CPU, 0.290s wall-clock]
33265 relevant atoms
7808 auxiliary atoms
41073 final queue length
122737 total queue pushes
Completing instantiation... [1.340s CPU, 1.354s wall-clock]
Instantiating: [1.600s CPU, 1.659s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.019s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
16 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.022s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.042s wall-clock]
Translating task: [1.060s CPU, 1.072s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.690s CPU, 0.702s wall-clock]
Reordering and filtering variables...
32 of 32 variables necessary.
16 of 32 mutex groups necessary.
30720 of 30720 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.120s CPU, 0.114s wall-clock]
Translator variables: 32
Translator derived variables: 0
Translator facts: 288
Translator goal facts: 32
Translator mutex groups: 16
Translator total mutex groups size: 256
Translator operators: 30720
Translator axioms: 0
Translator task size: 169568
Translator peak memory: 154952 KB
Writing output... [0.140s CPU, 0.142s wall-clock]
Done! [3.690s CPU, 3.766s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 596s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'iterated([
            lazy_wastar([h],w=5),
            lazy_wastar([h],w=4),
            lazy_wastar([h],w=3),
            lazy_wastar([h],w=2),
            astar(h)
        ],continue_on_fail=true)' --internal-plan-file sas_plan < output.sas
[t=0.00065783s, 10884 KB] reading input...
[t=0.0961861s, 20232 KB] done reading input!
[t=0.114027s, 26044 KB] Initializing landmark cut heuristic...
[t=0.114659s, 26044 KB] Building successor generator...done!
[t=0.125478s, 29496 KB] peak memory difference for successor generator creation: 3452 KB
[t=0.125523s, 29496 KB] time for successor generation creation: 0.0096639s
[t=0.125548s, 29496 KB] Variables: 32
[t=0.12558s, 29496 KB] FactPairs: 288
[t=0.125603s, 29496 KB] Bytes per state: 12
[t=0.125627s, 29496 KB] Start Timestep: 1682010656430 millisecond(s).
[t=0.125734s, 29496 KB] Building successor generator...done!
[t=0.125832s, 29496 KB] peak memory difference for successor generator creation: 0 KB
[t=0.12587s, 29496 KB] time for successor generation creation: 0s
[t=0.125894s, 29496 KB] Variables: 32
[t=0.125919s, 29496 KB] FactPairs: 288
[t=0.125943s, 29496 KB] Bytes per state: 12
[t=0.125967s, 29496 KB] Starting search: lazy_wastar([h],w=5)
[t=0.126005s, 29496 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.126029s, 29496 KB] Start Timestep: 1682010656430 millisecond(s).
[t=0.135812s, 29496 KB] New best heuristic value for lmcut(): 48
[t=0.13629s, 29496 KB] g=0, 1 evaluated, 0 expanded
[t=0.136317s, 29496 KB] Initial heuristic value for lmcut(): 48
[t=0.144144s, 29496 KB] New best heuristic value for lmcut(): 45
[t=0.145123s, 29496 KB] g=3, 2 evaluated, 1 expanded
[t=0.153566s, 29496 KB] New best heuristic value for lmcut(): 43
[t=0.154035s, 29496 KB] g=6, 3 evaluated, 2 expanded
[t=0.162018s, 29496 KB] New best heuristic value for lmcut(): 42
[t=0.162272s, 29496 KB] g=9, 4 evaluated, 3 expanded
[t=0.170328s, 29496 KB] New best heuristic value for lmcut(): 40
[t=0.170702s, 29496 KB] g=12, 5 evaluated, 4 expanded
[t=0.177775s, 29496 KB] New best heuristic value for lmcut(): 39
[t=0.178384s, 29496 KB] g=15, 6 evaluated, 5 expanded
[t=0.194439s, 29496 KB] New best heuristic value for lmcut(): 37
[t=0.194786s, 29496 KB] g=18, 9 evaluated, 8 expanded, 1 reopened
[t=0.201763s, 29496 KB] New best heuristic value for lmcut(): 36
[t=0.202025s, 29496 KB] g=21, 10 evaluated, 9 expanded, 1 reopened
[t=0.225124s, 29496 KB] New best heuristic value for lmcut(): 34
[t=0.225501s, 29496 KB] g=24, 15 evaluated, 14 expanded, 3 reopened
[t=0.231109s, 29496 KB] New best heuristic value for lmcut(): 33
[t=0.232215s, 29496 KB] g=27, 16 evaluated, 15 expanded, 3 reopened
[t=0.260618s, 29496 KB] New best heuristic value for lmcut(): 31
[t=0.261187s, 29496 KB] g=30, 23 evaluated, 22 expanded, 6 reopened
[t=0.266772s, 29496 KB] New best heuristic value for lmcut(): 30
[t=0.267388s, 29496 KB] g=33, 24 evaluated, 23 expanded, 6 reopened
[t=0.300367s, 29496 KB] New best heuristic value for lmcut(): 28
[t=0.301371s, 29496 KB] g=36, 33 evaluated, 32 expanded, 10 reopened
[t=0.306633s, 29496 KB] New best heuristic value for lmcut(): 27
[t=0.307101s, 29496 KB] g=39, 34 evaluated, 33 expanded, 10 reopened
[t=0.344474s, 29496 KB] New best heuristic value for lmcut(): 25
[t=0.345359s, 29496 KB] g=42, 45 evaluated, 44 expanded, 15 reopened
[t=0.349675s, 29496 KB] New best heuristic value for lmcut(): 24
[t=0.350693s, 29496 KB] g=45, 46 evaluated, 45 expanded, 15 reopened
[t=0.39174s, 29496 KB] New best heuristic value for lmcut(): 22
[t=0.392413s, 29496 KB] g=48, 59 evaluated, 58 expanded, 21 reopened
[t=0.402689s, 29496 KB] New best heuristic value for lmcut(): 21
[t=0.402872s, 29496 KB] g=51, 62 evaluated, 61 expanded, 22 reopened
[t=0.446328s, 29496 KB] New best heuristic value for lmcut(): 19
[t=0.446647s, 29496 KB] g=54, 77 evaluated, 76 expanded, 29 reopened
[t=0.461015s, 29496 KB] New best heuristic value for lmcut(): 18
[t=0.461207s, 29496 KB] g=57, 82 evaluated, 81 expanded, 31 reopened
[t=0.500943s, 29496 KB] New best heuristic value for lmcut(): 16
[t=0.501071s, 29496 KB] g=60, 97 evaluated, 96 expanded, 38 reopened
[t=0.517725s, 29496 KB] New best heuristic value for lmcut(): 15
[t=0.518418s, 29496 KB] g=63, 104 evaluated, 103 expanded, 41 reopened
[t=0.55323s, 29496 KB] New best heuristic value for lmcut(): 13
[t=0.553981s, 29496 KB] g=66, 119 evaluated, 118 expanded, 48 reopened
[t=0.573156s, 29496 KB] New best heuristic value for lmcut(): 12
[t=0.573275s, 29496 KB] g=69, 128 evaluated, 127 expanded, 52 reopened
[t=0.603675s, 29496 KB] New best heuristic value for lmcut(): 10
[t=0.604353s, 29496 KB] g=72, 143 evaluated, 142 expanded, 59 reopened
[t=0.623576s, 29496 KB] New best heuristic value for lmcut(): 9
[t=0.624192s, 29496 KB] g=75, 154 evaluated, 153 expanded, 64 reopened
[t=0.649752s, 29496 KB] New best heuristic value for lmcut(): 7
[t=0.650663s, 29496 KB] g=78, 169 evaluated, 168 expanded, 71 reopened
[t=0.669696s, 29496 KB] New best heuristic value for lmcut(): 6
[t=0.669971s, 29496 KB] g=81, 182 evaluated, 181 expanded, 77 reopened
[t=0.691741s, 29496 KB] New best heuristic value for lmcut(): 4
[t=0.692097s, 29496 KB] g=84, 197 evaluated, 196 expanded, 84 reopened
[t=0.708538s, 29496 KB] New best heuristic value for lmcut(): 3
[t=0.709592s, 29496 KB] g=87, 212 evaluated, 211 expanded, 91 reopened
[t=0.725315s, 29496 KB] Solution found!
[t=0.725759s, 29496 KB] Actual search time: 0.599739s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-2 car-in-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (3)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-in-1 (3)
analyze-2 seg-in-3 seg-out-1 car-in-1 car-in-3 (3)
analyze-2 seg-in-4 seg-out-1 car-in-4 car-in-1 (3)
analyze-2 seg-in-4 seg-out-1 car-in-1 car-in-4 (3)
analyze-2 seg-in-5 seg-out-1 car-in-5 car-in-1 (3)
analyze-2 seg-in-5 seg-out-1 car-in-1 car-in-5 (3)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-in-1 (3)
analyze-2 seg-in-6 seg-out-1 car-in-1 car-in-6 (3)
analyze-2 seg-in-7 seg-out-1 car-in-7 car-in-1 (3)
analyze-2 seg-in-7 seg-out-1 car-in-1 car-in-7 (3)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-in-1 (3)
analyze-2 seg-in-8 seg-out-1 car-in-1 car-in-8 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
analyze-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (3)
analyze-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (3)
analyze-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (3)
analyze-2 seg-in-1 seg-out-3 car-out-3 car-in-1 (3)
analyze-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (3)
analyze-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (3)
analyze-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (3)
analyze-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (3)
analyze-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (3)
analyze-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (3)
analyze-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (3)
analyze-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (3)
analyze-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (3)
analyze-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (3)
[t=0.726084s, 29496 KB] Plan length: 30 step(s).
[t=0.726131s, 29496 KB] Plan cost: 90
[t=0.726157s, 29496 KB] Solution Timestep: 1682010657040 millisecond(s).
[t=0.726183s, 29496 KB] Timestamp: 1682010657040 millisecond(s).
[t=0.726208s, 29496 KB] Expanded 226 state(s).
[t=0.726232s, 29496 KB] Reopened 98 state(s).
[t=0.726256s, 29496 KB] Evaluated 227 state(s).
[t=0.72628s, 29496 KB] Evaluations: 129
[t=0.726303s, 29496 KB] Generated 28928 state(s).
[t=0.726325s, 29496 KB] Dead ends: 0 state(s).
[t=0.726348s, 29496 KB] Number of registered states: 129
[t=0.726372s, 29496 KB] Int hash set load factor: 129/256 = 0.503906
[t=0.726396s, 29496 KB] Int hash set resizes: 8
[t=0.72642s, 29496 KB] Best solution cost so far: 90
[t=0.726444s, 29496 KB] Solution found - keep searching
[t=0.726467s, 29496 KB] Building successor generator...done!
[t=0.726646s, 29496 KB] peak memory difference for successor generator creation: 0 KB
[t=0.726687s, 29496 KB] time for successor generation creation: 0s
[t=0.726711s, 29496 KB] Variables: 32
[t=0.726737s, 29496 KB] FactPairs: 288
[t=0.72676s, 29496 KB] Bytes per state: 12
[t=0.726784s, 29496 KB] Starting search: lazy_wastar([h],w=4)
[t=0.726827s, 29496 KB] Conducting lazy best first search, (real) bound = 90
[t=0.726852s, 29496 KB] Start Timestep: 1682010657041 millisecond(s).
[t=0.735279s, 29496 KB] New best heuristic value for lmcut(): 48
[t=0.736374s, 29496 KB] g=0, 1 evaluated, 0 expanded
[t=0.736402s, 29496 KB] Initial heuristic value for lmcut(): 48
[t=0.74499s, 29496 KB] New best heuristic value for lmcut(): 45
[t=0.745379s, 29496 KB] g=3, 2 evaluated, 1 expanded
[t=0.75413s, 29496 KB] New best heuristic value for lmcut(): 43
[t=0.754471s, 29496 KB] g=6, 3 evaluated, 2 expanded
[t=0.762508s, 29496 KB] New best heuristic value for lmcut(): 42
[t=0.76283s, 29496 KB] g=9, 4 evaluated, 3 expanded
[t=0.770889s, 29496 KB] New best heuristic value for lmcut(): 40
[t=0.771364s, 29496 KB] g=12, 5 evaluated, 4 expanded
[t=0.778198s, 29496 KB] New best heuristic value for lmcut(): 39
[t=0.779266s, 29496 KB] g=15, 6 evaluated, 5 expanded
[t=0.795002s, 29496 KB] New best heuristic value for lmcut(): 37
[t=0.795771s, 29496 KB] g=18, 9 evaluated, 8 expanded, 1 reopened
[t=0.802331s, 29496 KB] New best heuristic value for lmcut(): 36
[t=0.803127s, 29496 KB] g=21, 10 evaluated, 9 expanded, 1 reopened
[t=0.826524s, 29496 KB] New best heuristic value for lmcut(): 34
[t=0.826671s, 29496 KB] g=24, 15 evaluated, 14 expanded, 3 reopened
[t=0.832775s, 29496 KB] New best heuristic value for lmcut(): 33
[t=0.833477s, 29496 KB] g=27, 16 evaluated, 15 expanded, 3 reopened
[t=0.862231s, 29496 KB] New best heuristic value for lmcut(): 31
[t=0.862871s, 29496 KB] g=30, 23 evaluated, 22 expanded, 6 reopened
[t=0.868495s, 29496 KB] New best heuristic value for lmcut(): 30
[t=0.869221s, 29496 KB] g=33, 24 evaluated, 23 expanded, 6 reopened
[t=0.903174s, 29496 KB] New best heuristic value for lmcut(): 28
[t=0.90364s, 29496 KB] g=36, 33 evaluated, 32 expanded, 10 reopened
[t=0.908384s, 29496 KB] New best heuristic value for lmcut(): 27
[t=0.909465s, 29496 KB] g=39, 34 evaluated, 33 expanded, 10 reopened
[t=0.947259s, 29496 KB] New best heuristic value for lmcut(): 25
[t=0.9479s, 29496 KB] g=42, 45 evaluated, 44 expanded, 15 reopened
[t=0.952484s, 29496 KB] New best heuristic value for lmcut(): 24
[t=0.953272s, 29496 KB] g=45, 46 evaluated, 45 expanded, 15 reopened
[t=0.994534s, 29496 KB] New best heuristic value for lmcut(): 22
[t=0.9948s, 29496 KB] g=48, 59 evaluated, 58 expanded, 21 reopened
[t=1.0051s, 29496 KB] New best heuristic value for lmcut(): 21
[t=1.00533s, 29496 KB] g=51, 62 evaluated, 61 expanded, 22 reopened
[t=1.04895s, 29496 KB] New best heuristic value for lmcut(): 19
[t=1.04935s, 29496 KB] g=54, 77 evaluated, 76 expanded, 29 reopened
[t=1.06364s, 29496 KB] New best heuristic value for lmcut(): 18
[t=1.06381s, 29496 KB] g=57, 82 evaluated, 81 expanded, 31 reopened
[t=1.1025s, 29496 KB] New best heuristic value for lmcut(): 16
[t=1.103s, 29496 KB] g=60, 97 evaluated, 96 expanded, 38 reopened
[t=1.11932s, 29496 KB] New best heuristic value for lmcut(): 15
[t=1.12015s, 29496 KB] g=63, 104 evaluated, 103 expanded, 41 reopened
[t=1.15488s, 29496 KB] New best heuristic value for lmcut(): 13
[t=1.15504s, 29496 KB] g=66, 119 evaluated, 118 expanded, 48 reopened
[t=1.17374s, 29496 KB] New best heuristic value for lmcut(): 12
[t=1.17398s, 29496 KB] g=69, 128 evaluated, 127 expanded, 52 reopened
[t=1.20418s, 29496 KB] New best heuristic value for lmcut(): 10
[t=1.20459s, 29496 KB] g=72, 143 evaluated, 142 expanded, 59 reopened
[t=1.22409s, 29496 KB] New best heuristic value for lmcut(): 9
[t=1.22423s, 29496 KB] g=75, 154 evaluated, 153 expanded, 64 reopened
[t=1.25036s, 29496 KB] New best heuristic value for lmcut(): 7
[t=1.2505s, 29496 KB] g=78, 169 evaluated, 168 expanded, 71 reopened
[t=1.26924s, 29496 KB] New best heuristic value for lmcut(): 6
[t=1.26956s, 29496 KB] g=81, 182 evaluated, 181 expanded, 77 reopened
[t=1.29123s, 29496 KB] New best heuristic value for lmcut(): 4
[t=1.29133s, 29496 KB] g=84, 197 evaluated, 196 expanded, 84 reopened
[t=1.30802s, 29496 KB] New best heuristic value for lmcut(): 3
[t=1.30838s, 29496 KB] g=87, 212 evaluated, 211 expanded, 91 reopened
[t=1.44686s, 29496 KB] Solution found!
[t=1.44716s, 29496 KB] Actual search time: 0.720276s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-2 car-in-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (3)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-in-1 (3)
analyze-2 seg-in-3 seg-out-1 car-in-1 car-in-3 (3)
analyze-2 seg-in-4 seg-out-1 car-in-4 car-in-1 (3)
analyze-2 seg-in-4 seg-out-1 car-in-1 car-in-4 (3)
analyze-2 seg-in-5 seg-out-1 car-in-5 car-in-1 (3)
analyze-2 seg-in-5 seg-out-1 car-in-1 car-in-5 (3)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-in-1 (3)
analyze-2 seg-in-6 seg-out-1 car-in-1 car-in-6 (3)
analyze-2 seg-in-7 seg-out-1 car-in-7 car-in-1 (3)
analyze-2 seg-in-7 seg-out-1 car-in-1 car-in-7 (3)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-in-1 (3)
analyze-2 seg-in-8 seg-out-1 car-in-1 car-in-8 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
analyze-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (3)
analyze-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (3)
analyze-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (3)
analyze-2 seg-in-1 seg-out-3 car-out-3 car-in-1 (3)
analyze-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (3)
analyze-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (3)
analyze-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (3)
analyze-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (3)
analyze-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (3)
analyze-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (3)
analyze-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (3)
analyze-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (3)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
analyze-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (3)
[t=1.44748s, 29496 KB] Plan length: 30 step(s).
[t=1.44754s, 29496 KB] Plan cost: 88
[t=1.44757s, 29496 KB] Solution Timestep: 1682010657774 millisecond(s).
[t=1.44759s, 29496 KB] Timestamp: 1682010657774 millisecond(s).
[t=1.44761s, 29496 KB] Expanded 283 state(s).
[t=1.44764s, 29496 KB] Reopened 99 state(s).
[t=1.44766s, 29496 KB] Evaluated 284 state(s).
[t=1.44768s, 29496 KB] Evaluations: 185
[t=1.44771s, 29496 KB] Generated 36224 state(s).
[t=1.44773s, 29496 KB] Dead ends: 0 state(s).
[t=1.44775s, 29496 KB] Number of registered states: 185
[t=1.44778s, 29496 KB] Int hash set load factor: 185/256 = 0.722656
[t=1.4478s, 29496 KB] Int hash set resizes: 8
[t=1.44783s, 29496 KB] Best solution cost so far: 88
[t=1.44785s, 29496 KB] Solution found - keep searching
[t=1.44788s, 29496 KB] Building successor generator...done!
[t=1.44806s, 29496 KB] peak memory difference for successor generator creation: 0 KB
[t=1.4481s, 29496 KB] time for successor generation creation: 0s
[t=1.44813s, 29496 KB] Variables: 32
[t=1.44815s, 29496 KB] FactPairs: 288
[t=1.44818s, 29496 KB] Bytes per state: 12
[t=1.4482s, 29496 KB] Starting search: lazy_wastar([h],w=3)
[t=1.44824s, 29496 KB] Conducting lazy best first search, (real) bound = 88
[t=1.44826s, 29496 KB] Start Timestep: 1682010657775 millisecond(s).
[t=1.45715s, 29496 KB] New best heuristic value for lmcut(): 48
[t=1.45786s, 29496 KB] g=0, 1 evaluated, 0 expanded
[t=1.45789s, 29496 KB] Initial heuristic value for lmcut(): 48
[t=1.46654s, 29496 KB] New best heuristic value for lmcut(): 45
[t=1.46684s, 29496 KB] g=3, 2 evaluated, 1 expanded
[t=1.47493s, 29496 KB] New best heuristic value for lmcut(): 43
[t=1.47583s, 29496 KB] g=6, 3 evaluated, 2 expanded
[t=1.4837s, 29496 KB] New best heuristic value for lmcut(): 42
[t=1.48422s, 29496 KB] g=9, 4 evaluated, 3 expanded
[t=1.49168s, 29496 KB] New best heuristic value for lmcut(): 40
[t=1.49277s, 29496 KB] g=10, 6 evaluated, 5 expanded, 1 reopened
[t=1.50001s, 29496 KB] New best heuristic value for lmcut(): 39
[t=1.50069s, 29496 KB] g=13, 7 evaluated, 6 expanded, 1 reopened
[t=1.5168s, 29496 KB] New best heuristic value for lmcut(): 37
[t=1.51724s, 29496 KB] g=14, 11 evaluated, 10 expanded, 3 reopened
[t=1.5241s, 29496 KB] New best heuristic value for lmcut(): 36
[t=1.52458s, 29496 KB] g=17, 12 evaluated, 11 expanded, 3 reopened
[t=1.5472s, 29496 KB] New best heuristic value for lmcut(): 34
[t=1.54814s, 29496 KB] g=18, 18 evaluated, 17 expanded, 6 reopened
[t=1.55454s, 29496 KB] New best heuristic value for lmcut(): 33
[t=1.55498s, 29496 KB] g=21, 19 evaluated, 18 expanded, 6 reopened
[t=1.58394s, 29496 KB] New best heuristic value for lmcut(): 31
[t=1.5845s, 29496 KB] g=22, 27 evaluated, 26 expanded, 10 reopened
[t=1.59021s, 29496 KB] New best heuristic value for lmcut(): 30
[t=1.59084s, 29496 KB] g=25, 28 evaluated, 27 expanded, 10 reopened
[t=1.62489s, 29496 KB] New best heuristic value for lmcut(): 28
[t=1.62518s, 29496 KB] g=26, 38 evaluated, 37 expanded, 15 reopened
[t=1.63011s, 29496 KB] New best heuristic value for lmcut(): 27
[t=1.63092s, 29496 KB] g=29, 39 evaluated, 38 expanded, 15 reopened
[t=1.669s, 29496 KB] New best heuristic value for lmcut(): 25
[t=1.66937s, 29496 KB] g=30, 51 evaluated, 50 expanded, 21 reopened
[t=1.67422s, 29496 KB] New best heuristic value for lmcut(): 24
[t=1.67478s, 29496 KB] g=33, 52 evaluated, 51 expanded, 21 reopened
[t=1.71609s, 29496 KB] New best heuristic value for lmcut(): 22
[t=1.7165s, 29496 KB] g=34, 66 evaluated, 65 expanded, 28 reopened
[t=1.72654s, 29496 KB] New best heuristic value for lmcut(): 21
[t=1.727s, 29496 KB] g=37, 69 evaluated, 68 expanded, 29 reopened
[t=1.77071s, 29496 KB] New best heuristic value for lmcut(): 19
[t=1.77091s, 29496 KB] g=38, 85 evaluated, 84 expanded, 37 reopened
[t=1.78435s, 29496 KB] New best heuristic value for lmcut(): 18
[t=1.78534s, 29496 KB] g=41, 90 evaluated, 89 expanded, 39 reopened
[t=1.82425s, 29496 KB] New best heuristic value for lmcut(): 16
[t=1.82494s, 29496 KB] g=42, 106 evaluated, 105 expanded, 47 reopened
[t=1.84223s, 29496 KB] New best heuristic value for lmcut(): 15
[t=1.84246s, 29496 KB] g=45, 113 evaluated, 112 expanded, 50 reopened
[t=1.87678s, 29496 KB] New best heuristic value for lmcut(): 13
[t=1.87774s, 29496 KB] g=46, 129 evaluated, 128 expanded, 58 reopened
[t=1.89668s, 29496 KB] New best heuristic value for lmcut(): 12
[t=1.89688s, 29496 KB] g=49, 138 evaluated, 137 expanded, 62 reopened
[t=1.92715s, 29496 KB] New best heuristic value for lmcut(): 10
[t=1.92784s, 29496 KB] g=50, 154 evaluated, 153 expanded, 70 reopened
[t=1.94711s, 29496 KB] New best heuristic value for lmcut(): 9
[t=1.94754s, 29496 KB] g=53, 165 evaluated, 164 expanded, 75 reopened
[t=1.97335s, 29496 KB] New best heuristic value for lmcut(): 7
[t=1.97419s, 29496 KB] g=54, 181 evaluated, 180 expanded, 83 reopened
[t=1.99329s, 29496 KB] New best heuristic value for lmcut(): 6
[t=1.99356s, 29496 KB] g=57, 194 evaluated, 193 expanded, 89 reopened
[t=2.01533s, 29496 KB] New best heuristic value for lmcut(): 4
[t=2.01563s, 29496 KB] g=58, 210 evaluated, 209 expanded, 97 reopened
[t=2.03213s, 29496 KB] New best heuristic value for lmcut(): 3
[t=2.03299s, 29496 KB] g=61, 225 evaluated, 224 expanded, 104 reopened
[t=2.04888s, 29496 KB] Solution found!
[t=2.04913s, 29496 KB] Actual search time: 0.600827s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-2 car-in-1 (3)
rotate-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (1)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-in-1 (3)
rotate-2 seg-in-3 seg-out-1 car-in-1 car-in-3 (1)
analyze-2 seg-in-4 seg-out-1 car-in-4 car-in-1 (3)
rotate-2 seg-in-4 seg-out-1 car-in-1 car-in-4 (1)
analyze-2 seg-in-5 seg-out-1 car-in-5 car-in-1 (3)
rotate-2 seg-in-5 seg-out-1 car-in-1 car-in-5 (1)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-in-1 (3)
rotate-2 seg-in-6 seg-out-1 car-in-1 car-in-6 (1)
analyze-2 seg-in-7 seg-out-1 car-in-7 car-in-1 (3)
rotate-2 seg-in-7 seg-out-1 car-in-1 car-in-7 (1)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-in-1 (3)
rotate-2 seg-in-8 seg-out-1 car-in-1 car-in-8 (1)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (3)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-3 car-out-3 car-in-1 (3)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (3)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (3)
rotate-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (3)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (3)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
analyze-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (3)
[t=2.04943s, 29496 KB] Plan length: 30 step(s).
[t=2.04947s, 29496 KB] Plan cost: 62
[t=2.04949s, 29496 KB] Solution Timestep: 1682010658385 millisecond(s).
[t=2.04952s, 29496 KB] Timestamp: 1682010658386 millisecond(s).
[t=2.04954s, 29496 KB] Expanded 240 state(s).
[t=2.04956s, 29496 KB] Reopened 112 state(s).
[t=2.04959s, 29496 KB] Evaluated 241 state(s).
[t=2.04962s, 29496 KB] Evaluations: 129
[t=2.04964s, 29496 KB] Generated 30720 state(s).
[t=2.04966s, 29496 KB] Dead ends: 0 state(s).
[t=2.04969s, 29496 KB] Number of registered states: 129
[t=2.04971s, 29496 KB] Int hash set load factor: 129/256 = 0.503906
[t=2.04973s, 29496 KB] Int hash set resizes: 8
[t=2.04976s, 29496 KB] Best solution cost so far: 62
[t=2.04978s, 29496 KB] Solution found - keep searching
[t=2.0498s, 29496 KB] Building successor generator...done!
[t=2.04999s, 29496 KB] peak memory difference for successor generator creation: 0 KB
[t=2.05003s, 29496 KB] time for successor generation creation: 0s
[t=2.05005s, 29496 KB] Variables: 32
[t=2.05008s, 29496 KB] FactPairs: 288
[t=2.0501s, 29496 KB] Bytes per state: 12
[t=2.05012s, 29496 KB] Starting search: lazy_wastar([h],w=2)
[t=2.05016s, 29496 KB] Conducting lazy best first search, (real) bound = 62
[t=2.05018s, 29496 KB] Start Timestep: 1682010658386 millisecond(s).
[t=2.05885s, 29496 KB] New best heuristic value for lmcut(): 48
[t=2.05961s, 29496 KB] g=0, 1 evaluated, 0 expanded
[t=2.05963s, 29496 KB] Initial heuristic value for lmcut(): 48
[t=2.06826s, 29496 KB] New best heuristic value for lmcut(): 45
[t=2.06847s, 29496 KB] g=3, 2 evaluated, 1 expanded
[t=2.07663s, 29496 KB] New best heuristic value for lmcut(): 43
[t=2.07729s, 29496 KB] g=6, 3 evaluated, 2 expanded
[t=2.08501s, 29496 KB] New best heuristic value for lmcut(): 42
[t=2.08553s, 29496 KB] g=9, 4 evaluated, 3 expanded
[t=2.09339s, 29496 KB] New best heuristic value for lmcut(): 40
[t=2.09395s, 29496 KB] g=10, 6 evaluated, 5 expanded, 1 reopened
[t=2.10072s, 29496 KB] New best heuristic value for lmcut(): 39
[t=2.10163s, 29496 KB] g=13, 7 evaluated, 6 expanded, 1 reopened
[t=2.11768s, 29496 KB] New best heuristic value for lmcut(): 37
[t=2.11785s, 29496 KB] g=14, 11 evaluated, 10 expanded, 3 reopened
[t=2.12484s, 29496 KB] New best heuristic value for lmcut(): 36
[t=2.12498s, 29496 KB] g=17, 12 evaluated, 11 expanded, 3 reopened
[t=2.14794s, 29496 KB] New best heuristic value for lmcut(): 34
[t=2.14808s, 29496 KB] g=18, 18 evaluated, 17 expanded, 6 reopened
[t=2.1542s, 29496 KB] New best heuristic value for lmcut(): 33
[t=2.15478s, 29496 KB] g=21, 19 evaluated, 18 expanded, 6 reopened
[t=2.18361s, 29496 KB] New best heuristic value for lmcut(): 31
[t=2.18376s, 29496 KB] g=22, 27 evaluated, 26 expanded, 10 reopened
[t=2.18988s, 29496 KB] New best heuristic value for lmcut(): 30
[t=2.18999s, 29496 KB] g=25, 28 evaluated, 27 expanded, 10 reopened
[t=2.22337s, 29496 KB] New best heuristic value for lmcut(): 28
[t=2.2239s, 29496 KB] g=26, 38 evaluated, 37 expanded, 15 reopened
[t=2.22859s, 29496 KB] New best heuristic value for lmcut(): 27
[t=2.22963s, 29496 KB] g=29, 39 evaluated, 38 expanded, 15 reopened
[t=2.26642s, 29496 KB] New best heuristic value for lmcut(): 25
[t=2.26738s, 29496 KB] g=30, 51 evaluated, 50 expanded, 21 reopened
[t=2.27162s, 29496 KB] New best heuristic value for lmcut(): 24
[t=2.27265s, 29496 KB] g=33, 52 evaluated, 51 expanded, 21 reopened
[t=2.31259s, 29496 KB] New best heuristic value for lmcut(): 22
[t=2.31346s, 29496 KB] g=34, 66 evaluated, 65 expanded, 28 reopened
[t=2.32307s, 29496 KB] New best heuristic value for lmcut(): 21
[t=2.32375s, 29496 KB] g=37, 69 evaluated, 68 expanded, 29 reopened
[t=2.36633s, 29496 KB] New best heuristic value for lmcut(): 19
[t=2.36679s, 29496 KB] g=38, 85 evaluated, 84 expanded, 37 reopened
[t=2.38085s, 29496 KB] New best heuristic value for lmcut(): 18
[t=2.38101s, 29496 KB] g=41, 90 evaluated, 89 expanded, 39 reopened
[t=2.41969s, 29496 KB] New best heuristic value for lmcut(): 16
[t=2.42003s, 29496 KB] g=42, 106 evaluated, 105 expanded, 47 reopened
[t=2.43648s, 29496 KB] New best heuristic value for lmcut(): 15
[t=2.43706s, 29496 KB] g=45, 113 evaluated, 112 expanded, 50 reopened
[t=2.47113s, 29496 KB] New best heuristic value for lmcut(): 13
[t=2.47188s, 29496 KB] g=46, 129 evaluated, 128 expanded, 58 reopened
[t=2.49001s, 29496 KB] New best heuristic value for lmcut(): 12
[t=2.49072s, 29496 KB] g=49, 138 evaluated, 137 expanded, 62 reopened
[t=2.52042s, 29496 KB] New best heuristic value for lmcut(): 10
[t=2.52127s, 29496 KB] g=50, 154 evaluated, 153 expanded, 70 reopened
[t=2.54037s, 29496 KB] New best heuristic value for lmcut(): 9
[t=2.54072s, 29496 KB] g=53, 165 evaluated, 164 expanded, 75 reopened
[t=2.56661s, 29496 KB] New best heuristic value for lmcut(): 7
[t=2.56685s, 29496 KB] g=54, 181 evaluated, 180 expanded, 83 reopened
[t=2.58545s, 29496 KB] New best heuristic value for lmcut(): 6
[t=2.58577s, 29496 KB] g=57, 194 evaluated, 193 expanded, 89 reopened
[t=2.60702s, 29496 KB] New best heuristic value for lmcut(): 4
[t=2.60746s, 29496 KB] g=58, 210 evaluated, 209 expanded, 97 reopened
[t=2.62427s, 29496 KB] New best heuristic value for lmcut(): 3
[t=2.62435s, 29496 KB] g=61, 225 evaluated, 224 expanded, 104 reopened
[t=4.21232s, 29496 KB] New best heuristic value for lmcut(): 1
[t=4.2129s, 29496 KB] g=61, 1080 evaluated, 1079 expanded, 266 reopened
Peak memory: 71708 KB
caught signal 24 -- exiting
Time limit has been reached.
Remove intermediate file output.sas
search exit code: 23

Driver aborting after search
INFO     Planner time: 597.46s
