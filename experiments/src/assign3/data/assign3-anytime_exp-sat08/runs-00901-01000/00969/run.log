INFO     planner time limit: 600s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/assign3/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.030s CPU, 0.029s wall-clock]
2797 relevant atoms
2486 auxiliary atoms
5283 final queue length
10483 total queue pushes
Completing instantiation... [0.070s CPU, 0.074s wall-clock]
Instantiating: [0.100s CPU, 0.108s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.012s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
10 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.050s CPU, 0.054s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.027s wall-clock]
Reordering and filtering variables...
20 of 20 variables necessary.
10 of 20 mutex groups necessary.
2340 of 2340 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 20
Translator derived variables: 0
Translator facts: 120
Translator goal facts: 20
Translator mutex groups: 10
Translator total mutex groups size: 100
Translator operators: 2340
Translator axioms: 0
Translator task size: 12050
Translator peak memory: 41028 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.220s CPU, 0.227s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 599s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-1fb14623350588fb782db39ad332c8a25eda53d6_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'iterated([
            lazy_wastar([h],w=5),
            lazy_wastar([h],w=4),
            lazy_wastar([h],w=3),
            lazy_wastar([h],w=2),
            astar(h)
        ],continue_on_fail=true)' --internal-plan-file sas_plan < output.sas
[t=0s, 10884 KB] reading input...
[t=0.00791404s, 11492 KB] done reading input!
[t=0.011875s, 12440 KB] Initializing landmark cut heuristic...
[t=0.0130804s, 12440 KB] Building successor generator...done!
[t=0.0140121s, 12596 KB] peak memory difference for successor generator creation: 156 KB
[t=0.0140678s, 12596 KB] time for successor generation creation: 0s
[t=0.0140928s, 12596 KB] Variables: 20
[t=0.0141214s, 12596 KB] FactPairs: 120
[t=0.014145s, 12596 KB] Bytes per state: 8
[t=0.0141759s, 12596 KB] Start Timestep: 1682025722917 millisecond(s).
[t=0.0142681s, 12596 KB] Building successor generator...done!
[t=0.0143573s, 12596 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0143956s, 12596 KB] time for successor generation creation: 0s
[t=0.01442s, 12596 KB] Variables: 20
[t=0.0144451s, 12596 KB] FactPairs: 120
[t=0.0144685s, 12596 KB] Bytes per state: 8
[t=0.0144928s, 12596 KB] Starting search: lazy_wastar([h],w=5)
[t=0.0145312s, 12596 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0145557s, 12596 KB] Start Timestep: 1682025722918 millisecond(s).
[t=0.0145807s, 12596 KB] New best heuristic value for lmcut(): 31
[t=0.0149661s, 12596 KB] g=0, 1 evaluated, 0 expanded
[t=0.0149926s, 12596 KB] Initial heuristic value for lmcut(): 31
[t=0.0150292s, 12596 KB] New best heuristic value for lmcut(): 28
[t=0.0153447s, 12596 KB] g=3, 2 evaluated, 1 expanded
[t=0.0155783s, 12596 KB] New best heuristic value for lmcut(): 25
[t=0.0168747s, 12596 KB] g=6, 7 evaluated, 6 expanded
[t=0.0672017s, 12596 KB] New best heuristic value for lmcut(): 23
[t=0.070611s, 12596 KB] g=10, 174 evaluated, 173 expanded, 5 reopened
[t=0.13495s, 12596 KB] New best heuristic value for lmcut(): 22
[t=0.138733s, 12596 KB] g=12, 389 evaluated, 388 expanded, 14 reopened
[t=0.186737s, 12596 KB] New best heuristic value for lmcut(): 20
[t=0.189183s, 12596 KB] g=15, 560 evaluated, 559 expanded, 24 reopened
[t=0.20404s, 12596 KB] New best heuristic value for lmcut(): 19
[t=0.205839s, 12596 KB] g=17, 615 evaluated, 614 expanded, 26 reopened
[t=0.417964s, 12860 KB] New best heuristic value for lmcut(): 18
[t=0.421096s, 12860 KB] g=21, 1337 evaluated, 1336 expanded, 62 reopened
[t=0.421133s, 12860 KB] New best heuristic value for lmcut(): 17
[t=0.421438s, 12860 KB] g=22, 1338 evaluated, 1337 expanded, 62 reopened
[t=0.44977s, 12860 KB] New best heuristic value for lmcut(): 16
[t=0.452904s, 12860 KB] g=24, 1448 evaluated, 1447 expanded, 67 reopened
[t=0.553419s, 12860 KB] New best heuristic value for lmcut(): 14
[t=0.554269s, 12860 KB] g=28, 1826 evaluated, 1825 expanded, 84 reopened
[t=0.629092s, 12992 KB] New best heuristic value for lmcut(): 13
[t=0.6312s, 12992 KB] g=30, 2130 evaluated, 2129 expanded, 98 reopened
[t=0.732739s, 13124 KB] New best heuristic value for lmcut(): 11
[t=0.73636s, 13124 KB] g=33, 2555 evaluated, 2554 expanded, 119 reopened
[t=0.748633s, 13124 KB] New best heuristic value for lmcut(): 10
[t=0.749105s, 13124 KB] g=35, 2610 evaluated, 2609 expanded, 121 reopened
[t=1.09944s, 13520 KB] New best heuristic value for lmcut(): 8
[t=1.09964s, 13520 KB] g=39, 4090 evaluated, 4089 expanded, 188 reopened
[t=2.21792s, 14668 KB] New best heuristic value for lmcut(): 7
[t=2.2209s, 14668 KB] g=43, 9007 evaluated, 9006 expanded, 270 reopened
[t=6.23827s, 18916 KB] New best heuristic value for lmcut(): 5
[t=6.24094s, 18916 KB] g=46, 26458 evaluated, 26457 expanded, 626 reopened
[t=10.7889s, 24752 KB] New best heuristic value for lmcut(): 4
[t=10.7919s, 24752 KB] g=51, 50689 evaluated, 50688 expanded, 1354 reopened
[t=11.0373s, 25016 KB] New best heuristic value for lmcut(): 1
[t=11.0393s, 25016 KB] g=55, 52123 evaluated, 52122 expanded, 1418 reopened
[t=11.0399s, 25016 KB] Solution found!
[t=11.0417s, 25016 KB] Actual search time: 11.0271s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-2 car-in-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-2 car-out-1 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-2 (3)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-out-1 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-in-2 (3)
rotate-2 seg-in-2 seg-out-3 car-in-1 car-out-1 (1)
rotate-2 seg-in-1 seg-out-3 car-in-2 car-in-1 (1)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-out-3 (1)
rotate-2 seg-in-2 seg-out-3 car-out-3 car-in-2 (1)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-out-1 (3)
rotate-2 seg-in-3 seg-out-4 car-in-3 car-in-1 (1)
rotate-2 seg-in-1 seg-out-4 car-out-1 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-out-4 (3)
rotate-2 seg-in-4 seg-out-4 car-in-4 car-out-1 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-4 (1)
analyze-2 seg-in-1 seg-out-1 car-in-4 car-in-3 (3)
rotate-2 seg-in-2 seg-out-5 car-in-2 car-out-5 (1)
rotate-2 seg-in-1 seg-out-2 car-in-3 car-out-2 (1)
rotate-2 seg-in-2 seg-out-5 car-out-5 car-in-2 (1)
rotate-2 seg-in-4 seg-out-1 car-out-1 car-in-4 (1)
rotate-2 seg-in-1 seg-out-5 car-out-2 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-out-1 (3)
rotate-2 seg-in-3 seg-out-2 car-in-1 car-in-3 (1)
rotate-2 seg-in-1 seg-out-5 car-out-1 car-out-2 (1)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-5 seg-out-1 car-in-5 car-out-5 (1)
rotate-2 seg-in-5 seg-out-5 car-out-5 car-out-1 (1)
rotate-2 seg-in-1 seg-out-1 car-in-1 car-in-5 (1)
analyze-2 seg-in-1 seg-out-1 car-in-5 car-in-1 (3)
rotate-2 seg-in-5 seg-out-1 car-out-1 car-in-5 (1)
[t=11.042s, 25016 KB] Plan length: 36 step(s).
[t=11.0421s, 25016 KB] Plan cost: 56
[t=11.0421s, 25016 KB] Solution Timestep: 1682025733990 millisecond(s).
[t=11.0421s, 25016 KB] Timestamp: 1682025733990 millisecond(s).
[t=11.0422s, 25016 KB] Expanded 52144 state(s).
[t=11.0422s, 25016 KB] Reopened 1419 state(s).
[t=11.0422s, 25016 KB] Evaluated 52145 state(s).
[t=11.0422s, 25016 KB] Evaluations: 50726
[t=11.0422s, 25016 KB] Generated 1355744 state(s).
[t=11.0423s, 25016 KB] Dead ends: 0 state(s).
[t=11.0423s, 25016 KB] Number of registered states: 50726
[t=11.0423s, 25016 KB] Int hash set load factor: 50726/65536 = 0.774017
[t=11.0423s, 25016 KB] Int hash set resizes: 16
[t=11.0424s, 25016 KB] Best solution cost so far: 56
[t=11.0424s, 25016 KB] Solution found - keep searching
[t=11.0433s, 25016 KB] Building successor generator...done!
[t=11.045s, 25016 KB] peak memory difference for successor generator creation: 0 KB
[t=11.045s, 25016 KB] time for successor generation creation: 0s
[t=11.0451s, 25016 KB] Variables: 20
[t=11.0451s, 25016 KB] FactPairs: 120
[t=11.0451s, 25016 KB] Bytes per state: 8
[t=11.0451s, 25016 KB] Starting search: lazy_wastar([h],w=4)
[t=11.0452s, 25016 KB] Conducting lazy best first search, (real) bound = 56
[t=11.0452s, 25016 KB] Start Timestep: 1682025733993 millisecond(s).
[t=11.0452s, 25016 KB] New best heuristic value for lmcut(): 31
[t=11.0456s, 25016 KB] g=0, 1 evaluated, 0 expanded
[t=11.0456s, 25016 KB] Initial heuristic value for lmcut(): 31
[t=11.0457s, 25016 KB] New best heuristic value for lmcut(): 28
[t=11.046s, 25016 KB] g=3, 2 evaluated, 1 expanded
[t=11.0472s, 25016 KB] New best heuristic value for lmcut(): 25
[t=11.0476s, 25016 KB] g=6, 7 evaluated, 6 expanded
[t=11.099s, 25016 KB] New best heuristic value for lmcut(): 23
[t=11.1012s, 25016 KB] g=10, 174 evaluated, 173 expanded, 5 reopened
[t=11.1688s, 25016 KB] New best heuristic value for lmcut(): 22
[t=11.1693s, 25016 KB] g=12, 389 evaluated, 388 expanded, 14 reopened
[t=11.2187s, 25016 KB] New best heuristic value for lmcut(): 20
[t=11.2196s, 25016 KB] g=15, 560 evaluated, 559 expanded, 24 reopened
[t=11.2344s, 25016 KB] New best heuristic value for lmcut(): 19
[t=11.2362s, 25016 KB] g=17, 615 evaluated, 614 expanded, 26 reopened
[t=11.4496s, 25016 KB] New best heuristic value for lmcut(): 18
[t=11.4509s, 25016 KB] g=21, 1337 evaluated, 1336 expanded, 62 reopened
[t=11.4509s, 25016 KB] New best heuristic value for lmcut(): 17
[t=11.4512s, 25016 KB] g=22, 1338 evaluated, 1337 expanded, 62 reopened
[t=11.4814s, 25016 KB] New best heuristic value for lmcut(): 16
[t=11.4826s, 25016 KB] g=24, 1448 evaluated, 1447 expanded, 67 reopened
[t=11.7557s, 25016 KB] New best heuristic value for lmcut(): 14
[t=11.7575s, 25016 KB] g=28, 2484 evaluated, 2483 expanded, 161 reopened
[t=11.7637s, 25016 KB] New best heuristic value for lmcut(): 13
[t=11.7647s, 25016 KB] g=32, 2514 evaluated, 2513 expanded, 162 reopened
[t=11.883s, 25016 KB] New best heuristic value for lmcut(): 12
[t=11.8852s, 25016 KB] g=33, 3030 evaluated, 3029 expanded, 216 reopened
[t=11.8853s, 25016 KB] New best heuristic value for lmcut(): 11
[t=11.8858s, 25016 KB] g=34, 3032 evaluated, 3031 expanded, 216 reopened
[t=11.8949s, 25016 KB] New best heuristic value for lmcut(): 9
[t=11.8975s, 25016 KB] g=38, 3081 evaluated, 3080 expanded, 217 reopened
[t=11.8976s, 25016 KB] New best heuristic value for lmcut(): 8
[t=11.8978s, 25016 KB] g=39, 3082 evaluated, 3081 expanded, 217 reopened
[t=12.1378s, 25016 KB] New best heuristic value for lmcut(): 5
[t=12.1406s, 25016 KB] g=44, 4233 evaluated, 4232 expanded, 257 reopened
[t=16.1192s, 25016 KB] New best heuristic value for lmcut(): 4
[t=16.1203s, 25016 KB] g=49, 24803 evaluated, 24802 expanded, 728 reopened
[t=44.4527s, 51692 KB] New best heuristic value for lmcut(): 1
[t=44.4562s, 51692 KB] g=53, 164686 evaluated, 164685 expanded, 3570 reopened
[t=44.4581s, 51692 KB] Solution found!
[t=44.4586s, 51692 KB] Actual search time: 33.4134s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-2 car-in-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-2 car-out-1 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-2 (3)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-out-1 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-in-2 (3)
rotate-2 seg-in-2 seg-out-3 car-in-1 car-out-1 (1)
rotate-2 seg-in-1 seg-out-1 car-in-2 car-out-3 (1)
rotate-2 seg-in-3 seg-out-3 car-in-3 car-in-1 (1)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-in-2 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-1 seg-out-4 car-out-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-in-3 (3)
rotate-2 seg-in-3 seg-out-4 car-in-1 car-out-1 (1)
rotate-2 seg-in-1 seg-out-4 car-in-3 car-in-1 (1)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-out-4 (3)
rotate-2 seg-in-2 seg-out-5 car-in-2 car-in-1 (1)
rotate-2 seg-in-4 seg-out-1 car-in-4 car-out-5 (1)
rotate-2 seg-in-1 seg-out-1 car-out-4 car-in-4 (1)
analyze-2 seg-in-1 seg-out-1 car-in-4 car-out-4 (3)
rotate-2 seg-in-4 seg-out-5 car-out-5 car-in-2 (1)
rotate-2 seg-in-4 seg-out-1 car-in-2 car-in-4 (1)
rotate-2 seg-in-3 seg-out-4 car-out-1 car-in-3 (1)
rotate-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (1)
rotate-2 seg-in-5 seg-out-4 car-in-5 car-out-1 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-5 (1)
analyze-2 seg-in-1 seg-out-1 car-in-5 car-in-1 (3)
rotate-2 seg-in-5 seg-out-1 car-out-1 car-in-5 (1)
[t=44.459s, 51692 KB] Plan length: 34 step(s).
[t=44.459s, 51692 KB] Plan cost: 54
[t=44.459s, 51692 KB] Solution Timestep: 1682025767647 millisecond(s).
[t=44.4591s, 51692 KB] Timestamp: 1682025767647 millisecond(s).
[t=44.4591s, 51692 KB] Expanded 164706 state(s).
[t=44.4591s, 51692 KB] Reopened 3570 state(s).
[t=44.4591s, 51692 KB] Evaluated 164707 state(s).
[t=44.4592s, 51692 KB] Evaluations: 161137
[t=44.4592s, 51692 KB] Generated 4282356 state(s).
[t=44.4592s, 51692 KB] Dead ends: 0 state(s).
[t=44.4592s, 51692 KB] Number of registered states: 161137
[t=44.4592s, 51692 KB] Int hash set load factor: 161137/262144 = 0.614689
[t=44.4593s, 51692 KB] Int hash set resizes: 18
[t=44.4593s, 51692 KB] Best solution cost so far: 54
[t=44.4593s, 51692 KB] Solution found - keep searching
[t=44.4665s, 51692 KB] Building successor generator...done!
[t=44.4679s, 51692 KB] peak memory difference for successor generator creation: 0 KB
[t=44.468s, 51692 KB] time for successor generation creation: 0s
[t=44.468s, 51692 KB] Variables: 20
[t=44.468s, 51692 KB] FactPairs: 120
[t=44.468s, 51692 KB] Bytes per state: 8
[t=44.4681s, 51692 KB] Starting search: lazy_wastar([h],w=3)
[t=44.4681s, 51692 KB] Conducting lazy best first search, (real) bound = 54
[t=44.4681s, 51692 KB] Start Timestep: 1682025767657 millisecond(s).
[t=44.4681s, 51692 KB] New best heuristic value for lmcut(): 31
[t=44.4686s, 51692 KB] g=0, 1 evaluated, 0 expanded
[t=44.4686s, 51692 KB] Initial heuristic value for lmcut(): 31
[t=44.4687s, 51692 KB] New best heuristic value for lmcut(): 28
[t=44.469s, 51692 KB] g=3, 2 evaluated, 1 expanded
[t=44.4702s, 51692 KB] New best heuristic value for lmcut(): 25
[t=44.4706s, 51692 KB] g=6, 7 evaluated, 6 expanded
[t=44.5221s, 51692 KB] New best heuristic value for lmcut(): 23
[t=44.5243s, 51692 KB] g=10, 174 evaluated, 173 expanded, 5 reopened
[t=44.5898s, 51692 KB] New best heuristic value for lmcut(): 22
[t=44.5924s, 51692 KB] g=12, 389 evaluated, 388 expanded, 14 reopened
[t=44.6416s, 51692 KB] New best heuristic value for lmcut(): 20
[t=44.643s, 51692 KB] g=15, 560 evaluated, 559 expanded, 24 reopened
[t=44.6574s, 51692 KB] New best heuristic value for lmcut(): 19
[t=44.6598s, 51692 KB] g=17, 615 evaluated, 614 expanded, 26 reopened
[t=44.8856s, 51692 KB] New best heuristic value for lmcut(): 18
[t=44.8886s, 51692 KB] g=21, 1375 evaluated, 1374 expanded, 62 reopened
[t=44.8886s, 51692 KB] New best heuristic value for lmcut(): 17
[t=44.8889s, 51692 KB] g=22, 1376 evaluated, 1375 expanded, 62 reopened
[t=44.9164s, 51692 KB] New best heuristic value for lmcut(): 16
[t=44.9203s, 51692 KB] g=24, 1486 evaluated, 1485 expanded, 67 reopened
[t=45.1957s, 51692 KB] New best heuristic value for lmcut(): 14
[t=45.1981s, 51692 KB] g=28, 2518 evaluated, 2517 expanded, 149 reopened
[t=45.2036s, 51692 KB] New best heuristic value for lmcut(): 13
[t=45.2054s, 51692 KB] g=32, 2548 evaluated, 2547 expanded, 150 reopened
[t=45.3273s, 51692 KB] New best heuristic value for lmcut(): 12
[t=45.3305s, 51692 KB] g=33, 3058 evaluated, 3057 expanded, 181 reopened
[t=45.3306s, 51692 KB] New best heuristic value for lmcut(): 11
[t=45.3311s, 51692 KB] g=34, 3060 evaluated, 3059 expanded, 181 reopened
[t=45.3392s, 51692 KB] New best heuristic value for lmcut(): 9
[t=45.3429s, 51692 KB] g=38, 3109 evaluated, 3108 expanded, 182 reopened
[t=45.3429s, 51692 KB] New best heuristic value for lmcut(): 8
[t=45.3431s, 51692 KB] g=39, 3110 evaluated, 3109 expanded, 182 reopened
[t=45.5584s, 51692 KB] New best heuristic value for lmcut(): 7
[t=45.5599s, 51692 KB] g=43, 4162 evaluated, 4161 expanded, 230 reopened
[t=45.5599s, 51692 KB] New best heuristic value for lmcut(): 5
[t=45.5624s, 51692 KB] g=44, 4172 evaluated, 4171 expanded, 230 reopened
[t=49.6677s, 51692 KB] New best heuristic value for lmcut(): 4
[t=49.6706s, 51692 KB] g=49, 25549 evaluated, 25548 expanded, 755 reopened
[t=64.6869s, 51692 KB] New best heuristic value for lmcut(): 2
[t=64.6896s, 51692 KB] g=50, 103454 evaluated, 103453 expanded, 3723 reopened
[t=64.7188s, 51692 KB] New best heuristic value for lmcut(): 1
[t=64.7206s, 51692 KB] g=53, 103645 evaluated, 103644 expanded, 3724 reopened
[t=112.734s, 87052 KB] Solution found!
[t=112.735s, 87052 KB] Actual search time: 68.2667s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-2 car-in-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-2 car-out-1 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-2 (3)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-out-1 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-in-2 (3)
rotate-2 seg-in-2 seg-out-3 car-in-1 car-out-1 (1)
rotate-2 seg-in-1 seg-out-1 car-in-2 car-out-3 (1)
rotate-2 seg-in-3 seg-out-3 car-in-3 car-in-1 (1)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-in-2 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-1 seg-out-4 car-out-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-in-3 (3)
rotate-2 seg-in-3 seg-out-4 car-in-1 car-out-1 (1)
rotate-2 seg-in-1 seg-out-4 car-in-3 car-in-1 (1)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-out-4 (3)
rotate-2 seg-in-4 seg-out-1 car-in-4 car-out-5 (1)
rotate-2 seg-in-1 seg-out-1 car-out-4 car-in-4 (1)
analyze-2 seg-in-1 seg-out-1 car-in-4 car-out-4 (3)
rotate-2 seg-in-4 seg-out-5 car-out-5 car-in-1 (1)
rotate-2 seg-in-3 seg-out-4 car-out-1 car-in-3 (1)
rotate-2 seg-in-4 seg-out-1 car-in-1 car-in-4 (1)
rotate-2 seg-in-5 seg-out-4 car-in-5 car-out-1 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-5 (1)
analyze-2 seg-in-1 seg-out-1 car-in-5 car-in-1 (3)
rotate-2 seg-in-5 seg-out-1 car-out-1 car-in-5 (1)
[t=112.735s, 87052 KB] Plan length: 32 step(s).
[t=112.735s, 87052 KB] Plan cost: 52
[t=112.735s, 87052 KB] Solution Timestep: 1682025836609 millisecond(s).
[t=112.735s, 87052 KB] Timestamp: 1682025836609 millisecond(s).
[t=112.735s, 87052 KB] Expanded 360115 state(s).
[t=112.735s, 87052 KB] Reopened 17520 state(s).
[t=112.735s, 87052 KB] Evaluated 360116 state(s).
[t=112.735s, 87052 KB] Evaluations: 342596
[t=112.735s, 87052 KB] Generated 9362990 state(s).
[t=112.735s, 87052 KB] Dead ends: 0 state(s).
[t=112.735s, 87052 KB] Number of registered states: 342596
[t=112.735s, 87052 KB] Int hash set load factor: 342596/524288 = 0.65345
[t=112.735s, 87052 KB] Int hash set resizes: 19
[t=112.735s, 87052 KB] Best solution cost so far: 52
[t=112.735s, 87052 KB] Solution found - keep searching
[t=112.753s, 87052 KB] Building successor generator...done!
[t=112.754s, 87052 KB] peak memory difference for successor generator creation: 0 KB
[t=112.754s, 87052 KB] time for successor generation creation: 0s
[t=112.754s, 87052 KB] Variables: 20
[t=112.754s, 87052 KB] FactPairs: 120
[t=112.754s, 87052 KB] Bytes per state: 8
[t=112.754s, 87052 KB] Starting search: lazy_wastar([h],w=2)
[t=112.754s, 87052 KB] Conducting lazy best first search, (real) bound = 52
[t=112.754s, 87052 KB] Start Timestep: 1682025836629 millisecond(s).
[t=112.755s, 87052 KB] New best heuristic value for lmcut(): 31
[t=112.755s, 87052 KB] g=0, 1 evaluated, 0 expanded
[t=112.755s, 87052 KB] Initial heuristic value for lmcut(): 31
[t=112.755s, 87052 KB] New best heuristic value for lmcut(): 28
[t=112.755s, 87052 KB] g=3, 2 evaluated, 1 expanded
[t=112.757s, 87052 KB] New best heuristic value for lmcut(): 25
[t=112.757s, 87052 KB] g=6, 7 evaluated, 6 expanded
[t=112.818s, 87052 KB] New best heuristic value for lmcut(): 23
[t=112.819s, 87052 KB] g=10, 195 evaluated, 194 expanded, 5 reopened
[t=112.887s, 87052 KB] New best heuristic value for lmcut(): 22
[t=112.888s, 87052 KB] g=12, 410 evaluated, 409 expanded, 14 reopened
[t=112.939s, 87052 KB] New best heuristic value for lmcut(): 20
[t=112.939s, 87052 KB] g=15, 577 evaluated, 576 expanded, 20 reopened
[t=112.955s, 87052 KB] New best heuristic value for lmcut(): 19
[t=112.956s, 87052 KB] g=17, 632 evaluated, 631 expanded, 22 reopened
[t=113.251s, 87052 KB] New best heuristic value for lmcut(): 17
[t=113.252s, 87052 KB] g=19, 1597 evaluated, 1596 expanded, 59 reopened
[t=113.267s, 87052 KB] New best heuristic value for lmcut(): 16
[t=113.267s, 87052 KB] g=21, 1650 evaluated, 1649 expanded, 60 reopened
[t=113.92s, 87052 KB] New best heuristic value for lmcut(): 14
[t=113.92s, 87052 KB] g=25, 3930 evaluated, 3929 expanded, 169 reopened
[t=113.934s, 87052 KB] New best heuristic value for lmcut(): 13
[t=113.935s, 87052 KB] g=27, 3985 evaluated, 3984 expanded, 171 reopened
[t=114.42s, 87052 KB] New best heuristic value for lmcut(): 12
[t=114.421s, 87052 KB] g=29, 5788 evaluated, 5787 expanded, 248 reopened
[t=114.423s, 87052 KB] New best heuristic value for lmcut(): 11
[t=114.424s, 87052 KB] g=30, 5801 evaluated, 5800 expanded, 249 reopened
[t=114.44s, 87052 KB] New best heuristic value for lmcut(): 10
[t=114.441s, 87052 KB] g=33, 5868 evaluated, 5867 expanded, 251 reopened
[t=114.571s, 87052 KB] New best heuristic value for lmcut(): 8
[t=114.571s, 87052 KB] g=34, 6379 evaluated, 6378 expanded, 271 reopened
[t=114.994s, 87052 KB] New best heuristic value for lmcut(): 5
[t=114.995s, 87052 KB] g=38, 8199 evaluated, 8198 expanded, 318 reopened
[t=119.53s, 87052 KB] New best heuristic value for lmcut(): 4
[t=119.531s, 87052 KB] g=42, 31696 evaluated, 31695 expanded, 1136 reopened
[t=119.549s, 87052 KB] New best heuristic value for lmcut(): 3
[t=119.549s, 87052 KB] g=44, 31796 evaluated, 31795 expanded, 1140 reopened
[t=119.557s, 87052 KB] New best heuristic value for lmcut(): 2
[t=119.558s, 87052 KB] g=46, 31843 evaluated, 31842 expanded, 1141 reopened
[t=119.59s, 87052 KB] New best heuristic value for lmcut(): 1
[t=119.59s, 87052 KB] g=47, 32030 evaluated, 32029 expanded, 1149 reopened
[t=119.59s, 87052 KB] Solution found!
[t=119.59s, 87052 KB] Actual search time: 6.83591s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-2 car-in-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-out-2 (3)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-3 (3)
rotate-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (1)
rotate-2 seg-in-4 seg-out-1 car-in-4 car-in-1 (1)
rotate-2 seg-in-3 seg-out-3 car-in-3 car-out-1 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-in-4 (3)
analyze-2 seg-in-1 seg-out-1 car-in-4 car-in-3 (3)
rotate-2 seg-in-1 seg-out-4 car-in-3 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-in-4 (3)
rotate-2 seg-in-1 seg-out-4 car-in-4 car-in-3 (1)
rotate-2 seg-in-1 seg-out-5 car-in-3 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-out-4 (3)
rotate-2 seg-in-4 seg-out-4 car-in-1 car-in-4 (1)
rotate-2 seg-in-5 seg-out-5 car-in-5 car-in-3 (1)
rotate-2 seg-in-1 seg-out-5 car-out-4 car-in-5 (1)
analyze-2 seg-in-1 seg-out-1 car-in-5 car-out-5 (3)
rotate-2 seg-in-5 seg-out-1 car-in-3 car-in-5 (1)
rotate-2 seg-in-3 seg-out-1 car-out-1 car-in-3 (1)
rotate-2 seg-in-1 seg-out-5 car-out-5 car-out-4 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (1)
[t=119.591s, 87052 KB] Plan length: 28 step(s).
[t=119.591s, 87052 KB] Plan cost: 48
[t=119.591s, 87052 KB] Solution Timestep: 1682025843562 millisecond(s).
[t=119.591s, 87052 KB] Timestamp: 1682025843562 millisecond(s).
[t=119.591s, 87052 KB] Expanded 32034 state(s).
[t=119.591s, 87052 KB] Reopened 1149 state(s).
[t=119.591s, 87052 KB] Evaluated 32035 state(s).
[t=119.591s, 87052 KB] Evaluations: 30886
[t=119.591s, 87052 KB] Generated 832884 state(s).
[t=119.591s, 87052 KB] Dead ends: 0 state(s).
[t=119.591s, 87052 KB] Number of registered states: 30886
[t=119.591s, 87052 KB] Int hash set load factor: 30886/65536 = 0.471283
[t=119.591s, 87052 KB] Int hash set resizes: 16
[t=119.591s, 87052 KB] Best solution cost so far: 48
[t=119.591s, 87052 KB] Solution found - keep searching
[t=119.594s, 87052 KB] Building successor generator...done!
[t=119.595s, 87052 KB] peak memory difference for successor generator creation: 0 KB
[t=119.595s, 87052 KB] time for successor generation creation: 0s
[t=119.595s, 87052 KB] Variables: 20
[t=119.595s, 87052 KB] FactPairs: 120
[t=119.595s, 87052 KB] Bytes per state: 8
[t=119.595s, 87052 KB] Starting search: astar(h)
[t=119.595s, 87052 KB] Conducting best first search with reopening closed nodes, (real) bound = 48
[t=119.595s, 87052 KB] New best heuristic value for lmcut(): 31
[t=119.595s, 87052 KB] g=0, 1 evaluated, 0 expanded
[t=119.595s, 87052 KB] f = 31, 1 evaluated, 0 expanded
[t=119.595s, 87052 KB] Initial heuristic value for lmcut(): 31
[t=119.595s, 87052 KB] pruning method: none
[t=119.595s, 87052 KB] Start Timestep: 1682025843568 millisecond(s).
[t=119.595s, 87052 KB] New best heuristic value for lmcut(): 28
[t=119.596s, 87052 KB] g=3, 2 evaluated, 1 expanded
[t=119.606s, 87052 KB] New best heuristic value for lmcut(): 25
[t=119.606s, 87052 KB] g=6, 32 evaluated, 2 expanded
[t=119.62s, 87052 KB] f = 32, 78 evaluated, 3 expanded
[t=119.662s, 87052 KB] New best heuristic value for lmcut(): 24
[t=119.663s, 87052 KB] g=10, 204 evaluated, 9 expanded
[t=119.88s, 87052 KB] f = 33, 836 evaluated, 34 expanded
[t=119.882s, 87052 KB] New best heuristic value for lmcut(): 23
[t=119.883s, 87052 KB] g=11, 842 evaluated, 35 expanded
[t=120.801s, 87052 KB] New best heuristic value for lmcut(): 22
[t=120.802s, 87052 KB] g=11, 3523 evaluated, 156 expanded
[t=122.314s, 87052 KB] f = 34, 7802 evaluated, 357 expanded
[t=122.687s, 87052 KB] New best heuristic value for lmcut(): 21
[t=122.688s, 87052 KB] g=15, 8948 evaluated, 409 expanded
[t=136.72s, 87052 KB] f = 35, 48510 evaluated, 2632 expanded
[t=136.828s, 87052 KB] New best heuristic value for lmcut(): 19
[t=136.829s, 87052 KB] g=16, 48866 evaluated, 2649 expanded
[t=165.31s, 87052 KB] New best heuristic value for lmcut(): 18
[t=165.311s, 87052 KB] g=19, 134815 evaluated, 6888 expanded
[t=236.001s, 87052 KB] f = 36, 327907 evaluated, 20933 expanded
[t=237.013s, 87052 KB] New best heuristic value for lmcut(): 17
[t=237.015s, 87052 KB] g=20, 331512 evaluated, 21090 expanded
Peak memory: 87052 KB
caught signal 24 -- exiting
Time limit has been reached.
Remove intermediate file output.sas
search exit code: 23

Driver aborting after search
INFO     Planner time: 598.04s
