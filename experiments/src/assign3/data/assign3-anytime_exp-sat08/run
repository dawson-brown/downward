#! /usr/bin/env python

import logging
import os
import multiprocessing
import subprocess
import sys

from lab.experiment import get_run_dir
from lab import tools

tools.configure_logging()

SHUFFLED_TASK_IDS = [225, 463, 768, 296, 782, 885, 63, 75, 843, 191, 140, 427, 301, 694, 575, 979, 821, 292, 139, 170, 582, 675, 2, 420, 795, 719, 938, 141, 242, 432, 1059, 897, 1006, 707, 134, 902, 797, 104, 174, 636, 995, 962, 682, 72, 192, 150, 929, 1054, 913, 806, 834, 975, 896, 713, 539, 402, 1003, 1028, 119, 493, 284, 546, 579, 1004, 74, 708, 129, 576, 595, 835, 272, 528, 314, 566, 156, 113, 345, 110, 186, 437, 1042, 149, 412, 40, 947, 951, 886, 689, 842, 819, 556, 210, 997, 714, 919, 686, 933, 931, 700, 409, 712, 849, 674, 890, 1044, 476, 305, 378, 956, 482, 481, 303, 239, 750, 777, 249, 1030, 1062, 73, 952, 721, 1049, 881, 100, 754, 540, 194, 873, 315, 624, 618, 934, 606, 82, 69, 240, 850, 816, 160, 154, 167, 884, 286, 204, 165, 990, 285, 424, 942, 324, 626, 1, 742, 720, 66, 1020, 195, 473, 729, 748, 1070, 77, 148, 801, 488, 1014, 550, 529, 734, 295, 11, 928, 512, 151, 916, 589, 893, 269, 733, 998, 703, 261, 770, 692, 848, 643, 680, 605, 1029, 208, 647, 361, 138, 567, 910, 1046, 791, 999, 37, 1001, 670, 655, 563, 68, 690, 771, 948, 880, 161, 1075, 888, 449, 1051, 572, 767, 3, 936, 515, 17, 593, 832, 397, 327, 207, 646, 39, 853, 935, 957, 904, 45, 553, 565, 702, 330, 709, 36, 358, 215, 455, 761, 182, 211, 255, 596, 570, 978, 375, 282, 370, 955, 28, 542, 229, 1061, 716, 365, 803, 94, 14, 722, 907, 756, 905, 120, 799, 376, 1055, 501, 620, 1007, 732, 487, 518, 1010, 130, 494, 840, 753, 561, 861, 862, 86, 924, 706, 248, 59, 866, 61, 505, 613, 228, 921, 577, 4, 788, 544, 600, 673, 946, 57, 731, 434, 316, 792, 262, 217, 807, 1041, 385, 22, 1064, 132, 64, 360, 746, 500, 1038, 765, 474, 1017, 559, 277, 84, 664, 46, 629, 446, 521, 514, 492, 124, 237, 326, 83, 366, 35, 634, 176, 535, 271, 604, 710, 306, 865, 1079, 899, 950, 584, 127, 830, 1071, 911, 993, 608, 393, 405, 472, 621, 245, 898, 339, 105, 328, 739, 961, 827, 906, 548, 78, 50, 112, 281, 912, 454, 760, 541, 254, 88, 637, 630, 441, 43, 764, 421, 622, 87, 527, 1011, 390, 92, 107, 967, 246, 503, 661, 959, 522, 96, 499, 406, 253, 920, 805, 877, 671, 815, 536, 772, 586, 826, 1073, 164, 516, 428, 1002, 196, 380, 415, 989, 114, 33, 146, 787, 456, 440, 1039, 740, 447, 780, 829, 509, 1076, 616, 657, 65, 123, 871, 423, 658, 187, 543, 263, 645, 468, 200, 312, 384, 300, 607, 987, 1068, 470, 302, 958, 278, 1013, 81, 55, 875, 817, 221, 705, 348, 484, 973, 870, 334, 38, 683, 418, 152, 24, 808, 1018, 610, 785, 939, 341, 766, 758, 981, 1065, 798, 168, 696, 319, 779, 373, 530, 173, 276, 963, 142, 651, 872, 322, 609, 914, 47, 639, 42, 523, 407, 490, 971, 1012, 831, 352, 977, 313, 598, 1033, 51, 349, 538, 698, 660, 854, 451, 878, 662, 966, 247, 558, 592, 400, 382, 464, 162, 197, 1080, 289, 802, 238, 209, 13, 1058, 597, 736, 747, 118, 79, 270, 202, 403, 679, 769, 685, 628, 169, 1021, 171, 354, 876, 794, 116, 1022, 524, 98, 824, 793, 193, 587, 743, 901, 205, 203, 724, 641, 310, 1026, 599, 755, 294, 258, 856, 448, 1025, 749, 219, 379, 172, 1000, 585, 773, 954, 676, 986, 363, 517, 329, 513, 965, 926, 259, 244, 288, 489, 135, 838, 386, 97, 744, 183, 466, 804, 858, 633, 429, 1069, 166, 20, 568, 297, 612, 669, 1008, 344, 704, 381, 591, 925, 1036, 479, 387, 972, 828, 291, 236, 235, 498, 602, 852, 930, 458, 233, 383, 430, 725, 968, 401, 649, 1045, 332, 251, 333, 231, 398, 552, 19, 1031, 283, 369, 54, 1040, 1057, 980, 892, 243, 58, 475, 145, 185, 157, 18, 103, 362, 213, 859, 887, 583, 855, 974, 917, 590, 308, 163, 564, 1052, 776, 201, 868, 818, 778, 342, 85, 67, 331, 199, 346, 960, 996, 115, 784, 343, 631, 988, 117, 425, 839, 435, 984, 790, 304, 250, 985, 214, 216, 445, 588, 452, 836, 133, 364, 1053, 532, 32, 1005, 857, 480, 106, 76, 656, 461, 557, 320, 650, 903, 757, 399, 433, 265, 845, 377, 1063, 860, 927, 485, 964, 477, 178, 976, 483, 30, 833, 1032, 8, 23, 413, 717, 131, 471, 812, 111, 457, 252, 9, 659, 691, 338, 1072, 60, 121, 941, 260, 1067, 726, 102, 1077, 837, 678, 533, 7, 188, 10, 90, 851, 571, 321, 864, 95, 889, 337, 89, 625, 1037, 1015, 909, 1060, 438, 632, 356, 374, 603, 992, 460, 511, 29, 699, 426, 506, 697, 15, 677, 644, 125, 1024, 280, 945, 298, 554, 918, 983, 666, 459, 908, 688, 882, 469, 462, 569, 256, 953, 257, 273, 944, 350, 701, 52, 431, 879, 44, 737, 949, 526, 12, 108, 943, 318, 80, 735, 1078, 422, 147, 335, 883, 1016, 491, 846, 155, 177, 970, 545, 436, 869, 336, 467, 241, 34, 309, 730, 922, 198, 323, 759, 786, 189, 396, 578, 5, 122, 969, 414, 844, 693, 144, 299, 617, 222, 623, 26, 355, 800, 268, 627, 25, 275, 775, 497, 128, 537, 264, 495, 224, 311, 388, 982, 762, 392, 212, 478, 175, 1066, 560, 444, 137, 681, 293, 357, 738, 395, 136, 574, 654, 510, 181, 822, 718, 153, 230, 287, 614, 486, 353, 547, 206, 752, 728, 218, 1048, 442, 184, 1034, 48, 894, 781, 21, 519, 389, 715, 351, 1047, 774, 391, 863, 226, 70, 847, 340, 1035, 1023, 404, 751, 453, 615, 126, 290, 411, 745, 417, 62, 49, 520, 891, 672, 811, 555, 915, 508, 813, 668, 41, 31, 653, 93, 99, 1009, 419, 307, 667, 91, 531, 6, 232, 783, 53, 71, 143, 810, 642, 937, 991, 687, 648, 994, 267, 1019, 573, 867, 56, 279, 394, 841, 274, 711, 367, 940, 16, 1074, 796, 594, 227, 580, 895, 410, 684, 534, 372, 789, 190, 359, 27, 465, 695, 266, 551, 549, 820, 179, 347, 932, 158, 159, 1027, 809, 525, 823, 371, 900, 450, 581, 814, 723, 180, 408, 923, 223, 220, 665, 727, 825, 663, 635, 504, 1050, 496, 601, 763, 562, 1056, 416, 439, 640, 1043, 874, 507, 101, 317, 502, 611, 619, 638, 443, 368, 109, 325, 652, 234, 741]

# Make sure we're in the experiment directory.
os.chdir(os.path.dirname(os.path.abspath(__file__)))


def get_run_id(task_id):
    return SHUFFLED_TASK_IDS[task_id - 1]


def process_task(task_id):
    run_id = get_run_id(task_id)
    run_dir = get_run_dir(run_id)
    error = False
    driver_log_file = os.path.join(run_dir, "driver.log")

    if os.path.exists(driver_log_file):
        logging.info(f"The run in {run_dir} has already been started --> skip it")
        return False

    with open(driver_log_file, "w") as driver_log:
        with open(os.path.join(run_dir, "driver.err"), "w") as driver_err:
            logging.info(f"Starting run {run_id} (TASK_ID {task_id}) in {run_dir}")
            try:
                subprocess.check_call(
                    [tools.get_python_executable(), "run"],
                    cwd=run_dir, stdout=driver_log, stderr=driver_err)
            except subprocess.CalledProcessError:
                error = True

    # driver.log always has content for a successful run, so we never delete it.
    if os.path.getsize(driver_err.name) == 0:
        os.remove(driver_err.name)
    else:
        error = True

    return error


def main():
    pool = multiprocessing.Pool(processes=4)
    num_tasks = len(SHUFFLED_TASK_IDS)
    result = pool.map_async(process_task, range(1, num_tasks + 1))
    try:
        # Use "timeout" to fix passing KeyboardInterrupts from children
        # (see https://stackoverflow.com/questions/1408356).
        result.wait(timeout=99999)
    except KeyboardInterrupt:
        logging.warning("Main script interrupted")
        pool.terminate()
    finally:
        pool.close()
        logging.info("Joining pool processes")
        pool.join()

    if any(result.get()):
        sys.exit("Error: At least one run failed.")


if __name__ == "__main__":
    main()
