INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/assign3/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-fe4f0f1bb525c059c1938ac01bab1b7bae200873_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.160s CPU, 0.162s wall-clock]
17074 relevant atoms
6737 auxiliary atoms
23811 final queue length
57091 total queue pushes
Completing instantiation... [0.600s CPU, 0.612s wall-clock]
Instantiating: [0.780s CPU, 0.784s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.010s CPU, 0.015s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
16 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.018s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.020s wall-clock]
Translating task: [0.410s CPU, 0.422s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.310s CPU, 0.306s wall-clock]
Reordering and filtering variables...
32 of 32 variables necessary.
16 of 32 mutex groups necessary.
15600 of 15600 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.046s wall-clock]
Translator variables: 32
Translator derived variables: 0
Translator facts: 288
Translator goal facts: 32
Translator mutex groups: 16
Translator total mutex groups size: 256
Translator operators: 15600
Translator axioms: 0
Translator task size: 78848
Translator peak memory: 89788 KB
Writing output... [0.060s CPU, 0.064s wall-clock]
Done! [1.670s CPU, 1.668s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 898s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/assign3/data/assign3-anytime_exp/code-fe4f0f1bb525c059c1938ac01bab1b7bae200873_e5e41175/builds/release/bin/downward --evaluator 'h=lmcut()' --search 'iterated([
            eager_wastar([h],w=5),
            eager_wastar([h],w=4),
            eager_wastar([h],w=3),
            eager_wastar([h],w=2),
            astar(h)
        ],continue_on_fail=true)' --internal-plan-file sas_plan < output.sas
[t=0.00274558s, 10884 KB] reading input...
[t=0.0465644s, 15376 KB] done reading input!
[t=0.0545281s, 18448 KB] Initializing landmark cut heuristic...
[t=0.0572388s, 18448 KB] Building successor generator...done!
[t=0.0629686s, 20404 KB] peak memory difference for successor generator creation: 1956 KB
[t=0.0630494s, 20404 KB] time for successor generation creation: 0.00506442s
[t=0.0630754s, 20404 KB] Variables: 32
[t=0.0631083s, 20404 KB] FactPairs: 288
[t=0.0631321s, 20404 KB] Bytes per state: 12
[t=0.0631556s, 20404 KB] Start Timestep: 1682533926760 millisecond(s).
[t=0.0632748s, 20404 KB] Building successor generator...done!
[t=0.063372s, 20404 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0634104s, 20404 KB] time for successor generation creation: 0s
[t=0.0634351s, 20404 KB] Variables: 32
[t=0.0634606s, 20404 KB] FactPairs: 288
[t=0.0634845s, 20404 KB] Bytes per state: 12
[t=0.0635081s, 20404 KB] Starting search: eager_wastar([h],w=5)
[t=0.0635399s, 20404 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0662604s, 20404 KB] New best heuristic value for lmcut(): 49
[t=0.0679618s, 20404 KB] g=0, 1 evaluated, 0 expanded
[t=0.0679913s, 20404 KB] Initial heuristic value for lmcut(): 49
[t=0.0680192s, 20404 KB] pruning method: none
[t=0.0680434s, 20404 KB] Start Timestep: 1682533926765 millisecond(s).
[t=0.070159s, 20404 KB] New best heuristic value for lmcut(): 46
[t=0.0717485s, 20404 KB] g=3, 2 evaluated, 1 expanded
[t=0.373337s, 20404 KB] New best heuristic value for lmcut(): 43
[t=0.374718s, 20404 KB] g=6, 74 evaluated, 2 expanded
[t=3.09596s, 20404 KB] New best heuristic value for lmcut(): 41
[t=3.09638s, 20404 KB] g=10, 749 evaluated, 12 expanded
[t=6.68399s, 20404 KB] New best heuristic value for lmcut(): 40
[t=6.68796s, 20404 KB] g=12, 1661 evaluated, 28 expanded
[t=9.03806s, 20404 KB] New best heuristic value for lmcut(): 38
[t=9.04117s, 20404 KB] g=15, 2278 evaluated, 38 expanded
[t=9.75886s, 20404 KB] New best heuristic value for lmcut(): 37
[t=9.76094s, 20404 KB] g=17, 2467 evaluated, 41 expanded
[t=28.2482s, 20404 KB] New best heuristic value for lmcut(): 36
[t=28.2492s, 20404 KB] g=21, 7264 evaluated, 139 expanded
[t=28.2755s, 20404 KB] New best heuristic value for lmcut(): 35
[t=28.2758s, 20404 KB] g=21, 7272 evaluated, 139 expanded
[t=32.2192s, 20404 KB] New best heuristic value for lmcut(): 34
[t=32.2216s, 20404 KB] g=23, 8342 evaluated, 157 expanded
[t=43.3888s, 20404 KB] New best heuristic value for lmcut(): 32
[t=43.3914s, 20404 KB] g=26, 11450 evaluated, 210 expanded
[t=51.7168s, 20404 KB] New best heuristic value for lmcut(): 31
[t=51.7196s, 20404 KB] g=29, 13810 evaluated, 255 expanded
[t=152.317s, 21548 KB] New best heuristic value for lmcut(): 30
[t=152.318s, 21548 KB] g=32, 41226 evaluated, 811 expanded
[t=152.531s, 21548 KB] New best heuristic value for lmcut(): 29
[t=152.532s, 21548 KB] g=33, 41290 evaluated, 812 expanded
[t=213.051s, 22084 KB] New best heuristic value for lmcut(): 28
[t=213.054s, 22084 KB] g=38, 59084 evaluated, 1163 expanded
[t=219.188s, 23112 KB] New best heuristic value for lmcut(): 27
[t=219.191s, 23112 KB] g=39, 61082 evaluated, 1211 expanded
[t=219.26s, 23112 KB] New best heuristic value for lmcut(): 26
[t=219.261s, 23112 KB] g=39, 61106 evaluated, 1211 expanded
[t=222.691s, 23112 KB] New best heuristic value for lmcut(): 25
[t=222.692s, 23112 KB] g=41, 62258 evaluated, 1231 expanded
[t=246.724s, 23112 KB] New best heuristic value for lmcut(): 23
[t=246.724s, 23112 KB] g=44, 70112 evaluated, 1379 expanded
[t=253.504s, 23112 KB] New best heuristic value for lmcut(): 22
[t=253.504s, 23112 KB] g=47, 72457 evaluated, 1424 expanded
[t=347.2s, 24232 KB] New best heuristic value for lmcut(): 21
[t=347.203s, 24232 KB] g=50, 104021 evaluated, 2066 expanded
[t=347.371s, 24232 KB] New best heuristic value for lmcut(): 20
[t=347.374s, 24232 KB] g=51, 104085 evaluated, 2067 expanded
[t=418.739s, 26692 KB] New best heuristic value for lmcut(): 19
[t=418.741s, 26692 KB] g=56, 129687 evaluated, 2580 expanded
[t=422.241s, 26692 KB] New best heuristic value for lmcut(): 18
[t=422.243s, 26692 KB] g=57, 131110 evaluated, 2617 expanded
[t=422.337s, 26692 KB] New best heuristic value for lmcut(): 17
[t=422.339s, 26692 KB] g=57, 131150 evaluated, 2617 expanded
[t=424.77s, 26692 KB] New best heuristic value for lmcut(): 16
[t=424.77s, 26692 KB] g=59, 132182 evaluated, 2635 expanded
[t=452.684s, 26692 KB] New best heuristic value for lmcut(): 14
[t=452.686s, 26692 KB] g=62, 143696 evaluated, 2860 expanded
[t=457.839s, 26744 KB] New best heuristic value for lmcut(): 13
[t=457.842s, 26744 KB] g=65, 146026 evaluated, 2905 expanded
[t=539.208s, 27976 KB] New best heuristic value for lmcut(): 12
[t=539.21s, 27976 KB] g=68, 181446 evaluated, 3629 expanded
[t=539.24s, 27976 KB] New best heuristic value for lmcut(): 11
[t=539.241s, 27976 KB] g=69, 181461 evaluated, 3630 expanded
[t=539.687s, 27976 KB] New best heuristic value for lmcut(): 10
[t=539.69s, 27976 KB] g=71, 181706 evaluated, 3633 expanded
[t=604.008s, 29184 KB] New best heuristic value for lmcut(): 8
[t=604.009s, 29184 KB] g=75, 212938 evaluated, 4259 expanded
[t=605.203s, 29184 KB] New best heuristic value for lmcut(): 7
[t=605.205s, 29184 KB] g=77, 213687 evaluated, 4271 expanded
[t=697.118s, 33696 KB] New best heuristic value for lmcut(): 5
[t=697.121s, 33696 KB] g=81, 267361 evaluated, 5283 expanded
[t=698.939s, 33696 KB] New best heuristic value for lmcut(): 4
[t=698.94s, 33696 KB] g=83, 268739 evaluated, 5306 expanded
[t=699.281s, 33696 KB] New best heuristic value for lmcut(): 2
[t=699.282s, 33696 KB] g=88, 269026 evaluated, 5310 expanded
[t=699.356s, 33696 KB] New best heuristic value for lmcut(): 1
[t=699.359s, 33696 KB] g=91, 269097 evaluated, 5311 expanded
[t=699.364s, 33696 KB] New best heuristic value for lmcut(): 0
[t=699.366s, 33696 KB] g=90, 269105 evaluated, 5312 expanded
[t=699.408s, 33696 KB] Solution found!
[t=699.409s, 33696 KB] Actual search time: 699.341s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-2 car-in-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-2 car-out-1 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-2 (3)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-out-1 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-in-2 (3)
rotate-2 seg-in-1 seg-out-3 car-in-2 car-out-1 (1)
rotate-2 seg-in-3 seg-out-1 car-in-3 car-out-3 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-2 seg-out-3 car-in-1 car-in-2 (1)
rotate-2 seg-in-4 seg-out-3 car-in-4 car-in-1 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-in-4 (1)
analyze-2 seg-in-1 seg-out-1 car-in-4 car-in-3 (3)
rotate-2 seg-in-1 seg-out-3 car-in-3 car-out-1 (1)
rotate-2 seg-in-3 seg-out-3 car-out-3 car-in-3 (1)
rotate-2 seg-in-1 seg-out-4 car-out-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-in-4 (3)
rotate-2 seg-in-1 seg-out-4 car-in-4 car-out-1 (1)
rotate-2 seg-in-5 seg-out-1 car-in-5 car-out-4 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-5 (1)
analyze-2 seg-in-1 seg-out-1 car-in-5 car-out-1 (3)
rotate-2 seg-in-4 seg-out-4 car-in-1 car-in-4 (1)
rotate-2 seg-in-6 seg-out-4 car-in-6 car-in-1 (1)
rotate-2 seg-in-1 seg-out-4 car-out-1 car-in-6 (1)
analyze-2 seg-in-1 seg-out-1 car-in-6 car-in-5 (3)
rotate-2 seg-in-1 seg-out-4 car-in-5 car-out-1 (1)
rotate-2 seg-in-5 seg-out-4 car-out-4 car-in-5 (1)
rotate-2 seg-in-1 seg-out-5 car-out-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-in-6 (3)
rotate-2 seg-in-1 seg-out-5 car-in-6 car-out-1 (1)
rotate-2 seg-in-7 seg-out-1 car-in-7 car-out-5 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-7 (1)
analyze-2 seg-in-1 seg-out-1 car-in-7 car-out-1 (3)
rotate-2 seg-in-6 seg-out-5 car-in-1 car-in-6 (1)
rotate-2 seg-in-8 seg-out-5 car-in-8 car-in-1 (1)
rotate-2 seg-in-1 seg-out-5 car-out-1 car-in-8 (1)
analyze-2 seg-in-1 seg-out-1 car-in-8 car-in-7 (3)
rotate-2 seg-in-1 seg-out-5 car-in-7 car-out-1 (1)
rotate-2 seg-in-7 seg-out-5 car-out-5 car-in-7 (1)
rotate-2 seg-in-1 seg-out-6 car-out-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-1 car-out-6 car-in-8 (3)
rotate-2 seg-in-1 seg-out-1 car-in-8 car-out-6 (1)
rotate-2 seg-in-1 seg-out-6 car-out-6 car-out-1 (1)
rotate-2 seg-in-1 seg-out-7 car-out-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-1 car-out-7 car-in-8 (3)
rotate-2 seg-in-8 seg-out-7 car-in-1 car-out-1 (1)
rotate-2 seg-in-1 seg-out-1 car-in-8 car-out-7 (1)
rotate-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (1)
rotate-2 seg-in-8 seg-out-1 car-out-1 car-in-8 (1)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
analyze-2 seg-in-1 seg-out-1 car-out-8 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-8 (1)
rotate-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (1)
[t=699.41s, 33696 KB] Plan length: 58 step(s).
[t=699.41s, 33696 KB] Plan cost: 90
[t=699.41s, 33696 KB] Solution Timestep: 1682534630121 millisecond(s).
[t=699.41s, 33696 KB] Timestamp: 1682534630121 millisecond(s).
[t=699.41s, 33696 KB] Expanded 5313 state(s).
[t=699.41s, 33696 KB] Reopened 0 state(s).
[t=699.41s, 33696 KB] Evaluated 269160 state(s).
[t=699.41s, 33696 KB] Evaluations: 269160
[t=699.41s, 33696 KB] Generated 345280 state(s).
[t=699.41s, 33696 KB] Dead ends: 0 state(s).
[t=699.41s, 33696 KB] Number of registered states: 269160
[t=699.41s, 33696 KB] Int hash set load factor: 269160/524288 = 0.513382
[t=699.41s, 33696 KB] Int hash set resizes: 19
[t=699.41s, 33696 KB] Best solution cost so far: 90
[t=699.41s, 33696 KB] Solution found - keep searching
[t=699.41s, 33696 KB] Building successor generator...done!
[t=699.411s, 33696 KB] peak memory difference for successor generator creation: 0 KB
[t=699.411s, 33696 KB] time for successor generation creation: 0s
[t=699.411s, 33696 KB] Variables: 32
[t=699.411s, 33696 KB] FactPairs: 288
[t=699.411s, 33696 KB] Bytes per state: 12
[t=699.411s, 33696 KB] Starting search: eager_wastar([h],w=4)
[t=699.411s, 33696 KB] Conducting best first search with reopening closed nodes, (real) bound = 90
[t=699.412s, 33696 KB] New best heuristic value for lmcut(): 49
[t=699.415s, 33696 KB] g=0, 1 evaluated, 0 expanded
[t=699.415s, 33696 KB] Initial heuristic value for lmcut(): 49
[t=699.415s, 33696 KB] pruning method: none
[t=699.415s, 33696 KB] Start Timestep: 1682534630127 millisecond(s).
[t=699.415s, 33696 KB] New best heuristic value for lmcut(): 46
[t=699.419s, 33696 KB] g=3, 2 evaluated, 1 expanded
[t=699.719s, 33696 KB] New best heuristic value for lmcut(): 43
[t=699.722s, 33696 KB] g=6, 74 evaluated, 2 expanded
[t=702.433s, 33696 KB] New best heuristic value for lmcut(): 41
[t=702.435s, 33696 KB] g=10, 749 evaluated, 12 expanded
[t=706.018s, 33696 KB] New best heuristic value for lmcut(): 40
[t=706.022s, 33696 KB] g=12, 1661 evaluated, 28 expanded
[t=708.386s, 33696 KB] New best heuristic value for lmcut(): 38
[t=708.387s, 33696 KB] g=15, 2278 evaluated, 38 expanded
[t=709.11s, 33696 KB] New best heuristic value for lmcut(): 37
[t=709.112s, 33696 KB] g=17, 2467 evaluated, 41 expanded
[t=727.504s, 33696 KB] New best heuristic value for lmcut(): 36
[t=727.506s, 33696 KB] g=21, 7264 evaluated, 139 expanded
[t=727.532s, 33696 KB] New best heuristic value for lmcut(): 35
[t=727.533s, 33696 KB] g=21, 7272 evaluated, 139 expanded
[t=731.439s, 33696 KB] New best heuristic value for lmcut(): 34
[t=731.441s, 33696 KB] g=23, 8342 evaluated, 157 expanded
[t=742.62s, 33696 KB] New best heuristic value for lmcut(): 32
[t=742.622s, 33696 KB] g=26, 11450 evaluated, 210 expanded
[t=750.964s, 33696 KB] New best heuristic value for lmcut(): 31
[t=750.968s, 33696 KB] g=29, 13810 evaluated, 255 expanded
[t=850.793s, 33696 KB] New best heuristic value for lmcut(): 30
[t=850.795s, 33696 KB] g=32, 41226 evaluated, 811 expanded
[t=851.009s, 33696 KB] New best heuristic value for lmcut(): 29
[t=851.009s, 33696 KB] g=33, 41290 evaluated, 812 expanded
Peak memory: 33696 KB
caught signal 24 -- exiting
Time limit has been reached.
Remove intermediate file output.sas
search exit code: 23

Driver aborting after search
INFO     Planner time: 896.66s
