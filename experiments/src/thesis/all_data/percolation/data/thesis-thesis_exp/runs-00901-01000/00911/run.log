INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.220s CPU, 0.222s wall-clock]
33917 relevant atoms
3770 auxiliary atoms
37687 final queue length
109988 total queue pushes
Completing instantiation... [1.480s CPU, 1.479s wall-clock]
Instantiating: [1.710s CPU, 1.712s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.046s wall-clock]
Translating task: [1.450s CPU, 1.455s wall-clock]
38592 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.860s CPU, 0.850s wall-clock]
Reordering and filtering variables...
85 of 85 variables necessary.
37 of 61 mutex groups necessary.
31104 of 31104 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.190s CPU, 0.198s wall-clock]
Translator variables: 85
Translator derived variables: 0
Translator facts: 1010
Translator goal facts: 24
Translator mutex groups: 37
Translator total mutex groups size: 925
Translator operators: 31104
Translator axioms: 0
Translator task size: 253756
Translator peak memory: 182948 KB
Writing output... [0.190s CPU, 0.192s wall-clock]
Done! [4.480s CPU, 4.486s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 295s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager( alt( [lwm_intra_explore_type(h), single(h)] ) )' --internal-plan-file sas_plan < output.sas
[t=0s, 11364 KB] reading input...
[t=0.126053s, 23120 KB] done reading input!
[t=0.139828s, 29628 KB] Simplifying 107976 unary operators... done! [107976 unary operators]
[t=0.375554s, 39412 KB] time to simplify: 0.235726s
[t=0.376049s, 39412 KB] Initializing additive heuristic...
[t=0.378881s, 39412 KB] Initializing FF heuristic...
[t=0.378919s, 39412 KB] Building successor generator...done!
[t=0.388037s, 39412 KB] peak memory difference for successor generator creation: 0 KB
[t=0.388148s, 39412 KB] time for successor generation creation: 0.00836808s
[t=0.388175s, 39412 KB] Variables: 85
[t=0.38875s, 39412 KB] FactPairs: 1010
[t=0.388782s, 39412 KB] Bytes per state: 28
[t=0.388806s, 39412 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.39126s, 39412 KB] New best heuristic value for ff(): 48
[t=0.39148s, 39412 KB] g=0, 1 evaluated, 0 expanded
[t=0.391508s, 39412 KB] Initial heuristic value for ff(): 48
[t=0.391543s, 39412 KB] pruning method: none
[t=0.391568s, 39412 KB] Start Timestep: 1687908470836 millisecond(s).
[t=0.39918s, 39412 KB] New best heuristic value for ff(): 46
[t=0.400634s, 39412 KB] g=1, 8 evaluated, 1 expanded
[t=0.554974s, 39412 KB] New best heuristic value for ff(): 45
[t=0.556876s, 39412 KB] g=4, 135 evaluated, 8 expanded
[t=0.770505s, 39412 KB] New best heuristic value for ff(): 44
[t=0.773693s, 39412 KB] g=6, 312 evaluated, 16 expanded
[t=1.04893s, 39412 KB] New best heuristic value for ff(): 43
[t=1.04921s, 39412 KB] g=7, 538 evaluated, 26 expanded
[t=1.16479s, 39412 KB] New best heuristic value for ff(): 42
[t=1.16659s, 39412 KB] g=8, 634 evaluated, 30 expanded
[t=1.28054s, 39412 KB] New best heuristic value for ff(): 41
[t=1.28255s, 39412 KB] g=9, 729 evaluated, 34 expanded
[t=1.28847s, 39412 KB] New best heuristic value for ff(): 40
[t=1.29004s, 39412 KB] g=9, 735 evaluated, 34 expanded
[t=1.34018s, 39412 KB] New best heuristic value for ff(): 39
[t=1.34279s, 39412 KB] g=10, 778 evaluated, 36 expanded
[t=1.49197s, 39412 KB] New best heuristic value for ff(): 38
[t=1.49509s, 39412 KB] g=12, 903 evaluated, 41 expanded
[t=1.5079s, 39412 KB] New best heuristic value for ff(): 36
[t=1.50989s, 39412 KB] g=13, 915 evaluated, 42 expanded
[t=1.60777s, 39412 KB] New best heuristic value for ff(): 35
[t=1.60958s, 39412 KB] g=15, 996 evaluated, 46 expanded
[t=1.65552s, 39412 KB] New best heuristic value for ff(): 33
[t=1.65863s, 39412 KB] g=16, 1036 evaluated, 48 expanded
[t=1.7114s, 39412 KB] New best heuristic value for ff(): 32
[t=1.71529s, 39412 KB] g=17, 1083 evaluated, 50 expanded
[t=1.77924s, 39412 KB] New best heuristic value for ff(): 31
[t=1.7797s, 39412 KB] g=18, 1136 evaluated, 52 expanded
[t=1.78717s, 39412 KB] New best heuristic value for ff(): 30
[t=1.79065s, 39412 KB] g=18, 1145 evaluated, 52 expanded
[t=2.05081s, 39412 KB] New best heuristic value for ff(): 29
[t=2.05435s, 39412 KB] g=19, 1363 evaluated, 62 expanded
[t=2.41426s, 39412 KB] New best heuristic value for ff(): 28
[t=2.4155s, 39412 KB] g=22, 1661 evaluated, 76 expanded
[t=4.67457s, 39412 KB] New best heuristic value for ff(): 27
[t=4.67685s, 39412 KB] g=26, 3537 evaluated, 159 expanded
[t=4.71851s, 39412 KB] New best heuristic value for ff(): 26
[t=4.71954s, 39412 KB] g=27, 3572 evaluated, 161 expanded
[t=4.72441s, 39412 KB] New best heuristic value for ff(): 25
[t=4.72449s, 39412 KB] g=27, 3576 evaluated, 161 expanded
[t=4.77433s, 39412 KB] New best heuristic value for ff(): 24
[t=4.77648s, 39412 KB] g=28, 3619 evaluated, 163 expanded
[t=4.8222s, 39412 KB] New best heuristic value for ff(): 23
[t=4.82364s, 39412 KB] g=29, 3658 evaluated, 165 expanded
[t=4.88997s, 39412 KB] New best heuristic value for ff(): 22
[t=4.89079s, 39412 KB] g=30, 3714 evaluated, 167 expanded
[t=14.8038s, 39412 KB] New best heuristic value for ff(): 21
[t=14.8074s, 39412 KB] g=35, 11950 evaluated, 540 expanded
[t=27.0637s, 39412 KB] New best heuristic value for ff(): 20
[t=27.0643s, 39412 KB] g=41, 22201 evaluated, 1043 expanded
[t=32.7129s, 39412 KB] New best heuristic value for ff(): 19
[t=32.715s, 39412 KB] g=38, 26928 evaluated, 1279 expanded
[t=32.8365s, 39412 KB] New best heuristic value for ff(): 18
[t=32.8406s, 39412 KB] g=41, 27032 evaluated, 1285 expanded
[t=32.8923s, 39412 KB] New best heuristic value for ff(): 17
[t=32.8945s, 39412 KB] g=42, 27077 evaluated, 1287 expanded
[t=32.9003s, 39412 KB] New best heuristic value for ff(): 16
[t=32.9018s, 39412 KB] g=42, 27083 evaluated, 1287 expanded
[t=32.9801s, 39412 KB] New best heuristic value for ff(): 15
[t=32.9827s, 39412 KB] g=44, 27151 evaluated, 1291 expanded
[t=40.8054s, 39412 KB] New best heuristic value for ff(): 14
[t=40.8095s, 39412 KB] g=47, 33722 evaluated, 1620 expanded
[t=74.3916s, 43380 KB] New best heuristic value for ff(): 13
[t=74.394s, 43380 KB] g=49, 62567 evaluated, 3069 expanded
[t=74.4435s, 43380 KB] New best heuristic value for ff(): 12
[t=74.4462s, 43380 KB] g=50, 62612 evaluated, 3071 expanded
[t=74.4913s, 43380 KB] New best heuristic value for ff(): 11
[t=74.4916s, 43380 KB] g=51, 62651 evaluated, 3073 expanded
[t=74.5432s, 43380 KB] New best heuristic value for ff(): 10
[t=74.5436s, 43380 KB] g=52, 62696 evaluated, 3075 expanded
[t=74.5671s, 43380 KB] New best heuristic value for ff(): 9
[t=74.5706s, 43380 KB] g=53, 62719 evaluated, 3077 expanded
[t=81.3572s, 44052 KB] New best heuristic value for ff(): 8
[t=81.3587s, 44052 KB] g=57, 68638 evaluated, 3369 expanded
[t=91.5193s, 48684 KB] New best heuristic value for ff(): 7
[t=91.5195s, 48684 KB] g=60, 77436 evaluated, 3816 expanded
[t=91.6023s, 48684 KB] New best heuristic value for ff(): 6
[t=91.6028s, 48684 KB] g=62, 77508 evaluated, 3820 expanded
[t=91.6422s, 48684 KB] New best heuristic value for ff(): 5
[t=91.6426s, 48684 KB] g=63, 77543 evaluated, 3822 expanded
[t=91.6945s, 48684 KB] New best heuristic value for ff(): 4
[t=91.6949s, 48684 KB] g=64, 77591 evaluated, 3824 expanded
[t=91.7313s, 48684 KB] New best heuristic value for ff(): 2
[t=91.732s, 48684 KB] g=65, 77625 evaluated, 3826 expanded
[t=91.7835s, 48684 KB] New best heuristic value for ff(): 1
[t=91.7838s, 48684 KB] g=66, 77679 evaluated, 3828 expanded
[t=91.8048s, 48684 KB] New best heuristic value for ff(): 0
[t=91.8056s, 48684 KB] g=67, 77707 evaluated, 3829 expanded
[t=91.8416s, 48684 KB] Solution found!
[t=91.8419s, 48684 KB] Actual search time: 91.4503s
move-curb-to-car car_16 curb_12 car_06 (1)
move-car-to-curb car_03 car_12 curb_12 (1)
move-car-to-car car_16 car_06 car_03 (1)
move-curb-to-car car_12 curb_02 car_06 (1)
move-car-to-curb car_10 car_09 curb_02 (1)
move-car-to-car car_22 car_02 car_09 (1)
move-car-to-car car_15 car_01 car_02 (1)
move-car-to-car car_14 car_08 car_01 (1)
move-car-to-car car_21 car_00 car_08 (1)
move-car-to-car car_18 car_04 car_10 (1)
move-car-to-car car_13 car_20 car_00 (1)
move-curb-to-car car_04 curb_07 car_20 (1)
move-car-to-curb car_07 car_19 curb_07 (1)
move-curb-to-car car_19 curb_04 car_07 (1)
move-car-to-curb car_04 car_20 curb_04 (1)
move-car-to-car car_17 car_05 car_04 (1)
move-car-to-car car_18 car_10 car_05 (1)
move-car-to-car car_12 car_06 car_20 (1)
move-car-to-car car_19 car_07 car_06 (1)
move-car-to-car car_23 car_11 car_10 (1)
move-car-to-car car_12 car_20 car_11 (1)
move-curb-to-car car_20 curb_03 car_07 (1)
move-car-to-curb car_16 car_03 curb_03 (1)
move-car-to-car car_12 car_11 car_16 (1)
move-curb-to-car car_03 curb_12 car_11 (1)
move-car-to-curb car_12 car_16 curb_12 (1)
move-curb-to-car car_16 curb_03 car_12 (1)
move-car-to-curb car_03 car_11 curb_03 (1)
move-car-to-car car_16 car_12 car_03 (1)
move-curb-to-car car_11 curb_01 car_12 (1)
move-car-to-curb car_19 car_06 curb_01 (1)
move-car-to-car car_11 car_12 car_19 (1)
move-curb-to-car car_06 curb_11 car_12 (1)
move-car-to-curb car_11 car_19 curb_11 (1)
move-car-to-car car_15 car_02 car_11 (1)
move-curb-to-car car_02 curb_06 car_19 (1)
move-car-to-curb car_06 car_12 curb_06 (1)
move-car-to-car car_23 car_10 car_12 (1)
move-curb-to-car car_10 curb_02 car_06 (1)
move-car-to-curb car_02 car_19 curb_02 (1)
move-car-to-car car_15 car_11 car_02 (1)
move-curb-to-car car_19 curb_01 car_11 (1)
move-car-to-curb car_10 car_06 curb_01 (1)
move-car-to-car car_19 car_11 car_06 (1)
move-curb-to-car car_10 curb_01 car_11 (1)
move-car-to-curb car_14 car_01 curb_01 (1)
move-curb-to-car car_01 curb_10 car_14 (1)
move-car-to-curb car_10 car_11 curb_10 (1)
move-car-to-car car_01 car_14 car_11 (1)
move-car-to-car car_23 car_12 car_10 (1)
move-curb-to-car car_14 curb_01 car_12 (1)
move-car-to-curb car_01 car_11 curb_01 (1)
move-car-to-car car_14 car_12 car_01 (1)
move-car-to-car car_13 car_00 car_11 (1)
move-curb-to-car car_00 curb_09 car_12 (1)
move-car-to-curb car_13 car_11 curb_09 (1)
move-car-to-car car_18 car_05 car_11 (1)
move-curb-to-car car_05 curb_00 car_13 (1)
move-car-to-curb car_00 car_12 curb_00 (1)
move-car-to-car car_22 car_09 car_12 (1)
move-curb-to-car car_09 curb_05 car_00 (1)
move-car-to-curb car_05 car_13 curb_05 (1)
move-curb-to-car car_13 curb_09 car_05 (1)
move-car-to-curb car_09 car_00 curb_09 (1)
move-car-to-car car_13 car_05 car_00 (1)
move-car-to-car car_18 car_11 car_05 (1)
move-car-to-car car_22 car_12 car_09 (1)
[t=91.8419s, 48684 KB] Plan length: 67 step(s).
[t=91.8419s, 48684 KB] Plan cost: 67
[t=91.8419s, 48684 KB] Timestamp: 1687908562545 millisecond(s).
[t=91.8419s, 48684 KB] Expanded 3831 state(s).
[t=91.8419s, 48684 KB] Reopened 0 state(s).
[t=91.8419s, 48684 KB] Evaluated 77744 state(s).
[t=91.8419s, 48684 KB] Evaluations: 77744
[t=91.8419s, 48684 KB] Generated 91250 state(s).
[t=91.8419s, 48684 KB] Dead ends: 6470 state(s).
[t=91.8419s, 48684 KB] Number of registered states: 77744
[t=91.8419s, 48684 KB] Int hash set load factor: 77744/131072 = 0.59314
[t=91.8419s, 48684 KB] Int hash set resizes: 17
[t=91.8419s, 48684 KB] Search time: 91.4531s
[t=91.8419s, 48684 KB] Total time: 91.8419s
Solution found.
Peak memory: 48684 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 67 

Successful plans:
Value: 67
 sas_plan 67 

validate exit code: 0

INFO     Planner time: 96.46s
