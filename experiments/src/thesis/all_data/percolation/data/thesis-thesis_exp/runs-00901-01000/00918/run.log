INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.270s CPU, 0.273s wall-clock]
42827 relevant atoms
4396 auxiliary atoms
47223 final queue length
138834 total queue pushes
Completing instantiation... [1.860s CPU, 1.856s wall-clock]
Instantiating: [2.150s CPU, 2.144s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.018s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.058s wall-clock]
Translating task: [1.790s CPU, 1.802s wall-clock]
49010 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
26 propositions removed
Detecting unreachable propositions: [1.050s CPU, 1.051s wall-clock]
Reordering and filtering variables...
92 of 92 variables necessary.
40 of 66 mutex groups necessary.
39546 of 39546 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.260s CPU, 0.250s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 1172
Translator goal facts: 26
Translator mutex groups: 40
Translator total mutex groups size: 1080
Translator operators: 39546
Translator axioms: 0
Translator task size: 322456
Translator peak memory: 223472 KB
Writing output... [0.240s CPU, 0.243s wall-clock]
Done! [5.580s CPU, 5.587s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 294s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager( alt( [lwm_intra_explore_type(h), single(h)] ) )' --internal-plan-file sas_plan < output.sas
[t=0s, 11364 KB] reading input...
[t=0.163865s, 26416 KB] done reading input!
[t=0.183813s, 33616 KB] Simplifying 137202 unary operators... done! [137202 unary operators]
[t=0.451558s, 46284 KB] time to simplify: 0.279746s
[t=0.4675s, 46284 KB] Initializing additive heuristic...
[t=0.468846s, 46284 KB] Initializing FF heuristic...
[t=0.468874s, 46284 KB] Building successor generator...done!
[t=0.480382s, 46284 KB] peak memory difference for successor generator creation: 0 KB
[t=0.480494s, 46284 KB] time for successor generation creation: 0.0104396s
[t=0.480518s, 46284 KB] Variables: 92
[t=0.48123s, 46284 KB] FactPairs: 1172
[t=0.481254s, 46284 KB] Bytes per state: 28
[t=0.481277s, 46284 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.483288s, 46284 KB] New best heuristic value for ff(): 48
[t=0.484685s, 46284 KB] g=0, 1 evaluated, 0 expanded
[t=0.484713s, 46284 KB] Initial heuristic value for ff(): 48
[t=0.484749s, 46284 KB] pruning method: none
[t=0.484774s, 46284 KB] Start Timestep: 1687905354025 millisecond(s).
[t=0.53121s, 46284 KB] New best heuristic value for ff(): 47
[t=0.534276s, 46284 KB] g=2, 31 evaluated, 2 expanded
[t=0.790657s, 46284 KB] New best heuristic value for ff(): 46
[t=0.793666s, 46284 KB] g=6, 189 evaluated, 10 expanded
[t=1.23212s, 46284 KB] New best heuristic value for ff(): 45
[t=1.23279s, 46284 KB] g=6, 458 evaluated, 23 expanded
[t=1.93782s, 46284 KB] New best heuristic value for ff(): 44
[t=1.93855s, 46284 KB] g=8, 894 evaluated, 44 expanded
[t=2.40545s, 46284 KB] New best heuristic value for ff(): 43
[t=2.40706s, 46284 KB] g=11, 1184 evaluated, 58 expanded
[t=2.40937s, 46284 KB] New best heuristic value for ff(): 42
[t=2.41036s, 46284 KB] g=11, 1186 evaluated, 58 expanded
[t=2.5531s, 46284 KB] New best heuristic value for ff(): 41
[t=2.55635s, 46284 KB] g=12, 1276 evaluated, 62 expanded
[t=2.55701s, 46284 KB] New best heuristic value for ff(): 40
[t=2.55966s, 46284 KB] g=12, 1278 evaluated, 62 expanded
[t=3.28865s, 46284 KB] New best heuristic value for ff(): 38
[t=3.28895s, 46284 KB] g=17, 1731 evaluated, 84 expanded
[t=3.75942s, 46284 KB] New best heuristic value for ff(): 37
[t=3.76109s, 46284 KB] g=19, 2022 evaluated, 97 expanded
[t=3.90729s, 46284 KB] New best heuristic value for ff(): 36
[t=3.90932s, 46284 KB] g=21, 2115 evaluated, 101 expanded
[t=4.30292s, 46284 KB] New best heuristic value for ff(): 34
[t=4.30304s, 46284 KB] g=23, 2361 evaluated, 112 expanded
[t=5.2502s, 46284 KB] New best heuristic value for ff(): 33
[t=5.2543s, 46284 KB] g=28, 2945 evaluated, 138 expanded
[t=5.53411s, 46284 KB] New best heuristic value for ff(): 32
[t=5.53571s, 46284 KB] g=29, 3117 evaluated, 146 expanded
[t=5.56192s, 46284 KB] New best heuristic value for ff(): 31
[t=5.56267s, 46284 KB] g=30, 3134 evaluated, 147 expanded
[t=5.82558s, 46284 KB] New best heuristic value for ff(): 30
[t=5.82697s, 46284 KB] g=32, 3299 evaluated, 155 expanded
[t=5.98942s, 46284 KB] New best heuristic value for ff(): 29
[t=5.98981s, 46284 KB] g=33, 3401 evaluated, 159 expanded
[t=6.00932s, 46284 KB] New best heuristic value for ff(): 28
[t=6.01216s, 46284 KB] g=33, 3415 evaluated, 159 expanded
[t=6.32521s, 46284 KB] New best heuristic value for ff(): 27
[t=6.32893s, 46284 KB] g=35, 3614 evaluated, 167 expanded
[t=6.38115s, 46284 KB] New best heuristic value for ff(): 26
[t=6.38156s, 46284 KB] g=36, 3647 evaluated, 169 expanded
[t=7.27204s, 46284 KB] New best heuristic value for ff(): 25
[t=7.27596s, 46284 KB] g=38, 4208 evaluated, 193 expanded
[t=9.1433s, 46284 KB] New best heuristic value for ff(): 24
[t=9.14569s, 46284 KB] g=45, 5387 evaluated, 242 expanded
[t=9.65111s, 46284 KB] New best heuristic value for ff(): 23
[t=9.65133s, 46284 KB] g=50, 5706 evaluated, 255 expanded
[t=9.65136s, 46284 KB] New best heuristic value for ff(): 22
[t=9.65302s, 46284 KB] g=50, 5707 evaluated, 255 expanded
[t=10.0307s, 46284 KB] New best heuristic value for ff(): 21
[t=10.0334s, 46284 KB] g=53, 5941 evaluated, 265 expanded
[t=10.0507s, 46284 KB] New best heuristic value for ff(): 20
[t=10.0537s, 46284 KB] g=53, 5954 evaluated, 265 expanded
[t=10.1906s, 46284 KB] New best heuristic value for ff(): 19
[t=10.1909s, 46284 KB] g=54, 6041 evaluated, 269 expanded
[t=23.0178s, 46284 KB] New best heuristic value for ff(): 18
[t=23.0212s, 46284 KB] g=59, 14175 evaluated, 607 expanded
[t=39.8663s, 46284 KB] New best heuristic value for ff(): 17
[t=39.8674s, 46284 KB] g=62, 25031 evaluated, 1092 expanded
[t=39.9422s, 46284 KB] New best heuristic value for ff(): 15
[t=39.9428s, 46284 KB] g=63, 25080 evaluated, 1094 expanded
[t=49.3003s, 46284 KB] New best heuristic value for ff(): 14
[t=49.304s, 46284 KB] g=65, 31250 evaluated, 1376 expanded
[t=69.3916s, 47180 KB] New best heuristic value for ff(): 13
[t=69.3938s, 47180 KB] g=72, 44534 evaluated, 1980 expanded
[t=69.4715s, 47180 KB] New best heuristic value for ff(): 12
[t=69.4717s, 47180 KB] g=73, 44585 evaluated, 1982 expanded
[t=69.5235s, 47180 KB] New best heuristic value for ff(): 10
[t=69.5274s, 47180 KB] g=74, 44622 evaluated, 1984 expanded
[t=69.6114s, 47180 KB] New best heuristic value for ff(): 9
[t=69.6142s, 47180 KB] g=75, 44680 evaluated, 1986 expanded
[t=74.0327s, 47180 KB] New best heuristic value for ff(): 8
[t=74.0334s, 47180 KB] g=78, 47614 evaluated, 2124 expanded
[t=86.7459s, 47180 KB] New best heuristic value for ff(): 7
[t=86.7496s, 47180 KB] g=81, 56055 evaluated, 2506 expanded
[t=86.7938s, 47180 KB] New best heuristic value for ff(): 6
[t=86.7972s, 47180 KB] g=82, 56087 evaluated, 2508 expanded
[t=88.0335s, 47180 KB] New best heuristic value for ff(): 5
[t=88.0346s, 47180 KB] g=85, 56925 evaluated, 2546 expanded
[t=88.0534s, 47180 KB] New best heuristic value for ff(): 4
[t=88.0538s, 47180 KB] g=85, 56939 evaluated, 2546 expanded
[t=88.1093s, 47180 KB] New best heuristic value for ff(): 2
[t=88.1132s, 47180 KB] g=86, 56980 evaluated, 2548 expanded
[t=88.1813s, 47180 KB] New best heuristic value for ff(): 1
[t=88.1842s, 47180 KB] g=87, 57031 evaluated, 2550 expanded
[t=88.2372s, 47180 KB] New best heuristic value for ff(): 0
[t=88.2392s, 47180 KB] g=88, 57070 evaluated, 2552 expanded
[t=88.2971s, 47180 KB] Solution found!
[t=88.2975s, 47180 KB] Actual search time: 87.8126s
move-car-to-curb car_25 car_09 curb_13 (1)
move-car-to-car car_10 car_01 car_25 (1)
move-curb-to-car car_01 curb_03 car_09 (1)
move-car-to-curb car_03 car_15 curb_03 (1)
move-curb-to-car car_15 curb_02 car_03 (1)
move-car-to-curb car_01 car_09 curb_02 (1)
move-car-to-car car_15 car_03 car_01 (1)
move-car-to-car car_06 car_04 car_09 (1)
move-curb-to-car car_04 curb_06 car_03 (1)
move-car-to-curb car_06 car_09 curb_06 (1)
move-car-to-car car_20 car_00 car_06 (1)
move-car-to-car car_23 car_07 car_00 (1)
move-car-to-car car_04 car_03 car_09 (1)
move-car-to-car car_16 car_11 car_03 (1)
move-curb-to-car car_11 curb_04 car_07 (1)
move-car-to-curb car_04 car_09 curb_04 (1)
move-curb-to-car car_09 curb_10 car_04 (1)
move-car-to-curb car_10 car_25 curb_10 (1)
move-curb-to-car car_25 curb_13 car_10 (1)
move-car-to-curb car_11 car_07 curb_13 (1)
move-curb-to-car car_07 curb_08 car_11 (1)
move-car-to-curb car_08 car_13 curb_08 (1)
move-curb-to-car car_13 curb_12 car_08 (1)
move-car-to-curb car_07 car_11 curb_12 (1)
move-car-to-car car_25 car_10 car_07 (1)
move-car-to-car car_16 car_03 car_10 (1)
move-car-to-car car_25 car_07 car_11 (1)
move-car-to-car car_13 car_08 car_03 (1)
move-car-to-car car_22 car_24 car_08 (1)
move-curb-to-car car_24 curb_11 car_07 (1)
move-car-to-curb car_09 car_04 curb_11 (1)
move-car-to-car car_18 car_21 car_04 (1)
move-car-to-car car_13 car_03 car_21 (1)
move-car-to-car car_16 car_10 car_09 (1)
move-car-to-car car_24 car_07 car_10 (1)
move-car-to-car car_16 car_09 car_03 (1)
move-car-to-car car_12 car_02 car_07 (1)
move-car-to-car car_16 car_03 car_02 (1)
move-car-to-car car_23 car_00 car_03 (1)
move-car-to-car car_12 car_07 car_00 (1)
move-car-to-car car_23 car_03 car_09 (1)
move-car-to-car car_14 car_17 car_03 (1)
move-car-to-car car_23 car_09 car_17 (1)
move-car-to-car car_12 car_00 car_07 (1)
move-car-to-car car_14 car_03 car_00 (1)
move-car-to-car car_12 car_07 car_03 (1)
move-car-to-car car_23 car_17 car_09 (1)
move-curb-to-car car_07 curb_12 car_17 (1)
move-car-to-curb car_12 car_03 curb_12 (1)
move-car-to-car car_13 car_21 car_12 (1)
move-curb-to-car car_21 curb_00 car_03 (1)
move-car-to-curb car_07 car_17 curb_00 (1)
move-car-to-car car_21 car_03 car_07 (1)
move-curb-to-car car_17 curb_01 car_03 (1)
move-car-to-curb car_25 car_11 curb_01 (1)
move-car-to-car car_13 car_12 car_25 (1)
move-curb-to-car car_11 curb_13 car_12 (1)
move-car-to-curb car_13 car_25 curb_13 (1)
move-car-to-car car_23 car_09 car_13 (1)
move-curb-to-car car_09 curb_11 car_25 (1)
move-car-to-curb car_11 car_12 curb_11 (1)
move-car-to-car car_09 car_25 car_12 (1)
move-curb-to-car car_25 curb_01 car_11 (1)
move-car-to-curb car_09 car_12 curb_01 (1)
move-car-to-car car_23 car_13 car_12 (1)
move-car-to-car car_21 car_07 car_13 (1)
move-curb-to-car car_07 curb_00 car_09 (1)
move-car-to-curb car_14 car_00 curb_00 (1)
move-curb-to-car car_00 curb_07 car_14 (1)
move-car-to-curb car_07 car_09 curb_07 (1)
move-car-to-car car_00 car_14 car_07 (1)
move-curb-to-car car_14 curb_00 car_09 (1)
move-car-to-curb car_00 car_07 curb_00 (1)
move-car-to-car car_14 car_09 car_00 (1)
move-car-to-car car_21 car_13 car_07 (1)
move-curb-to-car car_09 curb_01 car_13 (1)
move-car-to-curb car_16 car_02 curb_01 (1)
move-curb-to-car car_02 curb_09 car_16 (1)
move-car-to-curb car_09 car_13 curb_09 (1)
move-car-to-car car_02 car_16 car_13 (1)
move-car-to-car car_23 car_12 car_09 (1)
move-car-to-car car_15 car_01 car_12 (1)
move-curb-to-car car_01 curb_02 car_16 (1)
move-car-to-curb car_02 car_13 curb_02 (1)
move-car-to-car car_01 car_16 car_13 (1)
move-curb-to-car car_16 curb_01 car_02 (1)
move-car-to-curb car_01 car_13 curb_01 (1)
move-car-to-car car_15 car_12 car_01 (1)
[t=88.2975s, 47180 KB] Plan length: 88 step(s).
[t=88.2975s, 47180 KB] Plan cost: 88
[t=88.2975s, 47180 KB] Timestamp: 1687905441906 millisecond(s).
[t=88.2975s, 47180 KB] Expanded 2554 state(s).
[t=88.2975s, 47180 KB] Reopened 0 state(s).
[t=88.2975s, 47180 KB] Evaluated 57118 state(s).
[t=88.2975s, 47180 KB] Evaluations: 57118
[t=88.2975s, 47180 KB] Generated 65934 state(s).
[t=88.2975s, 47180 KB] Dead ends: 4366 state(s).
[t=88.2975s, 47180 KB] Number of registered states: 57118
[t=88.2975s, 47180 KB] Int hash set load factor: 57118/65536 = 0.871552
[t=88.2975s, 47180 KB] Int hash set resizes: 16
[t=88.2975s, 47180 KB] Search time: 87.8162s
[t=88.2975s, 47180 KB] Total time: 88.2975s
Solution found.
Peak memory: 47180 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 88 

Successful plans:
Value: 88
 sas_plan 88 

validate exit code: 0

INFO     Planner time: 94.02s
