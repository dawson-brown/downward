INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.220s CPU, 0.218s wall-clock]
33917 relevant atoms
3770 auxiliary atoms
37687 final queue length
109988 total queue pushes
Completing instantiation... [1.430s CPU, 1.439s wall-clock]
Instantiating: [1.670s CPU, 1.669s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.050s CPU, 0.046s wall-clock]
Translating task: [1.440s CPU, 1.445s wall-clock]
38592 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.840s CPU, 0.840s wall-clock]
Reordering and filtering variables...
85 of 85 variables necessary.
37 of 61 mutex groups necessary.
31104 of 31104 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.210s CPU, 0.197s wall-clock]
Translator variables: 85
Translator derived variables: 0
Translator facts: 1010
Translator goal facts: 24
Translator mutex groups: 37
Translator total mutex groups size: 925
Translator operators: 31104
Translator axioms: 0
Translator task size: 253756
Translator peak memory: 183204 KB
Writing output... [0.180s CPU, 0.193s wall-clock]
Done! [4.420s CPU, 4.424s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 295s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager( alt( [lwm_intra_explore_type(h), single(h)] ) )' --internal-plan-file sas_plan < output.sas
[t=0.0024022s, 11364 KB] reading input...
[t=0.126311s, 23120 KB] done reading input!
[t=0.138263s, 29628 KB] Simplifying 107976 unary operators... done! [107976 unary operators]
[t=0.350123s, 39412 KB] time to simplify: 0.21186s
[t=0.35116s, 39412 KB] Initializing additive heuristic...
[t=0.353817s, 39412 KB] Initializing FF heuristic...
[t=0.353845s, 39412 KB] Building successor generator...done!
[t=0.362832s, 39412 KB] peak memory difference for successor generator creation: 0 KB
[t=0.362938s, 39412 KB] time for successor generation creation: 0.00805465s
[t=0.362963s, 39412 KB] Variables: 85
[t=0.363505s, 39412 KB] FactPairs: 1010
[t=0.363529s, 39412 KB] Bytes per state: 28
[t=0.363552s, 39412 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.365869s, 39412 KB] New best heuristic value for ff(): 51
[t=0.36613s, 39412 KB] g=0, 1 evaluated, 0 expanded
[t=0.366157s, 39412 KB] Initial heuristic value for ff(): 51
[t=0.366192s, 39412 KB] pruning method: none
[t=0.366216s, 39412 KB] Start Timestep: 1687913016008 millisecond(s).
[t=0.377796s, 39412 KB] New best heuristic value for ff(): 45
[t=0.381279s, 39412 KB] g=1, 13 evaluated, 1 expanded
[t=0.389757s, 39412 KB] New best heuristic value for ff(): 44
[t=0.389933s, 39412 KB] g=1, 20 evaluated, 1 expanded
[t=2.55695s, 39412 KB] New best heuristic value for ff(): 43
[t=2.56022s, 39412 KB] g=3, 1776 evaluated, 104 expanded
[t=3.87209s, 39412 KB] New best heuristic value for ff(): 42
[t=3.87614s, 39412 KB] g=5, 2838 evaluated, 166 expanded
[t=7.15441s, 39412 KB] New best heuristic value for ff(): 41
[t=7.1558s, 39412 KB] g=12, 5482 evaluated, 319 expanded
[t=7.2983s, 39412 KB] New best heuristic value for ff(): 40
[t=7.30065s, 39412 KB] g=14, 5599 evaluated, 325 expanded
[t=7.40621s, 39412 KB] New best heuristic value for ff(): 38
[t=7.40694s, 39412 KB] g=16, 5685 evaluated, 329 expanded
[t=7.466s, 39412 KB] New best heuristic value for ff(): 36
[t=7.46852s, 39412 KB] g=17, 5735 evaluated, 331 expanded
[t=7.60585s, 39412 KB] New best heuristic value for ff(): 35
[t=7.60678s, 39412 KB] g=19, 5847 evaluated, 337 expanded
[t=7.60681s, 39412 KB] New best heuristic value for ff(): 34
[t=7.60928s, 39412 KB] g=19, 5849 evaluated, 337 expanded
[t=7.66575s, 39412 KB] New best heuristic value for ff(): 33
[t=7.66643s, 39412 KB] g=20, 5896 evaluated, 339 expanded
[t=7.71367s, 39412 KB] New best heuristic value for ff(): 32
[t=7.71452s, 39412 KB] g=21, 5935 evaluated, 341 expanded
[t=7.71454s, 39412 KB] New best heuristic value for ff(): 31
[t=7.71583s, 39412 KB] g=21, 5936 evaluated, 341 expanded
[t=7.77358s, 39412 KB] New best heuristic value for ff(): 30
[t=7.77579s, 39412 KB] g=22, 5985 evaluated, 343 expanded
[t=7.82947s, 39412 KB] New best heuristic value for ff(): 29
[t=7.83059s, 39412 KB] g=23, 6030 evaluated, 345 expanded
[t=7.87741s, 39412 KB] New best heuristic value for ff(): 27
[t=7.87775s, 39412 KB] g=24, 6068 evaluated, 347 expanded
[t=7.93735s, 39412 KB] New best heuristic value for ff(): 26
[t=7.93962s, 39412 KB] g=25, 6119 evaluated, 349 expanded
[t=7.93965s, 39412 KB] New best heuristic value for ff(): 25
[t=7.94093s, 39412 KB] g=25, 6120 evaluated, 349 expanded
[t=7.99725s, 39412 KB] New best heuristic value for ff(): 23
[t=7.99805s, 39412 KB] g=26, 6167 evaluated, 351 expanded
[t=8.06114s, 39412 KB] New best heuristic value for ff(): 22
[t=8.06207s, 39412 KB] g=27, 6220 evaluated, 353 expanded
[t=8.27707s, 39412 KB] New best heuristic value for ff(): 21
[t=8.28046s, 39412 KB] g=29, 6401 evaluated, 361 expanded
[t=8.293s, 39412 KB] New best heuristic value for ff(): 20
[t=8.29363s, 39412 KB] g=29, 6412 evaluated, 361 expanded
[t=8.7167s, 39412 KB] New best heuristic value for ff(): 18
[t=8.71894s, 39412 KB] g=33, 6764 evaluated, 377 expanded
[t=8.85261s, 39412 KB] New best heuristic value for ff(): 17
[t=8.85371s, 39412 KB] g=35, 6875 evaluated, 382 expanded
[t=8.97644s, 39412 KB] New best heuristic value for ff(): 16
[t=8.97873s, 39412 KB] g=37, 6979 evaluated, 386 expanded
[t=9.02437s, 39412 KB] New best heuristic value for ff(): 15
[t=9.02454s, 39412 KB] g=38, 7017 evaluated, 388 expanded
[t=17.3264s, 39412 KB] New best heuristic value for ff(): 14
[t=17.3279s, 39412 KB] g=46, 13904 evaluated, 726 expanded
[t=17.4263s, 39412 KB] New best heuristic value for ff(): 13
[t=17.4278s, 39412 KB] g=47, 13987 evaluated, 730 expanded
[t=17.4278s, 39412 KB] New best heuristic value for ff(): 12
[t=17.4302s, 39412 KB] g=47, 13989 evaluated, 730 expanded
[t=24.7777s, 39412 KB] New best heuristic value for ff(): 11
[t=24.7805s, 39412 KB] g=58, 20077 evaluated, 1033 expanded
[t=24.8296s, 39412 KB] New best heuristic value for ff(): 10
[t=24.8314s, 39412 KB] g=59, 20119 evaluated, 1035 expanded
[t=24.8375s, 39412 KB] New best heuristic value for ff(): 9
[t=24.841s, 39412 KB] g=59, 20127 evaluated, 1035 expanded
[t=26.6848s, 39412 KB] New best heuristic value for ff(): 8
[t=26.6886s, 39412 KB] g=64, 21672 evaluated, 1114 expanded
[t=26.7647s, 39412 KB] New best heuristic value for ff(): 7
[t=26.7687s, 39412 KB] g=65, 21740 evaluated, 1118 expanded
[t=26.7687s, 39412 KB] New best heuristic value for ff(): 6
[t=26.7708s, 39412 KB] g=65, 21742 evaluated, 1118 expanded
[t=32.1347s, 39412 KB] New best heuristic value for ff(): 5
[t=32.1381s, 39412 KB] g=68, 26331 evaluated, 1340 expanded
[t=32.1506s, 39412 KB] New best heuristic value for ff(): 4
[t=32.1526s, 39412 KB] g=68, 26344 evaluated, 1340 expanded
[t=32.1985s, 39412 KB] New best heuristic value for ff(): 3
[t=32.2012s, 39412 KB] g=69, 26387 evaluated, 1342 expanded
[t=32.2465s, 39412 KB] New best heuristic value for ff(): 2
[t=32.247s, 39412 KB] g=70, 26427 evaluated, 1344 expanded
[t=32.2944s, 39412 KB] New best heuristic value for ff(): 1
[t=32.2947s, 39412 KB] g=71, 26470 evaluated, 1346 expanded
[t=32.3344s, 39412 KB] New best heuristic value for ff(): 0
[t=32.335s, 39412 KB] g=72, 26507 evaluated, 1348 expanded
[t=32.3783s, 39412 KB] Solution found!
[t=32.3791s, 39412 KB] Actual search time: 32.0128s
move-curb-to-car car_07 curb_12 car_23 (1)
move-car-to-curb car_01 car_18 curb_12 (1)
move-curb-to-car car_18 curb_01 car_01 (1)
move-car-to-curb car_05 car_19 curb_01 (1)
move-curb-to-car car_19 curb_10 car_05 (1)
move-car-to-curb car_04 car_20 curb_10 (1)
move-car-to-car car_12 car_02 car_04 (1)
move-car-to-car car_22 car_00 car_02 (1)
move-curb-to-car car_20 curb_09 car_00 (1)
move-car-to-curb car_09 car_11 curb_09 (1)
move-car-to-car car_22 car_02 car_09 (1)
move-curb-to-car car_11 curb_05 car_02 (1)
move-car-to-curb car_10 car_17 curb_05 (1)
move-curb-to-car car_17 curb_07 car_10 (1)
move-car-to-curb car_07 car_23 curb_07 (1)
move-car-to-car car_20 car_00 car_07 (1)
move-curb-to-car car_00 curb_06 car_23 (1)
move-car-to-curb car_06 car_13 curb_06 (1)
move-curb-to-car car_13 curb_03 car_06 (1)
move-car-to-curb car_03 car_15 curb_03 (1)
move-car-to-car car_16 car_14 car_03 (1)
move-curb-to-car car_15 curb_00 car_14 (1)
move-car-to-curb car_00 car_23 curb_00 (1)
move-car-to-car car_13 car_06 car_00 (1)
move-car-to-car car_19 car_05 car_06 (1)
move-car-to-car car_18 car_01 car_05 (1)
move-car-to-car car_11 car_02 car_23 (1)
move-car-to-car car_15 car_14 car_02 (1)
move-car-to-car car_12 car_04 car_14 (1)
move-car-to-car car_17 car_10 car_04 (1)
move-curb-to-car car_01 curb_12 car_10 (1)
move-car-to-curb car_12 car_14 curb_12 (1)
move-curb-to-car car_14 curb_08 car_12 (1)
move-car-to-curb car_01 car_10 curb_08 (1)
move-car-to-car car_14 car_12 car_01 (1)
move-car-to-car car_11 car_23 car_12 (1)
move-curb-to-car car_23 curb_11 car_10 (1)
move-car-to-curb car_11 car_12 curb_11 (1)
move-car-to-car car_21 car_08 car_11 (1)
move-car-to-car car_17 car_04 car_12 (1)
move-curb-to-car car_04 curb_10 car_08 (1)
move-car-to-curb car_14 car_01 curb_10 (1)
move-car-to-car car_04 car_08 car_14 (1)
move-curb-to-car car_08 curb_04 car_01 (1)
move-car-to-curb car_04 car_14 curb_04 (1)
move-car-to-car car_17 car_12 car_04 (1)
move-curb-to-car car_14 curb_10 car_12 (1)
move-car-to-curb car_08 car_01 curb_10 (1)
move-car-to-car car_14 car_12 car_01 (1)
move-car-to-car car_21 car_11 car_08 (1)
move-car-to-car car_23 car_10 car_11 (1)
move-car-to-car car_18 car_05 car_12 (1)
move-curb-to-car car_05 curb_01 car_10 (1)
move-car-to-curb car_21 car_08 curb_01 (1)
move-car-to-car car_05 car_10 car_21 (1)
move-curb-to-car car_10 curb_05 car_08 (1)
move-car-to-curb car_05 car_21 curb_05 (1)
move-car-to-car car_18 car_12 car_05 (1)
move-curb-to-car car_21 curb_01 car_12 (1)
move-car-to-curb car_14 car_01 curb_01 (1)
move-car-to-car car_10 car_08 car_14 (1)
move-curb-to-car car_08 curb_10 car_01 (1)
move-car-to-curb car_10 car_14 curb_10 (1)
move-car-to-car car_23 car_11 car_10 (1)
move-car-to-car car_08 car_01 car_11 (1)
move-curb-to-car car_01 curb_08 car_14 (1)
move-car-to-curb car_08 car_11 curb_08 (1)
move-car-to-car car_01 car_14 car_11 (1)
move-car-to-car car_21 car_12 car_08 (1)
move-curb-to-car car_14 curb_01 car_12 (1)
move-car-to-curb car_01 car_11 curb_01 (1)
move-car-to-car car_14 car_12 car_01 (1)
[t=32.3792s, 39412 KB] Plan length: 72 step(s).
[t=32.3792s, 39412 KB] Plan cost: 72
[t=32.3792s, 39412 KB] Timestamp: 1687913048067 millisecond(s).
[t=32.3792s, 39412 KB] Expanded 1350 state(s).
[t=32.3792s, 39412 KB] Reopened 0 state(s).
[t=32.3792s, 39412 KB] Evaluated 26553 state(s).
[t=32.3792s, 39412 KB] Evaluations: 26553
[t=32.3792s, 39412 KB] Generated 30300 state(s).
[t=32.3792s, 39412 KB] Dead ends: 2016 state(s).
[t=32.3792s, 39412 KB] Number of registered states: 26553
[t=32.3792s, 39412 KB] Int hash set load factor: 26553/32768 = 0.810333
[t=32.3792s, 39412 KB] Int hash set resizes: 15
[t=32.3792s, 39412 KB] Search time: 32.0156s
[t=32.3792s, 39412 KB] Total time: 32.3792s
Solution found.
Peak memory: 39412 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 72 

Successful plans:
Value: 72
 sas_plan 72 

validate exit code: 0

INFO     Planner time: 36.94s
