INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.180s CPU, 0.181s wall-clock]
26339 relevant atoms
3192 auxiliary atoms
29531 final queue length
85444 total queue pushes
Completing instantiation... [1.050s CPU, 1.067s wall-clock]
Instantiating: [1.250s CPU, 1.260s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
56 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.038s wall-clock]
Translating task: [1.120s CPU, 1.139s wall-clock]
29766 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
22 propositions removed
Detecting unreachable propositions: [0.660s CPU, 0.651s wall-clock]
Reordering and filtering variables...
78 of 78 variables necessary.
34 of 56 mutex groups necessary.
23958 of 23958 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.140s CPU, 0.157s wall-clock]
Translator variables: 78
Translator derived variables: 0
Translator facts: 860
Translator goal facts: 22
Translator mutex groups: 34
Translator total mutex groups size: 782
Translator operators: 23958
Translator axioms: 0
Translator task size: 195584
Translator peak memory: 148996 KB
Writing output... [0.150s CPU, 0.150s wall-clock]
Done! [3.390s CPU, 3.422s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 296s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(alt([type_based([h, g()], random_seed=-1), single(h)]))' --internal-plan-file sas_plan < output.sas
[t=0.00105214s, 11364 KB] reading input...
[t=0.102986s, 20468 KB] done reading input!
[t=0.11644s, 26232 KB] Simplifying 83226 unary operators... done! [83226 unary operators]
[t=0.324419s, 33404 KB] time to simplify: 0.20798s
[t=0.326464s, 33404 KB] Initializing additive heuristic...
[t=0.327616s, 33404 KB] Initializing FF heuristic...
[t=0.32765s, 33404 KB] Building successor generator...done!
[t=0.334439s, 33404 KB] peak memory difference for successor generator creation: 0 KB
[t=0.334559s, 33404 KB] time for successor generation creation: 0.00599096s
[t=0.334722s, 33404 KB] Variables: 78
[t=0.335082s, 33404 KB] FactPairs: 860
[t=0.335107s, 33404 KB] Bytes per state: 24
[t=0.33513s, 33404 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.336771s, 33404 KB] New best heuristic value for ff(): 42
[t=0.337328s, 33404 KB] g=0, 1 evaluated, 0 expanded
[t=0.337355s, 33404 KB] Initial heuristic value for ff(): 42
[t=0.337385s, 33404 KB] pruning method: none
[t=0.337413s, 33404 KB] Start Timestep: 1687924859857 millisecond(s).
[t=0.362992s, 33404 KB] New best heuristic value for ff(): 41
[t=0.363107s, 33404 KB] g=2, 28 evaluated, 2 expanded
[t=0.388178s, 33404 KB] New best heuristic value for ff(): 40
[t=0.388588s, 33404 KB] g=3, 55 evaluated, 4 expanded
[t=0.550972s, 33404 KB] New best heuristic value for ff(): 39
[t=0.551819s, 33404 KB] g=8, 223 evaluated, 15 expanded
[t=0.602403s, 33404 KB] New best heuristic value for ff(): 38
[t=0.602676s, 33404 KB] g=10, 277 evaluated, 18 expanded
[t=0.801067s, 33404 KB] New best heuristic value for ff(): 37
[t=0.801341s, 33404 KB] g=13, 489 evaluated, 29 expanded
[t=0.876704s, 33404 KB] New best heuristic value for ff(): 36
[t=0.877315s, 33404 KB] g=15, 570 evaluated, 33 expanded
[t=0.940687s, 33404 KB] New best heuristic value for ff(): 35
[t=0.940853s, 33404 KB] g=16, 638 evaluated, 37 expanded
[t=0.950043s, 33404 KB] New best heuristic value for ff(): 34
[t=0.950323s, 33404 KB] g=16, 648 evaluated, 37 expanded
[t=1.01305s, 33404 KB] New best heuristic value for ff(): 33
[t=1.01412s, 33404 KB] g=17, 716 evaluated, 41 expanded
[t=1.01965s, 33404 KB] New best heuristic value for ff(): 31
[t=1.01989s, 33404 KB] g=17, 722 evaluated, 41 expanded
[t=1.47082s, 33404 KB] New best heuristic value for ff(): 30
[t=1.47115s, 33404 KB] g=21, 1208 evaluated, 68 expanded
[t=1.52174s, 33404 KB] New best heuristic value for ff(): 29
[t=1.52195s, 33404 KB] g=22, 1263 evaluated, 70 expanded
[t=1.66889s, 33404 KB] New best heuristic value for ff(): 28
[t=1.6692s, 33404 KB] g=23, 1422 evaluated, 78 expanded
[t=2.4916s, 33404 KB] New best heuristic value for ff(): 27
[t=2.49177s, 33404 KB] g=24, 2307 evaluated, 124 expanded
[t=2.53883s, 33404 KB] New best heuristic value for ff(): 26
[t=2.53948s, 33404 KB] g=25, 2359 evaluated, 126 expanded
[t=2.70705s, 33404 KB] New best heuristic value for ff(): 25
[t=2.70746s, 33404 KB] g=27, 2543 evaluated, 135 expanded
[t=4.62235s, 33404 KB] New best heuristic value for ff(): 24
[t=4.62302s, 33404 KB] g=31, 4644 evaluated, 236 expanded
[t=4.6239s, 33404 KB] New best heuristic value for ff(): 23
[t=4.62402s, 33404 KB] g=31, 4645 evaluated, 236 expanded
[t=4.68954s, 33404 KB] New best heuristic value for ff(): 22
[t=4.69034s, 33404 KB] g=33, 4717 evaluated, 240 expanded
[t=11.1279s, 33404 KB] New best heuristic value for ff(): 21
[t=11.1288s, 33404 KB] g=37, 11803 evaluated, 595 expanded
[t=11.1635s, 33404 KB] New best heuristic value for ff(): 20
[t=11.1639s, 33404 KB] g=38, 11841 evaluated, 597 expanded
[t=11.1971s, 33404 KB] New best heuristic value for ff(): 19
[t=11.1977s, 33404 KB] g=39, 11878 evaluated, 599 expanded
[t=11.2318s, 33404 KB] New best heuristic value for ff(): 18
[t=11.2327s, 33404 KB] g=40, 11917 evaluated, 601 expanded
[t=22.5901s, 33404 KB] New best heuristic value for ff(): 17
[t=22.5903s, 33404 KB] g=44, 24495 evaluated, 1309 expanded
[t=74.7816s, 33672 KB] New best heuristic value for ff(): 16
[t=74.7822s, 33672 KB] g=47, 81071 evaluated, 4448 expanded
[t=74.8667s, 33672 KB] New best heuristic value for ff(): 15
[t=74.8679s, 33672 KB] g=50, 81162 evaluated, 4454 expanded
[t=74.9371s, 33672 KB] New best heuristic value for ff(): 14
[t=74.9378s, 33672 KB] g=51, 81237 evaluated, 4458 expanded
[t=74.938s, 33672 KB] New best heuristic value for ff(): 13
[t=74.9389s, 33672 KB] g=51, 81238 evaluated, 4458 expanded
[t=74.9927s, 33672 KB] New best heuristic value for ff(): 12
[t=74.993s, 33672 KB] g=53, 81297 evaluated, 4462 expanded
[t=82.95s, 34072 KB] New best heuristic value for ff(): 11
[t=82.9502s, 34072 KB] g=58, 89792 evaluated, 4931 expanded
[t=88.869s, 34468 KB] New best heuristic value for ff(): 10
[t=88.8702s, 34468 KB] g=59, 96102 evaluated, 5277 expanded
[t=88.9057s, 34468 KB] New best heuristic value for ff(): 9
[t=88.9063s, 34468 KB] g=60, 96140 evaluated, 5279 expanded
[t=90.2916s, 34468 KB] New best heuristic value for ff(): 8
[t=90.2923s, 34468 KB] g=63, 97624 evaluated, 5363 expanded
[t=90.2999s, 34468 KB] New best heuristic value for ff(): 7
[t=90.301s, 34468 KB] g=63, 97633 evaluated, 5363 expanded
[t=90.3619s, 34468 KB] New best heuristic value for ff(): 6
[t=90.3626s, 34468 KB] g=65, 97699 evaluated, 5367 expanded
[t=90.3923s, 34468 KB] New best heuristic value for ff(): 5
[t=90.3927s, 34468 KB] g=66, 97732 evaluated, 5369 expanded
[t=90.4301s, 34468 KB] New best heuristic value for ff(): 4
[t=90.4304s, 34468 KB] g=67, 97774 evaluated, 5371 expanded
[t=90.4542s, 34604 KB] New best heuristic value for ff(): 2
[t=90.4545s, 34604 KB] g=68, 97802 evaluated, 5373 expanded
[t=90.4929s, 34604 KB] New best heuristic value for ff(): 1
[t=90.4934s, 34604 KB] g=69, 97853 evaluated, 5375 expanded
[t=90.5076s, 34604 KB] New best heuristic value for ff(): 0
[t=90.5079s, 34604 KB] g=70, 97876 evaluated, 5376 expanded
[t=90.5352s, 34604 KB] Solution found!
[t=90.536s, 34604 KB] Actual search time: 90.1985s
move-car-to-curb car_09 car_07 curb_11 (1)
move-car-to-car car_03 car_19 car_09 (1)
move-curb-to-car car_19 curb_04 car_07 (1)
move-car-to-curb car_14 car_00 curb_04 (1)
move-car-to-car car_08 car_21 car_00 (1)
move-curb-to-car car_21 curb_03 car_14 (1)
move-car-to-curb car_03 car_09 curb_03 (1)
move-curb-to-car car_09 curb_11 car_03 (1)
move-car-to-curb car_06 car_10 curb_11 (1)
move-curb-to-car car_10 curb_08 car_06 (1)
move-car-to-curb car_09 car_03 curb_08 (1)
move-car-to-car car_21 car_14 car_09 (1)
move-curb-to-car car_14 curb_04 car_03 (1)
move-car-to-curb car_04 car_01 curb_04 (1)
move-car-to-car car_16 car_05 car_04 (1)
move-car-to-car car_17 car_20 car_05 (1)
move-curb-to-car car_20 curb_10 car_01 (1)
move-car-to-curb car_08 car_00 curb_10 (1)
move-car-to-car car_20 car_01 car_08 (1)
move-car-to-car car_12 car_15 car_00 (1)
move-car-to-car car_13 car_18 car_01 (1)
move-curb-to-car car_18 curb_00 car_15 (1)
move-car-to-curb car_02 car_11 curb_00 (1)
move-car-to-car car_14 car_03 car_02 (1)
move-car-to-car car_10 car_06 car_11 (1)
move-car-to-car car_18 car_15 car_06 (1)
move-curb-to-car car_15 curb_06 car_03 (1)
move-car-to-curb car_20 car_08 curb_06 (1)
move-curb-to-car car_08 curb_10 car_20 (1)
move-car-to-curb car_10 car_11 curb_10 (1)
move-curb-to-car car_11 curb_01 car_10 (1)
move-car-to-curb car_08 car_20 curb_01 (1)
move-curb-to-car car_20 curb_06 car_08 (1)
move-car-to-curb car_18 car_06 curb_06 (1)
move-car-to-car car_11 car_10 car_18 (1)
move-curb-to-car car_06 curb_11 car_10 (1)
move-car-to-curb car_11 car_18 curb_11 (1)
move-curb-to-car car_18 curb_06 car_11 (1)
move-car-to-curb car_06 car_10 curb_06 (1)
move-car-to-car car_18 car_11 car_06 (1)
move-car-to-car car_12 car_00 car_10 (1)
move-curb-to-car car_00 curb_09 car_11 (1)
move-car-to-curb car_12 car_10 curb_09 (1)
move-car-to-car car_14 car_02 car_10 (1)
move-curb-to-car car_02 curb_00 car_12 (1)
move-car-to-curb car_00 car_11 curb_00 (1)
move-car-to-car car_19 car_07 car_11 (1)
move-curb-to-car car_07 curb_02 car_00 (1)
move-car-to-curb car_02 car_12 curb_02 (1)
move-car-to-car car_14 car_10 car_02 (1)
move-curb-to-car car_12 curb_09 car_10 (1)
move-car-to-curb car_07 car_00 curb_09 (1)
move-car-to-car car_12 car_10 car_00 (1)
move-curb-to-car car_07 curb_09 car_10 (1)
move-car-to-curb car_13 car_01 curb_09 (1)
move-curb-to-car car_01 curb_07 car_13 (1)
move-car-to-curb car_07 car_10 curb_07 (1)
move-car-to-car car_01 car_13 car_10 (1)
move-car-to-car car_19 car_11 car_07 (1)
move-car-to-car car_20 car_08 car_11 (1)
move-curb-to-car car_08 curb_01 car_13 (1)
move-car-to-curb car_01 car_10 curb_01 (1)
move-car-to-car car_21 car_09 car_10 (1)
move-curb-to-car car_09 curb_08 car_01 (1)
move-car-to-curb car_08 car_13 curb_08 (1)
move-curb-to-car car_13 curb_09 car_08 (1)
move-car-to-curb car_09 car_01 curb_09 (1)
move-car-to-car car_13 car_08 car_01 (1)
move-car-to-car car_20 car_11 car_08 (1)
move-car-to-car car_21 car_10 car_09 (1)
[t=90.536s, 34604 KB] Plan length: 70 step(s).
[t=90.536s, 34604 KB] Plan cost: 70
[t=90.536s, 34604 KB] Timestamp: 1687924951051 millisecond(s).
[t=90.536s, 34604 KB] Expanded 5378 state(s).
[t=90.536s, 34604 KB] Reopened 0 state(s).
[t=90.536s, 34604 KB] Evaluated 97910 state(s).
[t=90.536s, 34604 KB] Evaluations: 97910
[t=90.536s, 34604 KB] Generated 116958 state(s).
[t=90.536s, 34604 KB] Dead ends: 8894 state(s).
[t=90.536s, 34604 KB] Number of registered states: 97910
[t=90.536s, 34604 KB] Int hash set load factor: 97910/131072 = 0.746994
[t=90.536s, 34604 KB] Int hash set resizes: 17
[t=90.536s, 34604 KB] Search time: 90.2009s
[t=90.536s, 34604 KB] Total time: 90.536s
Solution found.
Peak memory: 34604 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 70 

Successful plans:
Value: 70
 sas_plan 70 

validate exit code: 0

INFO     Planner time: 94.05s
