INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.210s CPU, 0.217s wall-clock]
33917 relevant atoms
3770 auxiliary atoms
37687 final queue length
109988 total queue pushes
Completing instantiation... [1.440s CPU, 1.445s wall-clock]
Instantiating: [1.660s CPU, 1.673s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.050s CPU, 0.047s wall-clock]
Translating task: [1.450s CPU, 1.453s wall-clock]
38592 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.850s CPU, 0.847s wall-clock]
Reordering and filtering variables...
85 of 85 variables necessary.
37 of 61 mutex groups necessary.
31104 of 31104 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.190s CPU, 0.196s wall-clock]
Translator variables: 85
Translator derived variables: 0
Translator facts: 1010
Translator goal facts: 24
Translator mutex groups: 37
Translator total mutex groups size: 925
Translator operators: 31104
Translator axioms: 0
Translator task size: 253756
Translator peak memory: 183220 KB
Writing output... [0.200s CPU, 0.192s wall-clock]
Done! [4.430s CPU, 4.441s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 295s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(alt([type_based([h, g()], random_seed=-1), single(h)]))' --internal-plan-file sas_plan < output.sas
[t=0.000551853s, 11364 KB] reading input...
[t=0.124406s, 23120 KB] done reading input!
[t=0.136356s, 29632 KB] Simplifying 107976 unary operators... done! [107976 unary operators]
[t=0.327999s, 39416 KB] time to simplify: 0.191643s
[t=0.331953s, 39416 KB] Initializing additive heuristic...
[t=0.333314s, 39416 KB] Initializing FF heuristic...
[t=0.333343s, 39416 KB] Building successor generator...done!
[t=0.342346s, 39416 KB] peak memory difference for successor generator creation: 0 KB
[t=0.342445s, 39416 KB] time for successor generation creation: 0.00642647s
[t=0.342471s, 39416 KB] Variables: 85
[t=0.343024s, 39416 KB] FactPairs: 1010
[t=0.343048s, 39416 KB] Bytes per state: 28
[t=0.343072s, 39416 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.343756s, 39416 KB] New best heuristic value for ff(): 50
[t=0.345677s, 39416 KB] g=0, 1 evaluated, 0 expanded
[t=0.345705s, 39416 KB] Initial heuristic value for ff(): 50
[t=0.345735s, 39416 KB] pruning method: none
[t=0.345759s, 39416 KB] Start Timestep: 1687903853178 millisecond(s).
[t=0.34962s, 39416 KB] New best heuristic value for ff(): 49
[t=0.3498s, 39416 KB] g=1, 4 evaluated, 1 expanded
[t=0.355606s, 39416 KB] New best heuristic value for ff(): 45
[t=0.35621s, 39416 KB] g=1, 9 evaluated, 1 expanded
[t=0.399523s, 39416 KB] New best heuristic value for ff(): 44
[t=0.400616s, 39416 KB] g=3, 44 evaluated, 3 expanded
[t=0.578988s, 39416 KB] New best heuristic value for ff(): 42
[t=0.583037s, 39416 KB] g=6, 188 evaluated, 11 expanded
[t=0.646902s, 39416 KB] New best heuristic value for ff(): 41
[t=0.647775s, 39416 KB] g=8, 239 evaluated, 14 expanded
[t=0.758635s, 39416 KB] New best heuristic value for ff(): 39
[t=0.760955s, 39416 KB] g=9, 328 evaluated, 18 expanded
[t=0.842495s, 39416 KB] New best heuristic value for ff(): 37
[t=0.843618s, 39416 KB] g=11, 393 evaluated, 21 expanded
[t=0.882329s, 39416 KB] New best heuristic value for ff(): 36
[t=0.884378s, 39416 KB] g=13, 425 evaluated, 23 expanded
[t=0.958166s, 39416 KB] New best heuristic value for ff(): 35
[t=0.958884s, 39416 KB] g=15, 484 evaluated, 26 expanded
[t=0.958912s, 39416 KB] New best heuristic value for ff(): 34
[t=0.961433s, 39416 KB] g=15, 486 evaluated, 26 expanded
[t=1.06192s, 39416 KB] New best heuristic value for ff(): 33
[t=1.06438s, 39416 KB] g=16, 568 evaluated, 30 expanded
[t=1.06586s, 39416 KB] New best heuristic value for ff(): 32
[t=1.06696s, 39416 KB] g=16, 570 evaluated, 30 expanded
[t=1.16781s, 39416 KB] New best heuristic value for ff(): 31
[t=1.16817s, 39416 KB] g=18, 651 evaluated, 34 expanded
[t=1.16966s, 39416 KB] New best heuristic value for ff(): 30
[t=1.17078s, 39416 KB] g=18, 653 evaluated, 34 expanded
[t=1.21362s, 39416 KB] New best heuristic value for ff(): 29
[t=1.21425s, 39416 KB] g=19, 688 evaluated, 36 expanded
[t=1.29347s, 39416 KB] New best heuristic value for ff(): 28
[t=1.29489s, 39416 KB] g=20, 753 evaluated, 38 expanded
[t=1.35734s, 39416 KB] New best heuristic value for ff(): 27
[t=1.35797s, 39416 KB] g=21, 804 evaluated, 41 expanded
[t=1.36129s, 39416 KB] New best heuristic value for ff(): 26
[t=1.36177s, 39416 KB] g=21, 807 evaluated, 41 expanded
[t=1.43711s, 39416 KB] New best heuristic value for ff(): 25
[t=1.44078s, 39416 KB] g=22, 871 evaluated, 43 expanded
[t=1.76385s, 39416 KB] New best heuristic value for ff(): 24
[t=1.76668s, 39416 KB] g=25, 1133 evaluated, 57 expanded
[t=1.91166s, 39416 KB] New best heuristic value for ff(): 22
[t=1.91291s, 39416 KB] g=26, 1251 evaluated, 63 expanded
[t=2.16327s, 39416 KB] New best heuristic value for ff(): 21
[t=2.16677s, 39416 KB] g=29, 1456 evaluated, 72 expanded
[t=2.22316s, 39416 KB] New best heuristic value for ff(): 20
[t=2.22677s, 39416 KB] g=30, 1505 evaluated, 74 expanded
[t=2.27499s, 39416 KB] New best heuristic value for ff(): 19
[t=2.27575s, 39416 KB] g=31, 1545 evaluated, 76 expanded
[t=2.28294s, 39416 KB] New best heuristic value for ff(): 18
[t=2.28565s, 39416 KB] g=31, 1553 evaluated, 76 expanded
[t=2.33087s, 39416 KB] New best heuristic value for ff(): 17
[t=2.33479s, 39416 KB] g=32, 1593 evaluated, 78 expanded
[t=2.53458s, 39416 KB] New best heuristic value for ff(): 16
[t=2.53609s, 39416 KB] g=35, 1758 evaluated, 86 expanded
[t=7.52207s, 39416 KB] New best heuristic value for ff(): 15
[t=7.52617s, 39416 KB] g=39, 5841 evaluated, 273 expanded
[t=7.57797s, 39416 KB] New best heuristic value for ff(): 14
[t=7.57925s, 39416 KB] g=40, 5884 evaluated, 275 expanded
[t=7.62584s, 39416 KB] New best heuristic value for ff(): 13
[t=7.62591s, 39416 KB] g=41, 5922 evaluated, 277 expanded
[t=7.67777s, 39416 KB] New best heuristic value for ff(): 12
[t=7.67966s, 39416 KB] g=42, 5966 evaluated, 279 expanded
[t=16.0827s, 39416 KB] New best heuristic value for ff(): 11
[t=16.0848s, 39416 KB] g=46, 12858 evaluated, 632 expanded
[t=32.3043s, 39416 KB] New best heuristic value for ff(): 10
[t=32.3059s, 39416 KB] g=51, 25702 evaluated, 1275 expanded
[t=32.3642s, 39416 KB] New best heuristic value for ff(): 9
[t=32.365s, 39416 KB] g=52, 25747 evaluated, 1277 expanded
[t=34.3806s, 39416 KB] New best heuristic value for ff(): 8
[t=34.3815s, 39416 KB] g=55, 27288 evaluated, 1357 expanded
[t=34.3925s, 39416 KB] New best heuristic value for ff(): 7
[t=34.3935s, 39416 KB] g=55, 27297 evaluated, 1357 expanded
[t=34.4483s, 39416 KB] New best heuristic value for ff(): 6
[t=34.4507s, 39416 KB] g=57, 27342 evaluated, 1360 expanded
[t=34.4921s, 39416 KB] New best heuristic value for ff(): 5
[t=34.4951s, 39416 KB] g=58, 27377 evaluated, 1362 expanded
[t=34.5359s, 39416 KB] New best heuristic value for ff(): 4
[t=34.5365s, 39416 KB] g=59, 27411 evaluated, 1364 expanded
[t=34.5366s, 39416 KB] New best heuristic value for ff(): 3
[t=34.5388s, 39416 KB] g=59, 27413 evaluated, 1364 expanded
[t=34.5918s, 39416 KB] New best heuristic value for ff(): 2
[t=34.5942s, 39416 KB] g=60, 27458 evaluated, 1366 expanded
[t=34.6356s, 39416 KB] New best heuristic value for ff(): 1
[t=34.6382s, 39416 KB] g=61, 27494 evaluated, 1368 expanded
[t=34.6954s, 39416 KB] New best heuristic value for ff(): 0
[t=34.6975s, 39416 KB] g=62, 27550 evaluated, 1370 expanded
[t=34.7353s, 39416 KB] Solution found!
[t=34.7365s, 39416 KB] Actual search time: 34.3907s
move-curb-to-car car_17 curb_12 car_10 (1)
move-car-to-curb car_19 car_01 curb_12 (1)
move-car-to-car car_13 car_11 car_01 (1)
move-curb-to-car car_11 curb_06 car_19 (1)
move-car-to-curb car_06 car_18 curb_06 (1)
move-curb-to-car car_18 curb_03 car_06 (1)
move-car-to-curb car_03 car_04 curb_03 (1)
move-car-to-car car_17 car_10 car_04 (1)
move-curb-to-car car_10 curb_11 car_03 (1)
move-car-to-curb car_11 car_19 curb_11 (1)
move-curb-to-car car_19 curb_12 car_11 (1)
move-car-to-curb car_08 car_14 curb_12 (1)
move-curb-to-car car_14 curb_05 car_08 (1)
move-car-to-curb car_05 car_16 curb_05 (1)
move-car-to-car car_18 car_06 car_05 (1)
move-curb-to-car car_16 curb_10 car_06 (1)
move-car-to-curb car_10 car_03 curb_10 (1)
move-car-to-car car_16 car_06 car_03 (1)
move-car-to-car car_14 car_08 car_06 (1)
move-car-to-car car_23 car_02 car_10 (1)
move-car-to-car car_15 car_12 car_02 (1)
move-car-to-car car_22 car_09 car_12 (1)
move-car-to-car car_13 car_01 car_08 (1)
move-car-to-car car_14 car_06 car_01 (1)
move-car-to-car car_20 car_00 car_06 (1)
move-car-to-car car_13 car_08 car_00 (1)
move-curb-to-car car_09 curb_07 car_08 (1)
move-car-to-curb car_07 car_21 curb_07 (1)
move-car-to-car car_20 car_06 car_07 (1)
move-car-to-car car_19 car_11 car_06 (1)
move-curb-to-car car_21 curb_01 car_11 (1)
move-car-to-curb car_09 car_08 curb_01 (1)
move-car-to-car car_22 car_12 car_09 (1)
move-car-to-car car_21 car_11 car_08 (1)
move-curb-to-car car_12 curb_08 car_11 (1)
move-car-to-curb car_21 car_08 curb_08 (1)
move-car-to-car car_12 car_11 car_21 (1)
move-curb-to-car car_08 curb_12 car_11 (1)
move-car-to-curb car_12 car_21 curb_12 (1)
move-curb-to-car car_21 curb_08 car_12 (1)
move-car-to-curb car_08 car_11 curb_08 (1)
move-car-to-car car_21 car_12 car_08 (1)
move-car-to-car car_17 car_04 car_11 (1)
move-curb-to-car car_04 curb_09 car_12 (1)
move-car-to-curb car_15 car_02 curb_09 (1)
move-car-to-car car_22 car_09 car_15 (1)
move-curb-to-car car_02 curb_04 car_09 (1)
move-car-to-curb car_04 car_12 curb_04 (1)
move-car-to-car car_02 car_09 car_12 (1)
move-car-to-car car_22 car_15 car_09 (1)
move-car-to-car car_17 car_11 car_04 (1)
move-car-to-car car_14 car_01 car_11 (1)
move-curb-to-car car_01 curb_02 car_15 (1)
move-car-to-curb car_02 car_12 curb_02 (1)
move-car-to-car car_22 car_09 car_12 (1)
move-curb-to-car car_09 curb_01 car_02 (1)
move-car-to-curb car_01 car_15 curb_01 (1)
move-car-to-car car_14 car_11 car_01 (1)
move-curb-to-car car_15 curb_09 car_11 (1)
move-car-to-curb car_09 car_02 curb_09 (1)
move-car-to-car car_15 car_11 car_02 (1)
move-car-to-car car_22 car_12 car_09 (1)
[t=34.7366s, 39416 KB] Plan length: 62 step(s).
[t=34.7366s, 39416 KB] Plan cost: 62
[t=34.7366s, 39416 KB] Timestamp: 1687903887639 millisecond(s).
[t=34.7366s, 39416 KB] Expanded 1372 state(s).
[t=34.7366s, 39416 KB] Reopened 0 state(s).
[t=34.7366s, 39416 KB] Evaluated 27586 state(s).
[t=34.7366s, 39416 KB] Evaluations: 27586
[t=34.7366s, 39416 KB] Generated 32132 state(s).
[t=34.7366s, 39416 KB] Dead ends: 2240 state(s).
[t=34.7366s, 39416 KB] Number of registered states: 27586
[t=34.7366s, 39416 KB] Int hash set load factor: 27586/32768 = 0.841858
[t=34.7366s, 39416 KB] Int hash set resizes: 15
[t=34.7366s, 39416 KB] Search time: 34.3935s
[t=34.7366s, 39416 KB] Total time: 34.7366s
Solution found.
Peak memory: 39416 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 62 

Successful plans:
Value: 62
 sas_plan 62 

validate exit code: 0

INFO     Planner time: 39.30s
