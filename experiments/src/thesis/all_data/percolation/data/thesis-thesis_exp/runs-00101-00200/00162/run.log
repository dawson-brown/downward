INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.220s CPU, 0.221s wall-clock]
33917 relevant atoms
3770 auxiliary atoms
37687 final queue length
109988 total queue pushes
Completing instantiation... [1.470s CPU, 1.469s wall-clock]
Instantiating: [1.690s CPU, 1.702s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.047s wall-clock]
Translating task: [1.460s CPU, 1.470s wall-clock]
38592 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.840s CPU, 0.848s wall-clock]
Reordering and filtering variables...
85 of 85 variables necessary.
37 of 61 mutex groups necessary.
31104 of 31104 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.200s CPU, 0.198s wall-clock]
Translator variables: 85
Translator derived variables: 0
Translator facts: 1010
Translator goal facts: 24
Translator mutex groups: 37
Translator total mutex groups size: 925
Translator operators: 31104
Translator axioms: 0
Translator task size: 253756
Translator peak memory: 183220 KB
Writing output... [0.190s CPU, 0.193s wall-clock]
Done! [4.460s CPU, 4.489s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 295s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(epsilon_greedy(h, epsilon=0.2))' --internal-plan-file sas_plan < output.sas
[t=0s, 11364 KB] reading input...
[t=0.123809s, 23120 KB] done reading input!
[t=0.135756s, 29628 KB] Simplifying 107976 unary operators... done! [107976 unary operators]
[t=0.379414s, 39412 KB] time to simplify: 0.243657s
[t=0.383368s, 39412 KB] Initializing additive heuristic...
[t=0.383763s, 39412 KB] Initializing FF heuristic...
[t=0.383791s, 39412 KB] Building successor generator...done!
[t=0.39283s, 39412 KB] peak memory difference for successor generator creation: 0 KB
[t=0.392943s, 39412 KB] time for successor generation creation: 0.00737166s
[t=0.392969s, 39412 KB] Variables: 85
[t=0.393554s, 39412 KB] FactPairs: 1010
[t=0.393578s, 39412 KB] Bytes per state: 28
[t=0.393602s, 39412 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.395117s, 39412 KB] New best heuristic value for ff(): 50
[t=0.396379s, 39412 KB] g=0, 1 evaluated, 0 expanded
[t=0.396406s, 39412 KB] Initial heuristic value for ff(): 50
[t=0.396433s, 39412 KB] pruning method: none
[t=0.396457s, 39412 KB] Start Timestep: 1687935132325 millisecond(s).
[t=0.399054s, 39412 KB] New best heuristic value for ff(): 49
[t=0.400488s, 39412 KB] g=1, 4 evaluated, 1 expanded
[t=0.404811s, 39412 KB] New best heuristic value for ff(): 45
[t=0.406646s, 39412 KB] g=1, 9 evaluated, 1 expanded
[t=0.502799s, 39412 KB] New best heuristic value for ff(): 44
[t=0.504472s, 39412 KB] g=4, 90 evaluated, 6 expanded
[t=0.610104s, 39412 KB] New best heuristic value for ff(): 43
[t=0.613391s, 39412 KB] g=5, 180 evaluated, 12 expanded
[t=0.721969s, 39412 KB] New best heuristic value for ff(): 41
[t=0.722358s, 39412 KB] g=7, 270 evaluated, 18 expanded
[t=0.761853s, 39412 KB] New best heuristic value for ff(): 39
[t=0.765872s, 39412 KB] g=9, 306 evaluated, 20 expanded
[t=0.809711s, 39412 KB] New best heuristic value for ff(): 38
[t=0.810665s, 39412 KB] g=11, 343 evaluated, 22 expanded
[t=0.877638s, 39412 KB] New best heuristic value for ff(): 37
[t=0.879319s, 39412 KB] g=12, 400 evaluated, 25 expanded
[t=0.949475s, 39412 KB] New best heuristic value for ff(): 36
[t=0.951573s, 39412 KB] g=14, 460 evaluated, 28 expanded
[t=0.953417s, 39412 KB] New best heuristic value for ff(): 34
[t=0.956472s, 39412 KB] g=14, 464 evaluated, 28 expanded
[t=0.989266s, 39412 KB] New best heuristic value for ff(): 33
[t=0.99116s, 39412 KB] g=15, 493 evaluated, 29 expanded
[t=1.5248s, 39412 KB] New best heuristic value for ff(): 32
[t=1.52605s, 39412 KB] g=17, 941 evaluated, 51 expanded
[t=2.9712s, 39412 KB] New best heuristic value for ff(): 31
[t=2.97462s, 39412 KB] g=20, 2155 evaluated, 112 expanded
[t=2.99507s, 39412 KB] New best heuristic value for ff(): 30
[t=2.99612s, 39412 KB] g=21, 2173 evaluated, 113 expanded
[t=2.99615s, 39412 KB] New best heuristic value for ff(): 29
[t=2.9986s, 39412 KB] g=21, 2175 evaluated, 113 expanded
[t=3.02289s, 39412 KB] New best heuristic value for ff(): 28
[t=3.02476s, 39412 KB] g=22, 2197 evaluated, 114 expanded
[t=3.09081s, 39412 KB] New best heuristic value for ff(): 27
[t=3.09433s, 39412 KB] g=23, 2256 evaluated, 116 expanded
[t=3.17469s, 39412 KB] New best heuristic value for ff(): 26
[t=3.17561s, 39412 KB] g=25, 2324 evaluated, 119 expanded
[t=3.20655s, 39412 KB] New best heuristic value for ff(): 24
[t=3.20788s, 39412 KB] g=27, 2351 evaluated, 121 expanded
[t=3.23447s, 39412 KB] New best heuristic value for ff(): 23
[t=3.23647s, 39412 KB] g=28, 2375 evaluated, 122 expanded
[t=3.29832s, 39412 KB] New best heuristic value for ff(): 22
[t=3.30048s, 39412 KB] g=29, 2429 evaluated, 124 expanded
[t=3.86898s, 39412 KB] New best heuristic value for ff(): 21
[t=3.87179s, 39412 KB] g=31, 2916 evaluated, 146 expanded
[t=3.88088s, 39412 KB] New best heuristic value for ff(): 20
[t=3.88469s, 39412 KB] g=32, 2927 evaluated, 147 expanded
[t=4.19236s, 39412 KB] New best heuristic value for ff(): 19
[t=4.19577s, 39412 KB] g=34, 3194 evaluated, 159 expanded
[t=5.08293s, 39412 KB] New best heuristic value for ff(): 18
[t=5.08422s, 39412 KB] g=39, 3957 evaluated, 193 expanded
[t=5.09486s, 39412 KB] New best heuristic value for ff(): 17
[t=5.09611s, 39412 KB] g=39, 3967 evaluated, 193 expanded
[t=5.21067s, 39412 KB] New best heuristic value for ff(): 16
[t=5.2109s, 39412 KB] g=42, 4065 evaluated, 198 expanded
[t=8.0196s, 39412 KB] New best heuristic value for ff(): 15
[t=8.02067s, 39412 KB] g=47, 6476 evaluated, 310 expanded
[t=11.9727s, 39412 KB] New best heuristic value for ff(): 14
[t=11.9759s, 39412 KB] g=50, 9877 evaluated, 490 expanded
[t=12.0006s, 39412 KB] New best heuristic value for ff(): 12
[t=12.0019s, 39412 KB] g=51, 9899 evaluated, 491 expanded
[t=13.927s, 39412 KB] New best heuristic value for ff(): 11
[t=13.9305s, 39412 KB] g=53, 11567 evaluated, 582 expanded
[t=24.6567s, 39412 KB] New best heuristic value for ff(): 10
[t=24.6589s, 39412 KB] g=56, 21007 evaluated, 1079 expanded
[t=24.7046s, 39412 KB] New best heuristic value for ff(): 9
[t=24.7066s, 39412 KB] g=57, 21049 evaluated, 1081 expanded
[t=25.8155s, 39412 KB] New best heuristic value for ff(): 8
[t=25.817s, 39412 KB] g=60, 22026 evaluated, 1134 expanded
[t=25.8315s, 39412 KB] New best heuristic value for ff(): 6
[t=25.835s, 39412 KB] g=61, 22042 evaluated, 1135 expanded
[t=29.0924s, 39412 KB] New best heuristic value for ff(): 5
[t=29.0942s, 39412 KB] g=65, 25019 evaluated, 1289 expanded
[t=29.1043s, 39412 KB] New best heuristic value for ff(): 4
[t=29.108s, 39412 KB] g=65, 25032 evaluated, 1289 expanded
[t=29.1203s, 39412 KB] New best heuristic value for ff(): 3
[t=29.1216s, 39412 KB] g=66, 25045 evaluated, 1290 expanded
[t=29.1442s, 39412 KB] New best heuristic value for ff(): 2
[t=29.146s, 39412 KB] g=67, 25069 evaluated, 1291 expanded
[t=29.1642s, 39412 KB] New best heuristic value for ff(): 1
[t=29.1668s, 39412 KB] g=68, 25090 evaluated, 1292 expanded
[t=29.2161s, 39412 KB] New best heuristic value for ff(): 0
[t=29.2187s, 39412 KB] g=69, 25138 evaluated, 1295 expanded
[t=29.232s, 39412 KB] Solution found!
[t=29.234s, 39412 KB] Actual search time: 28.8375s
move-curb-to-car car_17 curb_12 car_10 (1)
move-car-to-curb car_03 car_04 curb_12 (1)
move-car-to-car car_17 car_10 car_04 (1)
move-car-to-car car_19 car_01 car_03 (1)
move-car-to-car car_23 car_02 car_10 (1)
move-car-to-car car_15 car_12 car_02 (1)
move-curb-to-car car_12 curb_08 car_01 (1)
move-car-to-curb car_08 car_14 curb_08 (1)
move-curb-to-car car_14 curb_05 car_08 (1)
move-car-to-curb car_05 car_16 curb_05 (1)
move-car-to-car car_13 car_11 car_16 (1)
move-curb-to-car car_11 curb_06 car_05 (1)
move-car-to-curb car_06 car_18 curb_06 (1)
move-car-to-car car_19 car_03 car_06 (1)
move-car-to-car car_22 car_09 car_18 (1)
move-car-to-car car_12 car_01 car_03 (1)
move-car-to-car car_14 car_08 car_01 (1)
move-curb-to-car car_09 curb_07 car_08 (1)
move-car-to-curb car_07 car_21 curb_07 (1)
move-car-to-car car_20 car_00 car_07 (1)
move-car-to-car car_13 car_16 car_00 (1)
move-car-to-car car_12 car_03 car_16 (1)
move-curb-to-car car_03 curb_12 car_21 (1)
move-car-to-curb car_09 car_08 curb_12 (1)
move-car-to-car car_22 car_18 car_09 (1)
move-curb-to-car car_18 curb_03 car_08 (1)
move-car-to-curb car_03 car_21 curb_03 (1)
move-car-to-car car_11 car_05 car_21 (1)
move-car-to-car car_18 car_08 car_05 (1)
move-car-to-car car_11 car_21 car_03 (1)
move-curb-to-car car_21 curb_01 car_08 (1)
move-car-to-curb car_11 car_03 curb_01 (1)
move-car-to-car car_12 car_16 car_11 (1)
move-curb-to-car car_16 curb_10 car_03 (1)
move-car-to-curb car_22 car_09 curb_10 (1)
move-car-to-car car_12 car_11 car_22 (1)
move-curb-to-car car_09 curb_12 car_11 (1)
move-car-to-curb car_12 car_22 curb_12 (1)
move-curb-to-car car_22 curb_10 car_12 (1)
move-car-to-curb car_09 car_11 curb_10 (1)
move-car-to-car car_22 car_12 car_09 (1)
move-curb-to-car car_11 curb_01 car_12 (1)
move-car-to-curb car_23 car_10 curb_01 (1)
move-car-to-car car_11 car_12 car_23 (1)
move-curb-to-car car_10 curb_11 car_12 (1)
move-car-to-curb car_11 car_23 curb_11 (1)
move-car-to-car car_22 car_09 car_11 (1)
move-curb-to-car car_09 curb_10 car_23 (1)
move-car-to-curb car_10 car_12 curb_10 (1)
move-car-to-car car_09 car_23 car_12 (1)
move-curb-to-car car_23 curb_01 car_10 (1)
move-car-to-curb car_17 car_04 curb_01 (1)
move-curb-to-car car_04 curb_09 car_17 (1)
move-car-to-curb car_09 car_12 curb_09 (1)
move-car-to-car car_04 car_17 car_12 (1)
move-car-to-car car_22 car_11 car_09 (1)
move-car-to-car car_15 car_02 car_11 (1)
move-curb-to-car car_02 curb_04 car_17 (1)
move-car-to-curb car_04 car_12 curb_04 (1)
move-car-to-car car_02 car_17 car_12 (1)
move-curb-to-car car_17 curb_01 car_04 (1)
move-car-to-curb car_14 car_01 curb_01 (1)
move-curb-to-car car_01 curb_02 car_14 (1)
move-car-to-curb car_02 car_12 curb_02 (1)
move-car-to-car car_01 car_14 car_12 (1)
move-car-to-car car_15 car_11 car_02 (1)
move-curb-to-car car_14 curb_01 car_11 (1)
move-car-to-curb car_01 car_12 curb_01 (1)
move-car-to-car car_14 car_11 car_01 (1)
[t=29.234s, 39412 KB] Plan length: 69 step(s).
[t=29.234s, 39412 KB] Plan cost: 69
[t=29.234s, 39412 KB] Timestamp: 1687935161236 millisecond(s).
[t=29.234s, 39412 KB] Expanded 1296 state(s).
[t=29.234s, 39412 KB] Reopened 0 state(s).
[t=29.234s, 39412 KB] Evaluated 25160 state(s).
[t=29.234s, 39412 KB] Evaluations: 25160
[t=29.234s, 39412 KB] Generated 29960 state(s).
[t=29.234s, 39412 KB] Dead ends: 2060 state(s).
[t=29.234s, 39412 KB] Number of registered states: 25160
[t=29.234s, 39412 KB] Int hash set load factor: 25160/32768 = 0.767822
[t=29.234s, 39412 KB] Int hash set resizes: 15
[t=29.234s, 39412 KB] Search time: 28.8404s
[t=29.234s, 39412 KB] Total time: 29.234s
Solution found.
Peak memory: 39412 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 69 

Successful plans:
Value: 69
 sas_plan 69 

validate exit code: 0

INFO     Planner time: 33.84s
