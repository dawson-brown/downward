INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.430s CPU, 0.442s wall-clock]
65075 relevant atoms
5792 auxiliary atoms
70867 final queue length
210833 total queue pushes
Completing instantiation... [2.950s CPU, 2.980s wall-clock]
Instantiating: [3.410s CPU, 3.446s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.005s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
76 uncovered facts
Choosing groups: [0.000s CPU, 0.004s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.030s CPU, 0.024s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.002s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.090s CPU, 0.096s wall-clock]
Translating task: [2.830s CPU, 2.851s wall-clock]
75150 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
30 propositions removed
Detecting unreachable propositions: [1.610s CPU, 1.631s wall-clock]
Reordering and filtering variables...
106 of 106 variables necessary.
46 of 76 mutex groups necessary.
60750 of 60750 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.390s CPU, 0.389s wall-clock]
Translator variables: 106
Translator derived variables: 0
Translator facts: 1532
Translator goal facts: 30
Translator mutex groups: 46
Translator total mutex groups size: 1426
Translator operators: 60750
Translator axioms: 0
Translator task size: 494944
Translator peak memory: 324964 KB
Writing output... [0.380s CPU, 0.383s wall-clock]
Done! [8.760s CPU, 8.847s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 291s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(epsilon_greedy(h, epsilon=0.2))' --internal-plan-file sas_plan < output.sas
[t=0.00105227s, 11364 KB] reading input...
[t=0.24371s, 34344 KB] done reading input!
[t=0.272086s, 46720 KB] Simplifying 210570 unary operators... done! [210570 unary operators]
[t=0.817405s, 65776 KB] time to simplify: 0.546372s
[t=0.824239s, 65776 KB] Initializing additive heuristic...
[t=0.824815s, 65776 KB] Initializing FF heuristic...
[t=0.824845s, 65776 KB] Building successor generator...done!
[t=0.843759s, 65776 KB] peak memory difference for successor generator creation: 0 KB
[t=0.843865s, 65776 KB] time for successor generation creation: 0.0186408s
[t=0.844575s, 65776 KB] Variables: 106
[t=0.845s, 65776 KB] FactPairs: 1532
[t=0.845024s, 65776 KB] Bytes per state: 32
[t=0.845048s, 65776 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.850821s, 65776 KB] New best heuristic value for ff(): 67
[t=0.851049s, 65776 KB] g=0, 1 evaluated, 0 expanded
[t=0.851078s, 65776 KB] Initial heuristic value for ff(): 67
[t=0.851107s, 65776 KB] pruning method: none
[t=0.851131s, 65776 KB] Start Timestep: 1687942893539 millisecond(s).
[t=0.853902s, 65776 KB] New best heuristic value for ff(): 60
[t=0.854466s, 65776 KB] g=1, 2 evaluated, 1 expanded
[t=1.0677s, 65776 KB] New best heuristic value for ff(): 58
[t=1.06799s, 65776 KB] g=2, 72 evaluated, 4 expanded
[t=1.25074s, 65776 KB] New best heuristic value for ff(): 56
[t=1.25128s, 65776 KB] g=4, 133 evaluated, 7 expanded
[t=1.36339s, 65776 KB] New best heuristic value for ff(): 54
[t=1.36419s, 65776 KB] g=6, 171 evaluated, 9 expanded
[t=1.51396s, 65776 KB] New best heuristic value for ff(): 53
[t=1.51423s, 65776 KB] g=8, 221 evaluated, 11 expanded
[t=1.85075s, 65776 KB] New best heuristic value for ff(): 51
[t=1.8516s, 65776 KB] g=11, 334 evaluated, 16 expanded
[t=2.43732s, 65776 KB] New best heuristic value for ff(): 50
[t=2.43833s, 65776 KB] g=15, 530 evaluated, 25 expanded
[t=2.94354s, 65776 KB] New best heuristic value for ff(): 49
[t=2.94437s, 65776 KB] g=18, 700 evaluated, 32 expanded
[t=6.80404s, 65776 KB] New best heuristic value for ff(): 48
[t=6.80665s, 65776 KB] g=23, 1995 evaluated, 87 expanded
[t=7.01167s, 65776 KB] New best heuristic value for ff(): 47
[t=7.01471s, 65776 KB] g=24, 2066 evaluated, 90 expanded
[t=7.06359s, 65776 KB] New best heuristic value for ff(): 46
[t=7.06644s, 65776 KB] g=25, 2084 evaluated, 91 expanded
[t=7.73488s, 65776 KB] New best heuristic value for ff(): 45
[t=7.7351s, 65776 KB] g=26, 2315 evaluated, 99 expanded
[t=7.79081s, 65776 KB] New best heuristic value for ff(): 44
[t=7.79133s, 65776 KB] g=26, 2334 evaluated, 99 expanded
[t=7.93863s, 65776 KB] New best heuristic value for ff(): 43
[t=7.93935s, 65776 KB] g=27, 2385 evaluated, 101 expanded
[t=8.04629s, 65776 KB] New best heuristic value for ff(): 42
[t=8.04944s, 65776 KB] g=28, 2421 evaluated, 103 expanded
[t=8.06622s, 65776 KB] New best heuristic value for ff(): 41
[t=8.06752s, 65776 KB] g=28, 2427 evaluated, 103 expanded
[t=8.13406s, 65776 KB] New best heuristic value for ff(): 39
[t=8.13602s, 65776 KB] g=29, 2450 evaluated, 104 expanded
[t=8.42197s, 65776 KB] New best heuristic value for ff(): 38
[t=8.42561s, 65776 KB] g=31, 2549 evaluated, 107 expanded
[t=8.46589s, 65776 KB] New best heuristic value for ff(): 37
[t=8.46621s, 65776 KB] g=32, 2563 evaluated, 108 expanded
[t=9.66862s, 65776 KB] New best heuristic value for ff(): 36
[t=9.67234s, 65776 KB] g=35, 2980 evaluated, 122 expanded
[t=9.77654s, 65776 KB] New best heuristic value for ff(): 35
[t=9.78003s, 65776 KB] g=36, 3018 evaluated, 124 expanded
[t=10.1084s, 65776 KB] New best heuristic value for ff(): 34
[t=10.1096s, 65776 KB] g=37, 3131 evaluated, 128 expanded
[t=10.2723s, 65776 KB] New best heuristic value for ff(): 33
[t=10.2752s, 65776 KB] g=38, 3189 evaluated, 130 expanded
[t=11.5589s, 65776 KB] New best heuristic value for ff(): 32
[t=11.5605s, 65776 KB] g=40, 3633 evaluated, 145 expanded
[t=12.1348s, 65776 KB] New best heuristic value for ff(): 31
[t=12.1363s, 65776 KB] g=41, 3834 evaluated, 152 expanded
[t=15.0531s, 65776 KB] New best heuristic value for ff(): 29
[t=15.056s, 65776 KB] g=45, 4854 evaluated, 188 expanded
[t=15.2728s, 65776 KB] New best heuristic value for ff(): 28
[t=15.2752s, 65776 KB] g=47, 4929 evaluated, 191 expanded
[t=15.4007s, 65776 KB] New best heuristic value for ff(): 26
[t=15.4037s, 65776 KB] g=48, 4974 evaluated, 193 expanded
[t=15.4845s, 65776 KB] New best heuristic value for ff(): 25
[t=15.4861s, 65776 KB] g=49, 5003 evaluated, 194 expanded
[t=38.9952s, 65776 KB] New best heuristic value for ff(): 24
[t=38.9974s, 65776 KB] g=54, 13310 evaluated, 491 expanded
[t=62.6494s, 65776 KB] New best heuristic value for ff(): 23
[t=62.6525s, 65776 KB] g=59, 21637 evaluated, 819 expanded
[t=87.5227s, 65776 KB] New best heuristic value for ff(): 22
[t=87.5231s, 65776 KB] g=57, 30347 evaluated, 1176 expanded
[t=87.6586s, 65776 KB] New best heuristic value for ff(): 21
[t=87.6622s, 65776 KB] g=60, 30396 evaluated, 1179 expanded
[t=87.7825s, 65776 KB] New best heuristic value for ff(): 20
[t=87.7861s, 65776 KB] g=61, 30440 evaluated, 1181 expanded
[t=87.7864s, 65776 KB] New best heuristic value for ff(): 19
[t=87.789s, 65776 KB] g=61, 30441 evaluated, 1181 expanded
[t=87.9783s, 65776 KB] New best heuristic value for ff(): 18
[t=87.9798s, 65776 KB] g=63, 30508 evaluated, 1185 expanded
[t=92.9344s, 65776 KB] New best heuristic value for ff(): 17
[t=92.9352s, 65776 KB] g=68, 32312 evaluated, 1257 expanded
[t=235.968s, 65776 KB] New best heuristic value for ff(): 16
[t=235.969s, 65776 KB] g=69, 88539 evaluated, 3602 expanded
[t=236.028s, 65776 KB] New best heuristic value for ff(): 15
[t=236.029s, 65776 KB] g=70, 88564 evaluated, 3603 expanded
[t=246.232s, 65776 KB] New best heuristic value for ff(): 14
[t=246.235s, 65776 KB] g=73, 92891 evaluated, 3784 expanded
[t=246.28s, 65776 KB] New best heuristic value for ff(): 12
[t=246.282s, 65776 KB] g=74, 92911 evaluated, 3785 expanded
[t=270.013s, 65776 KB] New best heuristic value for ff(): 11
[t=270.015s, 65776 KB] g=80, 103048 evaluated, 4204 expanded
[t=286.212s, 65776 KB] New best heuristic value for ff(): 10
[t=286.212s, 65776 KB] g=79, 109928 evaluated, 4494 expanded
[t=286.272s, 65776 KB] New best heuristic value for ff(): 9
[t=286.273s, 65776 KB] g=80, 109954 evaluated, 4495 expanded
[t=289.063s, 65776 KB] New best heuristic value for ff(): 8
[t=289.064s, 65776 KB] g=83, 111156 evaluated, 4547 expanded
[t=289.071s, 65776 KB] New best heuristic value for ff(): 7
[t=289.071s, 65776 KB] g=83, 111159 evaluated, 4547 expanded
[t=289.163s, 65776 KB] New best heuristic value for ff(): 6
[t=289.166s, 65776 KB] g=85, 111201 evaluated, 4549 expanded
[t=289.199s, 65776 KB] New best heuristic value for ff(): 5
[t=289.202s, 65776 KB] g=86, 111218 evaluated, 4550 expanded
[t=289.255s, 65776 KB] New best heuristic value for ff(): 4
[t=289.259s, 65776 KB] g=87, 111246 evaluated, 4551 expanded
[t=289.287s, 65776 KB] New best heuristic value for ff(): 2
[t=289.288s, 65776 KB] g=88, 111262 evaluated, 4552 expanded
[t=289.339s, 65776 KB] New best heuristic value for ff(): 1
[t=289.34s, 65776 KB] g=89, 111294 evaluated, 4553 expanded
[t=289.383s, 65776 KB] New best heuristic value for ff(): 0
[t=289.387s, 65776 KB] g=90, 111324 evaluated, 4554 expanded
[t=289.419s, 65776 KB] Solution found!
[t=289.423s, 65776 KB] Actual search time: 288.571s
move-car-to-car car_17 car_20 car_01 (1)
move-curb-to-car car_20 curb_06 car_00 (1)
move-car-to-curb car_06 car_27 curb_06 (1)
move-curb-to-car car_27 curb_10 car_06 (1)
move-car-to-curb car_10 car_15 curb_10 (1)
move-curb-to-car car_15 curb_09 car_10 (1)
move-car-to-curb car_09 car_22 curb_09 (1)
move-curb-to-car car_22 curb_00 car_09 (1)
move-car-to-curb car_12 car_03 curb_00 (1)
move-car-to-car car_28 car_14 car_12 (1)
move-curb-to-car car_14 curb_11 car_03 (1)
move-car-to-curb car_05 car_02 curb_11 (1)
move-car-to-car car_14 car_03 car_02 (1)
move-car-to-car car_21 car_25 car_05 (1)
move-curb-to-car car_25 curb_13 car_03 (1)
move-car-to-curb car_11 car_04 curb_13 (1)
move-car-to-car car_20 car_00 car_04 (1)
move-car-to-car car_15 car_10 car_00 (1)
move-car-to-car car_25 car_03 car_10 (1)
move-car-to-car car_13 car_07 car_03 (1)
move-curb-to-car car_11 curb_13 car_07 (1)
move-car-to-curb car_13 car_03 curb_13 (1)
move-car-to-car car_08 car_29 car_13 (1)
move-curb-to-car car_29 curb_08 car_03 (1)
move-car-to-curb car_08 car_13 curb_08 (1)
move-car-to-car car_29 car_03 car_13 (1)
move-car-to-car car_24 car_19 car_08 (1)
move-curb-to-car car_19 curb_12 car_03 (1)
move-car-to-curb car_11 car_07 curb_12 (1)
move-car-to-car car_22 car_09 car_11 (1)
move-car-to-car car_25 car_10 car_09 (1)
move-car-to-car car_22 car_11 car_07 (1)
move-car-to-car car_14 car_02 car_10 (1)
move-car-to-car car_27 car_06 car_11 (1)
move-car-to-car car_22 car_07 car_06 (1)
move-car-to-car car_18 car_23 car_02 (1)
move-curb-to-car car_23 curb_03 car_07 (1)
move-car-to-curb car_15 car_00 curb_03 (1)
move-car-to-car car_16 car_26 car_00 (1)
move-car-to-car car_14 car_10 car_15 (1)
move-curb-to-car car_26 curb_01 car_10 (1)
move-car-to-curb car_17 car_01 curb_01 (1)
move-curb-to-car car_01 curb_14 car_17 (1)
move-car-to-curb car_14 car_15 curb_14 (1)
move-car-to-car car_01 car_17 car_14 (1)
move-curb-to-car car_17 curb_01 car_15 (1)
move-car-to-curb car_01 car_14 curb_01 (1)
move-car-to-car car_17 car_15 car_01 (1)
move-curb-to-car car_15 curb_03 car_14 (1)
move-car-to-curb car_16 car_00 curb_03 (1)
move-car-to-car car_15 car_14 car_16 (1)
move-curb-to-car car_00 curb_15 car_14 (1)
move-car-to-curb car_15 car_16 curb_15 (1)
move-car-to-car car_28 car_12 car_15 (1)
move-curb-to-car car_12 curb_00 car_16 (1)
move-car-to-curb car_00 car_14 curb_00 (1)
move-car-to-car car_27 car_11 car_14 (1)
move-curb-to-car car_11 curb_12 car_00 (1)
move-car-to-curb car_12 car_16 curb_12 (1)
move-car-to-car car_28 car_15 car_12 (1)
move-curb-to-car car_16 curb_03 car_15 (1)
move-car-to-curb car_11 car_00 curb_03 (1)
move-car-to-car car_16 car_15 car_00 (1)
move-curb-to-car car_11 curb_03 car_15 (1)
move-car-to-curb car_21 car_05 curb_03 (1)
move-curb-to-car car_05 curb_11 car_21 (1)
move-car-to-curb car_11 car_15 curb_11 (1)
move-car-to-car car_05 car_21 car_15 (1)
move-car-to-car car_27 car_14 car_11 (1)
move-car-to-car car_23 car_07 car_14 (1)
move-curb-to-car car_07 curb_05 car_21 (1)
move-car-to-curb car_05 car_15 curb_05 (1)
move-car-to-car car_07 car_21 car_15 (1)
move-curb-to-car car_21 curb_03 car_05 (1)
move-car-to-curb car_18 car_02 curb_03 (1)
move-curb-to-car car_02 curb_07 car_18 (1)
move-car-to-curb car_07 car_15 curb_07 (1)
move-car-to-car car_02 car_18 car_15 (1)
move-car-to-car car_23 car_14 car_07 (1)
move-car-to-car car_20 car_04 car_14 (1)
move-curb-to-car car_04 curb_02 car_18 (1)
move-car-to-curb car_02 car_15 curb_02 (1)
move-car-to-car car_19 car_03 car_15 (1)
move-curb-to-car car_03 curb_04 car_02 (1)
move-car-to-curb car_04 car_18 curb_04 (1)
move-curb-to-car car_18 curb_03 car_04 (1)
move-car-to-curb car_03 car_02 curb_03 (1)
move-car-to-car car_18 car_04 car_02 (1)
move-car-to-car car_19 car_15 car_03 (1)
move-car-to-car car_20 car_14 car_04 (1)
[t=289.423s, 65776 KB] Plan length: 90 step(s).
[t=289.423s, 65776 KB] Plan cost: 90
[t=289.423s, 65776 KB] Timestamp: 1687943183235 millisecond(s).
[t=289.423s, 65776 KB] Expanded 4555 state(s).
[t=289.423s, 65776 KB] Reopened 0 state(s).
[t=289.423s, 65776 KB] Evaluated 111349 state(s).
[t=289.423s, 65776 KB] Evaluations: 111349
[t=289.423s, 65776 KB] Generated 132179 state(s).
[t=289.423s, 65776 KB] Dead ends: 7514 state(s).
[t=289.423s, 65776 KB] Number of registered states: 111349
[t=289.423s, 65776 KB] Int hash set load factor: 111349/131072 = 0.849525
[t=289.423s, 65776 KB] Int hash set resizes: 17
[t=289.423s, 65776 KB] Search time: 288.578s
[t=289.423s, 65776 KB] Total time: 289.423s
Solution found.
Peak memory: 65776 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 90 

Successful plans:
Value: 90
 sas_plan 90 

validate exit code: 0

INFO     Planner time: 298.36s
