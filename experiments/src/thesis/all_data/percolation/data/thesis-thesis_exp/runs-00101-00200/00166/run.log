INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.280s CPU, 0.271s wall-clock]
42827 relevant atoms
4396 auxiliary atoms
47223 final queue length
138834 total queue pushes
Completing instantiation... [1.840s CPU, 1.830s wall-clock]
Instantiating: [2.120s CPU, 2.115s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.018s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.058s wall-clock]
Translating task: [1.820s CPU, 1.823s wall-clock]
49010 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
26 propositions removed
Detecting unreachable propositions: [1.060s CPU, 1.058s wall-clock]
Reordering and filtering variables...
92 of 92 variables necessary.
40 of 66 mutex groups necessary.
39546 of 39546 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.250s CPU, 0.249s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 1172
Translator goal facts: 26
Translator mutex groups: 40
Translator total mutex groups size: 1080
Translator operators: 39546
Translator axioms: 0
Translator task size: 322456
Translator peak memory: 223472 KB
Writing output... [0.240s CPU, 0.242s wall-clock]
Done! [5.580s CPU, 5.584s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 294s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(epsilon_greedy(h, epsilon=0.2))' --internal-plan-file sas_plan < output.sas
[t=0s, 11364 KB] reading input...
[t=0.163926s, 26416 KB] done reading input!
[t=0.183849s, 33616 KB] Simplifying 137202 unary operators... done! [137202 unary operators]
[t=0.41941s, 46284 KB] time to simplify: 0.243562s
[t=0.427883s, 46284 KB] Initializing additive heuristic...
[t=0.431115s, 46284 KB] Initializing FF heuristic...
[t=0.431144s, 46284 KB] Building successor generator...done!
[t=0.442464s, 46284 KB] peak memory difference for successor generator creation: 0 KB
[t=0.442564s, 46284 KB] time for successor generation creation: 0.00801206s
[t=0.443207s, 46284 KB] Variables: 92
[t=0.443254s, 46284 KB] FactPairs: 1172
[t=0.443278s, 46284 KB] Bytes per state: 28
[t=0.443303s, 46284 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.44336s, 46284 KB] New best heuristic value for ff(): 48
[t=0.446445s, 46284 KB] g=0, 1 evaluated, 0 expanded
[t=0.44647s, 46284 KB] Initial heuristic value for ff(): 48
[t=0.446497s, 46284 KB] pruning method: none
[t=0.44652s, 46284 KB] Start Timestep: 1687904363143 millisecond(s).
[t=0.531036s, 46284 KB] New best heuristic value for ff(): 47
[t=0.531527s, 46284 KB] g=3, 54 evaluated, 4 expanded
[t=1.10271s, 46284 KB] New best heuristic value for ff(): 46
[t=1.10375s, 46284 KB] g=6, 412 evaluated, 24 expanded
[t=1.10665s, 46284 KB] New best heuristic value for ff(): 45
[t=1.10701s, 46284 KB] g=6, 414 evaluated, 24 expanded
[t=1.16258s, 46284 KB] New best heuristic value for ff(): 44
[t=1.16507s, 46284 KB] g=7, 450 evaluated, 26 expanded
[t=1.16653s, 46284 KB] New best heuristic value for ff(): 43
[t=1.16832s, 46284 KB] g=7, 452 evaluated, 26 expanded
[t=1.78591s, 46284 KB] New best heuristic value for ff(): 42
[t=1.78709s, 46284 KB] g=9, 839 evaluated, 47 expanded
[t=3.06916s, 46284 KB] New best heuristic value for ff(): 40
[t=3.0717s, 46284 KB] g=13, 1645 evaluated, 88 expanded
[t=4.42006s, 46284 KB] New best heuristic value for ff(): 39
[t=4.42026s, 46284 KB] g=20, 2494 evaluated, 132 expanded
[t=4.42799s, 46284 KB] New best heuristic value for ff(): 38
[t=4.43152s, 46284 KB] g=20, 2501 evaluated, 132 expanded
[t=4.43992s, 46284 KB] New best heuristic value for ff(): 36
[t=4.44259s, 46284 KB] g=21, 2508 evaluated, 133 expanded
[t=4.57981s, 46284 KB] New best heuristic value for ff(): 35
[t=4.58359s, 46284 KB] g=23, 2597 evaluated, 137 expanded
[t=4.61971s, 46284 KB] New best heuristic value for ff(): 34
[t=4.62169s, 46284 KB] g=24, 2621 evaluated, 138 expanded
[t=4.63963s, 46284 KB] New best heuristic value for ff(): 33
[t=4.64081s, 46284 KB] g=24, 2633 evaluated, 138 expanded
[t=4.66356s, 46284 KB] New best heuristic value for ff(): 32
[t=4.66426s, 46284 KB] g=25, 2648 evaluated, 139 expanded
[t=5.07942s, 46284 KB] New best heuristic value for ff(): 31
[t=5.08194s, 46284 KB] g=27, 2913 evaluated, 151 expanded
[t=5.27932s, 46284 KB] New best heuristic value for ff(): 30
[t=5.28096s, 46284 KB] g=29, 3041 evaluated, 156 expanded
[t=5.39124s, 46284 KB] New best heuristic value for ff(): 29
[t=5.39428s, 46284 KB] g=31, 3114 evaluated, 159 expanded
[t=5.53114s, 46284 KB] New best heuristic value for ff(): 28
[t=5.53262s, 46284 KB] g=32, 3203 evaluated, 163 expanded
[t=5.53508s, 46284 KB] New best heuristic value for ff(): 27
[t=5.53744s, 46284 KB] g=32, 3206 evaluated, 163 expanded
[t=6.05466s, 46284 KB] New best heuristic value for ff(): 25
[t=6.0557s, 46284 KB] g=36, 3540 evaluated, 178 expanded
[t=6.33052s, 46284 KB] New best heuristic value for ff(): 24
[t=6.33322s, 46284 KB] g=38, 3718 evaluated, 186 expanded
[t=6.6223s, 46284 KB] New best heuristic value for ff(): 23
[t=6.62353s, 46284 KB] g=40, 3904 evaluated, 194 expanded
[t=6.70622s, 46284 KB] New best heuristic value for ff(): 22
[t=6.7064s, 46284 KB] g=41, 3957 evaluated, 196 expanded
[t=8.4533s, 46284 KB] New best heuristic value for ff(): 21
[t=8.45545s, 46284 KB] g=44, 5089 evaluated, 241 expanded
[t=15.5094s, 46284 KB] New best heuristic value for ff(): 20
[t=15.5115s, 46284 KB] g=50, 9649 evaluated, 455 expanded
[t=22.7961s, 46284 KB] New best heuristic value for ff(): 19
[t=22.7984s, 46284 KB] g=47, 14404 evaluated, 686 expanded
[t=22.828s, 46284 KB] New best heuristic value for ff(): 17
[t=22.8294s, 46284 KB] g=48, 14424 evaluated, 687 expanded
[t=22.8558s, 46284 KB] New best heuristic value for ff(): 16
[t=22.8588s, 46284 KB] g=49, 14443 evaluated, 688 expanded
[t=22.8757s, 46284 KB] New best heuristic value for ff(): 15
[t=22.879s, 46284 KB] g=50, 14456 evaluated, 689 expanded
[t=33.7179s, 46284 KB] New best heuristic value for ff(): 14
[t=33.7186s, 46284 KB] g=54, 21560 evaluated, 1038 expanded
[t=35.0373s, 46284 KB] New best heuristic value for ff(): 13
[t=35.0409s, 46284 KB] g=59, 22431 evaluated, 1077 expanded
[t=35.0532s, 46284 KB] New best heuristic value for ff(): 12
[t=35.0545s, 46284 KB] g=59, 22440 evaluated, 1077 expanded
[t=40.0189s, 46284 KB] New best heuristic value for ff(): 11
[t=40.021s, 46284 KB] g=64, 25671 evaluated, 1237 expanded
[t=53.1955s, 46284 KB] New best heuristic value for ff(): 10
[t=53.1976s, 46284 KB] g=62, 34422 evaluated, 1655 expanded
[t=53.2274s, 46284 KB] New best heuristic value for ff(): 9
[t=53.2308s, 46284 KB] g=63, 34444 evaluated, 1656 expanded
[t=53.2674s, 46284 KB] New best heuristic value for ff(): 8
[t=53.2698s, 46284 KB] g=64, 34470 evaluated, 1657 expanded
[t=53.3233s, 46284 KB] New best heuristic value for ff(): 7
[t=53.325s, 46284 KB] g=65, 34507 evaluated, 1659 expanded
[t=53.3553s, 46284 KB] New best heuristic value for ff(): 6
[t=53.3579s, 46284 KB] g=66, 34529 evaluated, 1660 expanded
[t=60.4487s, 46284 KB] New best heuristic value for ff(): 5
[t=60.4527s, 46284 KB] g=73, 39424 evaluated, 1908 expanded
[t=60.4687s, 46284 KB] New best heuristic value for ff(): 4
[t=60.4721s, 46284 KB] g=73, 39438 evaluated, 1908 expanded
[t=60.4886s, 46284 KB] New best heuristic value for ff(): 2
[t=60.4914s, 46284 KB] g=74, 39452 evaluated, 1909 expanded
[t=60.5206s, 46284 KB] New best heuristic value for ff(): 1
[t=60.524s, 46284 KB] g=75, 39477 evaluated, 1910 expanded
[t=60.5805s, 46284 KB] New best heuristic value for ff(): 0
[t=60.5818s, 46284 KB] g=76, 39519 evaluated, 1912 expanded
[t=60.6404s, 46284 KB] Solution found!
[t=60.6431s, 46284 KB] Actual search time: 60.1966s
move-car-to-curb car_03 car_15 curb_13 (1)
move-car-to-car car_25 car_09 car_15 (1)
move-car-to-car car_06 car_04 car_09 (1)
move-curb-to-car car_04 curb_06 car_03 (1)
move-car-to-curb car_06 car_09 curb_06 (1)
move-car-to-car car_20 car_00 car_06 (1)
move-car-to-car car_04 car_03 car_00 (1)
move-car-to-car car_23 car_07 car_09 (1)
move-car-to-car car_18 car_21 car_03 (1)
move-car-to-car car_16 car_11 car_21 (1)
move-curb-to-car car_07 curb_08 car_11 (1)
move-car-to-curb car_08 car_13 curb_08 (1)
move-curb-to-car car_13 curb_12 car_08 (1)
move-car-to-curb car_07 car_11 curb_12 (1)
move-car-to-car car_04 car_00 car_07 (1)
move-car-to-car car_10 car_01 car_00 (1)
move-car-to-car car_04 car_07 car_01 (1)
move-curb-to-car car_11 curb_04 car_07 (1)
move-car-to-curb car_04 car_01 curb_04 (1)
move-car-to-car car_18 car_03 car_04 (1)
move-car-to-car car_22 car_24 car_01 (1)
move-curb-to-car car_24 curb_11 car_03 (1)
move-car-to-curb car_11 car_07 curb_11 (1)
move-car-to-car car_25 car_15 car_11 (1)
move-curb-to-car car_15 curb_02 car_07 (1)
move-car-to-curb car_10 car_00 curb_02 (1)
move-car-to-car car_15 car_07 car_00 (1)
move-car-to-car car_24 car_03 car_10 (1)
move-car-to-car car_13 car_08 car_03 (1)
move-car-to-car car_22 car_01 car_08 (1)
move-car-to-car car_15 car_00 car_01 (1)
move-car-to-car car_14 car_17 car_00 (1)
move-car-to-car car_13 car_03 car_17 (1)
move-curb-to-car car_03 curb_13 car_07 (1)
move-car-to-curb car_13 car_17 curb_13 (1)
move-curb-to-car car_17 curb_01 car_13 (1)
move-car-to-curb car_03 car_07 curb_01 (1)
move-car-to-car car_17 car_13 car_03 (1)
move-car-to-car car_12 car_02 car_13 (1)
move-car-to-car car_16 car_21 car_02 (1)
move-car-to-car car_12 car_13 car_21 (1)
move-curb-to-car car_07 curb_12 car_13 (1)
move-car-to-curb car_12 car_21 curb_12 (1)
move-car-to-car car_14 car_00 car_12 (1)
move-curb-to-car car_00 curb_07 car_21 (1)
move-car-to-curb car_07 car_13 curb_07 (1)
move-car-to-car car_00 car_21 car_13 (1)
move-curb-to-car car_21 curb_00 car_07 (1)
move-car-to-curb car_00 car_13 curb_00 (1)
move-car-to-car car_14 car_12 car_00 (1)
move-car-to-car car_16 car_02 car_12 (1)
move-car-to-car car_24 car_10 car_13 (1)
move-curb-to-car car_02 curb_09 car_10 (1)
move-car-to-curb car_23 car_09 curb_09 (1)
move-car-to-car car_02 car_10 car_23 (1)
move-curb-to-car car_10 curb_02 car_09 (1)
move-car-to-curb car_02 car_23 curb_02 (1)
move-car-to-car car_16 car_12 car_02 (1)
move-car-to-car car_10 car_09 car_12 (1)
move-curb-to-car car_09 curb_10 car_23 (1)
move-car-to-curb car_10 car_12 curb_10 (1)
move-car-to-car car_09 car_23 car_12 (1)
move-car-to-car car_24 car_13 car_10 (1)
move-curb-to-car car_23 curb_09 car_13 (1)
move-car-to-curb car_09 car_12 curb_09 (1)
move-car-to-car car_23 car_13 car_09 (1)
move-car-to-car car_15 car_01 car_12 (1)
move-curb-to-car car_01 curb_03 car_13 (1)
move-car-to-curb car_15 car_12 curb_03 (1)
move-car-to-car car_17 car_03 car_12 (1)
move-curb-to-car car_03 curb_01 car_15 (1)
move-car-to-curb car_01 car_13 curb_01 (1)
move-car-to-car car_03 car_15 car_13 (1)
move-curb-to-car car_15 curb_03 car_01 (1)
move-car-to-curb car_03 car_13 curb_03 (1)
move-car-to-car car_17 car_12 car_03 (1)
[t=60.6432s, 46284 KB] Plan length: 76 step(s).
[t=60.6432s, 46284 KB] Plan cost: 76
[t=60.6432s, 46284 KB] Timestamp: 1687904423377 millisecond(s).
[t=60.6432s, 46284 KB] Expanded 1914 state(s).
[t=60.6432s, 46284 KB] Reopened 0 state(s).
[t=60.6432s, 46284 KB] Evaluated 39567 state(s).
[t=60.6432s, 46284 KB] Evaluations: 39567
[t=60.6432s, 46284 KB] Generated 47174 state(s).
[t=60.6432s, 46284 KB] Dead ends: 2974 state(s).
[t=60.6432s, 46284 KB] Number of registered states: 39567
[t=60.6432s, 46284 KB] Int hash set load factor: 39567/65536 = 0.603745
[t=60.6432s, 46284 KB] Int hash set resizes: 16
[t=60.6432s, 46284 KB] Search time: 60.1999s
[t=60.6432s, 46284 KB] Total time: 60.6432s
Solution found.
Peak memory: 46284 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 76 

Successful plans:
Value: 76
 sas_plan 76 

validate exit code: 0

INFO     Planner time: 66.36s
