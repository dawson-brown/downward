INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.220s CPU, 0.222s wall-clock]
33917 relevant atoms
3770 auxiliary atoms
37687 final queue length
109988 total queue pushes
Completing instantiation... [1.410s CPU, 1.415s wall-clock]
Instantiating: [1.630s CPU, 1.648s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
61 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.047s wall-clock]
Translating task: [1.460s CPU, 1.474s wall-clock]
38592 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.830s CPU, 0.846s wall-clock]
Reordering and filtering variables...
85 of 85 variables necessary.
37 of 61 mutex groups necessary.
31104 of 31104 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.200s CPU, 0.204s wall-clock]
Translator variables: 85
Translator derived variables: 0
Translator facts: 1010
Translator goal facts: 24
Translator mutex groups: 37
Translator total mutex groups size: 925
Translator operators: 31104
Translator axioms: 0
Translator task size: 253756
Translator peak memory: 183204 KB
Writing output... [0.190s CPU, 0.194s wall-clock]
Done! [4.400s CPU, 4.445s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 295s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(epsilon_greedy(h, epsilon=0.2))' --internal-plan-file sas_plan < output.sas
[t=0.00105155s, 11364 KB] reading input...
[t=0.124s, 23120 KB] done reading input!
[t=0.137592s, 29628 KB] Simplifying 107976 unary operators... done! [107976 unary operators]
[t=0.297396s, 39412 KB] time to simplify: 0.159805s
[t=0.29944s, 39412 KB] Initializing additive heuristic...
[t=0.299618s, 39412 KB] Initializing FF heuristic...
[t=0.299648s, 39412 KB] Building successor generator...done!
[t=0.308357s, 39412 KB] peak memory difference for successor generator creation: 0 KB
[t=0.308438s, 39412 KB] time for successor generation creation: 0.00803477s
[t=0.308787s, 39412 KB] Variables: 85
[t=0.309014s, 39412 KB] FactPairs: 1010
[t=0.309038s, 39412 KB] Bytes per state: 28
[t=0.309061s, 39412 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.311125s, 39412 KB] New best heuristic value for ff(): 48
[t=0.311459s, 39412 KB] g=0, 1 evaluated, 0 expanded
[t=0.311486s, 39412 KB] Initial heuristic value for ff(): 48
[t=0.311513s, 39412 KB] pruning method: none
[t=0.311536s, 39412 KB] Start Timestep: 1687926977604 millisecond(s).
[t=0.320252s, 39412 KB] New best heuristic value for ff(): 46
[t=0.320435s, 39412 KB] g=1, 8 evaluated, 1 expanded
[t=0.437049s, 39412 KB] New best heuristic value for ff(): 45
[t=0.437443s, 39412 KB] g=2, 103 evaluated, 7 expanded
[t=0.473837s, 39412 KB] New best heuristic value for ff(): 44
[t=0.473904s, 39412 KB] g=4, 133 evaluated, 9 expanded
[t=0.493783s, 39412 KB] New best heuristic value for ff(): 43
[t=0.494529s, 39412 KB] g=4, 150 evaluated, 9 expanded
[t=0.600183s, 39412 KB] New best heuristic value for ff(): 42
[t=0.600841s, 39412 KB] g=7, 238 evaluated, 14 expanded
[t=0.608418s, 39412 KB] New best heuristic value for ff(): 41
[t=0.609389s, 39412 KB] g=7, 245 evaluated, 14 expanded
[t=0.630442s, 39412 KB] New best heuristic value for ff(): 40
[t=0.631149s, 39412 KB] g=8, 263 evaluated, 15 expanded
[t=0.659862s, 39412 KB] New best heuristic value for ff(): 39
[t=0.660021s, 39412 KB] g=9, 287 evaluated, 16 expanded
[t=0.664027s, 39412 KB] New best heuristic value for ff(): 37
[t=0.664909s, 39412 KB] g=9, 291 evaluated, 16 expanded
[t=0.746531s, 39412 KB] New best heuristic value for ff(): 36
[t=0.746852s, 39412 KB] g=11, 360 evaluated, 19 expanded
[t=0.915477s, 39412 KB] New best heuristic value for ff(): 35
[t=0.916377s, 39412 KB] g=13, 502 evaluated, 25 expanded
[t=0.92278s, 39412 KB] New best heuristic value for ff(): 34
[t=0.923661s, 39412 KB] g=13, 508 evaluated, 25 expanded
[t=0.944851s, 39412 KB] New best heuristic value for ff(): 33
[t=0.944995s, 39412 KB] g=14, 526 evaluated, 26 expanded
[t=1.02638s, 39412 KB] New best heuristic value for ff(): 32
[t=1.02734s, 39412 KB] g=16, 595 evaluated, 30 expanded
[t=1.08526s, 39412 KB] New best heuristic value for ff(): 31
[t=1.08634s, 39412 KB] g=17, 645 evaluated, 32 expanded
[t=1.14205s, 39412 KB] New best heuristic value for ff(): 30
[t=1.14291s, 39412 KB] g=18, 693 evaluated, 34 expanded
[t=1.19886s, 39412 KB] New best heuristic value for ff(): 29
[t=1.19944s, 39412 KB] g=19, 741 evaluated, 36 expanded
[t=1.20723s, 39412 KB] New best heuristic value for ff(): 28
[t=1.2078s, 39412 KB] g=19, 748 evaluated, 36 expanded
[t=1.2272s, 39412 KB] New best heuristic value for ff(): 27
[t=1.22777s, 39412 KB] g=20, 765 evaluated, 37 expanded
[t=1.43969s, 39412 KB] New best heuristic value for ff(): 26
[t=1.44017s, 39412 KB] g=21, 945 evaluated, 44 expanded
[t=1.60901s, 39412 KB] New best heuristic value for ff(): 24
[t=1.60934s, 39412 KB] g=23, 1089 evaluated, 51 expanded
[t=1.67631s, 39412 KB] New best heuristic value for ff(): 23
[t=1.67724s, 39412 KB] g=24, 1146 evaluated, 53 expanded
[t=1.70668s, 39412 KB] New best heuristic value for ff(): 22
[t=1.70742s, 39412 KB] g=25, 1172 evaluated, 54 expanded
[t=7.57583s, 39412 KB] New best heuristic value for ff(): 21
[t=7.57595s, 39412 KB] g=30, 6179 evaluated, 282 expanded
[t=9.53809s, 39412 KB] New best heuristic value for ff(): 20
[t=9.53871s, 39412 KB] g=32, 7860 evaluated, 367 expanded
[t=17.8112s, 39412 KB] New best heuristic value for ff(): 19
[t=17.8118s, 39412 KB] g=33, 15052 evaluated, 740 expanded
[t=17.8551s, 39412 KB] New best heuristic value for ff(): 18
[t=17.8584s, 39412 KB] g=36, 15092 evaluated, 743 expanded
[t=17.883s, 39412 KB] New best heuristic value for ff(): 17
[t=17.8839s, 39412 KB] g=37, 15114 evaluated, 744 expanded
[t=17.887s, 39412 KB] New best heuristic value for ff(): 16
[t=17.8909s, 39412 KB] g=37, 15120 evaluated, 744 expanded
[t=17.9309s, 39412 KB] New best heuristic value for ff(): 15
[t=17.9311s, 39412 KB] g=39, 15155 evaluated, 746 expanded
[t=22.3017s, 39412 KB] New best heuristic value for ff(): 14
[t=22.3025s, 39412 KB] g=42, 18986 evaluated, 954 expanded
[t=42.0286s, 39412 KB] New best heuristic value for ff(): 13
[t=42.0296s, 39412 KB] g=44, 36289 evaluated, 1872 expanded
[t=42.0525s, 39412 KB] New best heuristic value for ff(): 12
[t=42.0538s, 39412 KB] g=45, 36310 evaluated, 1873 expanded
[t=42.0685s, 39412 KB] New best heuristic value for ff(): 11
[t=42.0721s, 39412 KB] g=46, 36326 evaluated, 1874 expanded
[t=42.0924s, 39412 KB] New best heuristic value for ff(): 10
[t=42.0961s, 39412 KB] g=47, 36347 evaluated, 1875 expanded
[t=42.1084s, 39412 KB] New best heuristic value for ff(): 9
[t=42.1111s, 39412 KB] g=48, 36360 evaluated, 1876 expanded
[t=46.2615s, 39412 KB] New best heuristic value for ff(): 8
[t=46.2628s, 39412 KB] g=52, 40042 evaluated, 2067 expanded
[t=52.344s, 39412 KB] New best heuristic value for ff(): 7
[t=52.346s, 39412 KB] g=55, 45437 evaluated, 2356 expanded
[t=52.3719s, 39412 KB] New best heuristic value for ff(): 6
[t=52.3755s, 39412 KB] g=57, 45464 evaluated, 2358 expanded
[t=52.3878s, 39412 KB] New best heuristic value for ff(): 5
[t=52.3882s, 39412 KB] g=58, 45476 evaluated, 2359 expanded
[t=52.4118s, 39412 KB] New best heuristic value for ff(): 4
[t=52.412s, 39412 KB] g=59, 45500 evaluated, 2360 expanded
[t=52.4197s, 39412 KB] New best heuristic value for ff(): 2
[t=52.4221s, 39412 KB] g=60, 45511 evaluated, 2361 expanded
[t=52.4437s, 39412 KB] New best heuristic value for ff(): 1
[t=52.4454s, 39412 KB] g=61, 45541 evaluated, 2362 expanded
[t=52.4636s, 39412 KB] New best heuristic value for ff(): 0
[t=52.4668s, 39412 KB] g=62, 45569 evaluated, 2363 expanded
[t=52.4756s, 39412 KB] Solution found!
[t=52.476s, 39412 KB] Actual search time: 52.1644s
move-car-to-car car_13 car_20 car_16 (1)
move-curb-to-car car_20 curb_03 car_06 (1)
move-car-to-curb car_03 car_12 curb_03 (1)
move-car-to-car car_18 car_04 car_12 (1)
move-curb-to-car car_04 curb_07 car_03 (1)
move-car-to-curb car_07 car_19 curb_07 (1)
move-curb-to-car car_19 curb_04 car_07 (1)
move-car-to-curb car_04 car_03 curb_04 (1)
move-car-to-car car_17 car_05 car_04 (1)
move-car-to-car car_18 car_12 car_05 (1)
move-car-to-car car_20 car_06 car_12 (1)
move-car-to-car car_19 car_07 car_06 (1)
move-car-to-car car_20 car_12 car_07 (1)
move-curb-to-car car_12 curb_02 car_03 (1)
move-car-to-curb car_10 car_09 curb_02 (1)
move-car-to-car car_22 car_02 car_09 (1)
move-car-to-car car_15 car_01 car_02 (1)
move-car-to-car car_14 car_08 car_01 (1)
move-car-to-car car_21 car_00 car_08 (1)
move-car-to-car car_13 car_16 car_00 (1)
move-curb-to-car car_16 curb_12 car_10 (1)
move-car-to-curb car_12 car_03 curb_12 (1)
move-car-to-car car_16 car_10 car_03 (1)
move-car-to-car car_23 car_11 car_10 (1)
move-curb-to-car car_11 curb_01 car_12 (1)
move-car-to-curb car_19 car_06 curb_01 (1)
move-car-to-car car_11 car_12 car_19 (1)
move-curb-to-car car_06 curb_11 car_12 (1)
move-car-to-curb car_11 car_19 curb_11 (1)
move-car-to-car car_15 car_02 car_11 (1)
move-curb-to-car car_02 curb_06 car_19 (1)
move-car-to-curb car_06 car_12 curb_06 (1)
move-car-to-car car_23 car_10 car_12 (1)
move-curb-to-car car_10 curb_02 car_06 (1)
move-car-to-curb car_02 car_19 curb_02 (1)
move-car-to-car car_15 car_11 car_02 (1)
move-curb-to-car car_19 curb_01 car_11 (1)
move-car-to-curb car_10 car_06 curb_01 (1)
move-car-to-car car_19 car_11 car_06 (1)
move-curb-to-car car_10 curb_01 car_11 (1)
move-car-to-curb car_14 car_01 curb_01 (1)
move-curb-to-car car_01 curb_10 car_14 (1)
move-car-to-curb car_10 car_11 curb_10 (1)
move-car-to-car car_01 car_14 car_11 (1)
move-car-to-car car_23 car_12 car_10 (1)
move-curb-to-car car_14 curb_01 car_12 (1)
move-car-to-curb car_01 car_11 curb_01 (1)
move-car-to-car car_14 car_12 car_01 (1)
move-car-to-car car_13 car_00 car_11 (1)
move-curb-to-car car_00 curb_09 car_12 (1)
move-car-to-curb car_13 car_11 curb_09 (1)
move-car-to-car car_18 car_05 car_11 (1)
move-curb-to-car car_05 curb_00 car_13 (1)
move-car-to-curb car_00 car_12 curb_00 (1)
move-car-to-car car_22 car_09 car_12 (1)
move-curb-to-car car_09 curb_05 car_00 (1)
move-car-to-curb car_05 car_13 curb_05 (1)
move-curb-to-car car_13 curb_09 car_05 (1)
move-car-to-curb car_09 car_00 curb_09 (1)
move-car-to-car car_13 car_05 car_00 (1)
move-car-to-car car_18 car_11 car_05 (1)
move-car-to-car car_22 car_12 car_09 (1)
[t=52.476s, 39412 KB] Plan length: 62 step(s).
[t=52.476s, 39412 KB] Plan cost: 62
[t=52.476s, 39412 KB] Timestamp: 1687927029950 millisecond(s).
[t=52.476s, 39412 KB] Expanded 2364 state(s).
[t=52.476s, 39412 KB] Reopened 0 state(s).
[t=52.476s, 39412 KB] Evaluated 45583 state(s).
[t=52.476s, 39412 KB] Evaluations: 45583
[t=52.476s, 39412 KB] Generated 54676 state(s).
[t=52.476s, 39412 KB] Dead ends: 3760 state(s).
[t=52.476s, 39412 KB] Number of registered states: 45583
[t=52.476s, 39412 KB] Int hash set load factor: 45583/65536 = 0.695541
[t=52.476s, 39412 KB] Int hash set resizes: 16
[t=52.476s, 39412 KB] Search time: 52.167s
[t=52.476s, 39412 KB] Total time: 52.476s
Solution found.
Peak memory: 39412 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 62 

Successful plans:
Value: 62
 sas_plan 62 

validate exit code: 0

INFO     Planner time: 57.01s
