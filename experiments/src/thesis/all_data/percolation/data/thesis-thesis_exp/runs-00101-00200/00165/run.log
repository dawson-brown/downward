INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.280s CPU, 0.276s wall-clock]
42827 relevant atoms
4396 auxiliary atoms
47223 final queue length
138834 total queue pushes
Completing instantiation... [1.900s CPU, 1.896s wall-clock]
Instantiating: [2.190s CPU, 2.187s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.018s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.059s wall-clock]
Translating task: [1.830s CPU, 1.826s wall-clock]
49010 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
26 propositions removed
Detecting unreachable propositions: [1.050s CPU, 1.055s wall-clock]
Reordering and filtering variables...
92 of 92 variables necessary.
40 of 66 mutex groups necessary.
39546 of 39546 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.250s CPU, 0.250s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 1172
Translator goal facts: 26
Translator mutex groups: 40
Translator total mutex groups size: 1080
Translator operators: 39546
Translator axioms: 0
Translator task size: 322456
Translator peak memory: 223472 KB
Writing output... [0.250s CPU, 0.243s wall-clock]
Done! [5.660s CPU, 5.659s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 294s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(epsilon_greedy(h, epsilon=0.2))' --internal-plan-file sas_plan < output.sas
[t=0.00273988s, 11364 KB] reading input...
[t=0.16668s, 26416 KB] done reading input!
[t=0.186609s, 33616 KB] Simplifying 137202 unary operators... done! [137202 unary operators]
[t=0.482397s, 46284 KB] time to simplify: 0.307789s
[t=0.498347s, 46284 KB] Initializing additive heuristic...
[t=0.502406s, 46284 KB] Initializing FF heuristic...
[t=0.502437s, 46284 KB] Building successor generator...done!
[t=0.514525s, 46284 KB] peak memory difference for successor generator creation: 0 KB
[t=0.514641s, 46284 KB] time for successor generation creation: 0.0117033s
[t=0.514667s, 46284 KB] Variables: 92
[t=0.515419s, 46284 KB] FactPairs: 1172
[t=0.515443s, 46284 KB] Bytes per state: 28
[t=0.515466s, 46284 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.518088s, 46284 KB] New best heuristic value for ff(): 49
[t=0.519023s, 46284 KB] g=0, 1 evaluated, 0 expanded
[t=0.51905s, 46284 KB] Initial heuristic value for ff(): 49
[t=0.519077s, 46284 KB] pruning method: none
[t=0.519101s, 46284 KB] Start Timestep: 1687907370321 millisecond(s).
[t=0.689611s, 46284 KB] New best heuristic value for ff(): 48
[t=0.693618s, 46284 KB] g=4, 105 evaluated, 7 expanded
[t=0.785435s, 46284 KB] New best heuristic value for ff(): 46
[t=0.789261s, 46284 KB] g=6, 162 evaluated, 10 expanded
[t=0.833337s, 46284 KB] New best heuristic value for ff(): 44
[t=0.837406s, 46284 KB] g=7, 191 evaluated, 11 expanded
[t=0.933251s, 46284 KB] New best heuristic value for ff(): 43
[t=0.933543s, 46284 KB] g=9, 249 evaluated, 14 expanded
[t=1.04117s, 46284 KB] New best heuristic value for ff(): 42
[t=1.04282s, 46284 KB] g=10, 315 evaluated, 17 expanded
[t=1.07308s, 46284 KB] New best heuristic value for ff(): 41
[t=1.07437s, 46284 KB] g=11, 334 evaluated, 18 expanded
[t=1.09299s, 46284 KB] New best heuristic value for ff(): 40
[t=1.09443s, 46284 KB] g=12, 346 evaluated, 19 expanded
[t=1.10493s, 46284 KB] New best heuristic value for ff(): 39
[t=1.10603s, 46284 KB] g=12, 353 evaluated, 19 expanded
[t=1.13683s, 46284 KB] New best heuristic value for ff(): 38
[t=1.13892s, 46284 KB] g=13, 373 evaluated, 20 expanded
[t=1.22075s, 46284 KB] New best heuristic value for ff(): 37
[t=1.22396s, 46284 KB] g=14, 425 evaluated, 22 expanded
[t=1.45258s, 46284 KB] New best heuristic value for ff(): 36
[t=1.45354s, 46284 KB] g=15, 565 evaluated, 27 expanded
[t=1.5525s, 46284 KB] New best heuristic value for ff(): 35
[t=1.55643s, 46284 KB] g=17, 627 evaluated, 30 expanded
[t=1.66839s, 46284 KB] New best heuristic value for ff(): 33
[t=1.67037s, 46284 KB] g=19, 696 evaluated, 34 expanded
[t=1.85228s, 46284 KB] New best heuristic value for ff(): 32
[t=1.85466s, 46284 KB] g=21, 809 evaluated, 38 expanded
[t=1.90017s, 46284 KB] New best heuristic value for ff(): 31
[t=1.90045s, 46284 KB] g=22, 837 evaluated, 39 expanded
[t=2.26803s, 46284 KB] New best heuristic value for ff(): 30
[t=2.26846s, 46284 KB] g=25, 1063 evaluated, 49 expanded
[t=2.27197s, 46284 KB] New best heuristic value for ff(): 29
[t=2.27354s, 46284 KB] g=25, 1066 evaluated, 49 expanded
[t=2.7878s, 46284 KB] New best heuristic value for ff(): 28
[t=2.79072s, 46284 KB] g=28, 1383 evaluated, 63 expanded
[t=2.83971s, 46284 KB] New best heuristic value for ff(): 26
[t=2.84216s, 46284 KB] g=29, 1415 evaluated, 64 expanded
[t=2.92763s, 46284 KB] New best heuristic value for ff(): 25
[t=2.93146s, 46284 KB] g=32, 1471 evaluated, 67 expanded
[t=14.7672s, 46284 KB] New best heuristic value for ff(): 24
[t=14.7692s, 46284 KB] g=36, 8851 evaluated, 370 expanded
[t=14.8751s, 46284 KB] New best heuristic value for ff(): 23
[t=14.8779s, 46284 KB] g=37, 8918 evaluated, 373 expanded
[t=14.911s, 46284 KB] New best heuristic value for ff(): 22
[t=14.9134s, 46284 KB] g=38, 8940 evaluated, 374 expanded
[t=14.939s, 46284 KB] New best heuristic value for ff(): 21
[t=14.9394s, 46284 KB] g=39, 8956 evaluated, 375 expanded
[t=27.1363s, 46284 KB] New best heuristic value for ff(): 20
[t=27.1392s, 46284 KB] g=43, 16583 evaluated, 732 expanded
[t=42.2363s, 46284 KB] New best heuristic value for ff(): 19
[t=42.2374s, 46284 KB] g=48, 25972 evaluated, 1213 expanded
[t=42.2383s, 46284 KB] New best heuristic value for ff(): 18
[t=42.2391s, 46284 KB] g=48, 25973 evaluated, 1213 expanded
[t=52.4658s, 46284 KB] New best heuristic value for ff(): 17
[t=52.4666s, 46284 KB] g=49, 32231 evaluated, 1513 expanded
[t=115.93s, 46284 KB] New best heuristic value for ff(): 14
[t=115.933s, 46284 KB] g=59, 71608 evaluated, 3441 expanded
[t=115.962s, 46284 KB] New best heuristic value for ff(): 13
[t=115.963s, 46284 KB] g=60, 71626 evaluated, 3442 expanded
[t=116.126s, 46284 KB] New best heuristic value for ff(): 12
[t=116.13s, 46284 KB] g=62, 71732 evaluated, 3446 expanded
[t=128.994s, 46284 KB] New best heuristic value for ff(): 11
[t=128.997s, 46284 KB] g=67, 80023 evaluated, 3847 expanded
[t=135.62s, 46284 KB] New best heuristic value for ff(): 10
[t=135.622s, 46284 KB] g=68, 84335 evaluated, 4053 expanded
[t=135.639s, 46284 KB] New best heuristic value for ff(): 8
[t=135.643s, 46284 KB] g=69, 84349 evaluated, 4054 expanded
[t=135.715s, 46284 KB] New best heuristic value for ff(): 7
[t=135.718s, 46284 KB] g=70, 84398 evaluated, 4056 expanded
[t=135.743s, 46284 KB] New best heuristic value for ff(): 6
[t=135.745s, 46284 KB] g=71, 84416 evaluated, 4057 expanded
[t=143.488s, 46284 KB] New best heuristic value for ff(): 5
[t=143.491s, 46284 KB] g=78, 89645 evaluated, 4314 expanded
[t=143.508s, 46284 KB] New best heuristic value for ff(): 4
[t=143.511s, 46284 KB] g=78, 89659 evaluated, 4314 expanded
[t=143.539s, 46284 KB] New best heuristic value for ff(): 2
[t=143.542s, 46284 KB] g=79, 89682 evaluated, 4315 expanded
[t=143.559s, 46284 KB] New best heuristic value for ff(): 1
[t=143.563s, 46284 KB] g=80, 89698 evaluated, 4316 expanded
[t=143.587s, 46284 KB] New best heuristic value for ff(): 0
[t=143.589s, 46284 KB] g=81, 89722 evaluated, 4317 expanded
[t=143.599s, 46284 KB] Solution found!
[t=143.6s, 46284 KB] Actual search time: 143.081s
move-car-to-curb car_03 car_01 curb_13 (1)
move-car-to-car car_13 car_02 car_01 (1)
move-car-to-car car_17 car_05 car_03 (1)
move-curb-to-car car_05 curb_06 car_02 (1)
move-car-to-curb car_06 car_25 curb_06 (1)
move-car-to-car car_20 car_10 car_06 (1)
move-curb-to-car car_25 curb_09 car_10 (1)
move-car-to-curb car_09 car_16 curb_09 (1)
move-car-to-car car_12 car_19 car_16 (1)
move-curb-to-car car_19 curb_04 car_09 (1)
move-car-to-curb car_04 car_11 curb_04 (1)
move-car-to-car car_18 car_00 car_04 (1)
move-car-to-car car_14 car_08 car_00 (1)
move-car-to-car car_25 car_10 car_11 (1)
move-car-to-car car_05 car_02 car_10 (1)
move-car-to-car car_22 car_24 car_08 (1)
move-curb-to-car car_24 curb_01 car_02 (1)
move-car-to-curb car_05 car_10 curb_01 (1)
move-car-to-car car_19 car_09 car_05 (1)
move-car-to-car car_24 car_02 car_10 (1)
move-car-to-car car_15 car_07 car_09 (1)
move-car-to-car car_21 car_23 car_07 (1)
move-curb-to-car car_02 curb_12 car_23 (1)
move-car-to-curb car_12 car_16 curb_12 (1)
move-car-to-car car_15 car_09 car_12 (1)
move-curb-to-car car_16 curb_00 car_09 (1)
move-car-to-curb car_02 car_23 curb_00 (1)
move-car-to-car car_16 car_09 car_02 (1)
move-curb-to-car car_23 curb_03 car_09 (1)
move-car-to-curb car_13 car_01 curb_03 (1)
move-car-to-car car_15 car_12 car_01 (1)
move-curb-to-car car_13 curb_03 car_12 (1)
move-car-to-curb car_17 car_03 curb_03 (1)
move-car-to-car car_13 car_12 car_17 (1)
move-curb-to-car car_03 curb_13 car_12 (1)
move-car-to-curb car_13 car_17 curb_13 (1)
move-curb-to-car car_17 curb_03 car_13 (1)
move-car-to-curb car_03 car_12 curb_03 (1)
move-car-to-car car_17 car_13 car_03 (1)
move-car-to-car car_16 car_02 car_12 (1)
move-car-to-car car_14 car_00 car_13 (1)
move-curb-to-car car_00 curb_11 car_02 (1)
move-car-to-curb car_15 car_01 curb_11 (1)
move-car-to-car car_00 car_02 car_15 (1)
move-curb-to-car car_02 curb_00 car_01 (1)
move-car-to-curb car_00 car_15 curb_00 (1)
move-car-to-car car_14 car_13 car_00 (1)
move-curb-to-car car_15 curb_11 car_13 (1)
move-car-to-curb car_02 car_01 curb_11 (1)
move-car-to-car car_19 car_05 car_01 (1)
move-curb-to-car car_02 curb_11 car_05 (1)
move-car-to-curb car_22 car_08 curb_11 (1)
move-curb-to-car car_08 curb_02 car_22 (1)
move-car-to-curb car_02 car_05 curb_02 (1)
move-car-to-car car_24 car_10 car_02 (1)
move-car-to-car car_19 car_01 car_05 (1)
move-curb-to-car car_10 curb_08 car_01 (1)
move-car-to-curb car_08 car_22 curb_08 (1)
move-curb-to-car car_22 curb_11 car_08 (1)
move-car-to-curb car_10 car_01 curb_11 (1)
move-car-to-car car_24 car_02 car_10 (1)
move-car-to-car car_16 car_12 car_02 (1)
move-curb-to-car car_01 curb_05 car_12 (1)
move-car-to-curb car_15 car_13 curb_05 (1)
move-car-to-car car_19 car_05 car_13 (1)
move-curb-to-car car_05 curb_01 car_15 (1)
move-car-to-curb car_01 car_12 curb_01 (1)
move-car-to-car car_05 car_15 car_12 (1)
move-curb-to-car car_15 curb_05 car_01 (1)
move-car-to-curb car_05 car_12 curb_05 (1)
move-car-to-car car_19 car_13 car_05 (1)
move-car-to-car car_24 car_10 car_12 (1)
move-curb-to-car car_10 curb_11 car_13 (1)
move-car-to-curb car_24 car_12 curb_11 (1)
move-car-to-car car_25 car_11 car_12 (1)
move-curb-to-car car_11 curb_10 car_24 (1)
move-car-to-curb car_10 car_13 curb_10 (1)
move-car-to-car car_11 car_24 car_13 (1)
move-curb-to-car car_24 curb_11 car_10 (1)
move-car-to-curb car_11 car_13 curb_11 (1)
move-car-to-car car_25 car_12 car_11 (1)
[t=143.6s, 46284 KB] Plan length: 81 step(s).
[t=143.6s, 46284 KB] Plan cost: 81
[t=143.6s, 46284 KB] Timestamp: 1687907514011 millisecond(s).
[t=143.6s, 46284 KB] Expanded 4318 state(s).
[t=143.6s, 46284 KB] Reopened 0 state(s).
[t=143.6s, 46284 KB] Evaluated 89736 state(s).
[t=143.6s, 46284 KB] Evaluations: 89736
[t=143.6s, 46284 KB] Generated 109431 state(s).
[t=143.6s, 46284 KB] Dead ends: 7108 state(s).
[t=143.6s, 46284 KB] Number of registered states: 89736
[t=143.6s, 46284 KB] Int hash set load factor: 89736/131072 = 0.684631
[t=143.6s, 46284 KB] Int hash set resizes: 17
[t=143.6s, 46284 KB] Search time: 143.085s
[t=143.6s, 46284 KB] Total time: 143.6s
Solution found.
Peak memory: 46284 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 81 

Successful plans:
Value: 81
 sas_plan 81 

validate exit code: 0

INFO     Planner time: 149.39s
