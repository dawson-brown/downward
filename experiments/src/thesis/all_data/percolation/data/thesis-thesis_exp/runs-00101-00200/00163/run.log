INFO     planner time limit: 300s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.260s CPU, 0.268s wall-clock]
42827 relevant atoms
4396 auxiliary atoms
47223 final queue length
138834 total queue pushes
Completing instantiation... [1.740s CPU, 1.736s wall-clock]
Instantiating: [2.010s CPU, 2.017s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.017s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.057s wall-clock]
Translating task: [1.800s CPU, 1.799s wall-clock]
49010 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
26 propositions removed
Detecting unreachable propositions: [1.050s CPU, 1.040s wall-clock]
Reordering and filtering variables...
92 of 92 variables necessary.
40 of 66 mutex groups necessary.
39546 of 39546 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.250s CPU, 0.250s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 1172
Translator goal facts: 26
Translator mutex groups: 40
Translator total mutex groups size: 1080
Translator operators: 39546
Translator axioms: 0
Translator task size: 322456
Translator peak memory: 223472 KB
Writing output... [0.240s CPU, 0.242s wall-clock]
Done! [5.440s CPU, 5.444s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 294s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-d93485cdd92f65ede2ae3573b3f4adda0b49e4fd_e5e41175/builds/release/bin/downward --evaluator 'h=ff()' --search 'eager(epsilon_greedy(h, epsilon=0.2))' --internal-plan-file sas_plan < output.sas
[t=0s, 11364 KB] reading input...
[t=0.15584s, 26416 KB] done reading input!
[t=0.175825s, 33616 KB] Simplifying 137202 unary operators... done! [137202 unary operators]
[t=0.419659s, 46284 KB] time to simplify: 0.251835s
[t=0.431665s, 46284 KB] Initializing additive heuristic...
[t=0.431665s, 46284 KB] Initializing FF heuristic...
[t=0.431665s, 46284 KB] Building successor generator...done!
[t=0.443637s, 46284 KB] peak memory difference for successor generator creation: 0 KB
[t=0.443637s, 46284 KB] time for successor generation creation: 0.0119717s
[t=0.443637s, 46284 KB] Variables: 92
[t=0.443637s, 46284 KB] FactPairs: 1172
[t=0.443637s, 46284 KB] Bytes per state: 28
[t=0.443637s, 46284 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.447644s, 46284 KB] New best heuristic value for ff(): 49
[t=0.447644s, 46284 KB] g=0, 1 evaluated, 0 expanded
[t=0.447644s, 46284 KB] Initial heuristic value for ff(): 49
[t=0.447644s, 46284 KB] pruning method: none
[t=0.447644s, 46284 KB] Start Timestep: 1687949373414 millisecond(s).
[t=0.479603s, 46284 KB] New best heuristic value for ff(): 48
[t=0.479603s, 46284 KB] g=2, 22 evaluated, 2 expanded
[t=0.615541s, 46284 KB] New best heuristic value for ff(): 47
[t=0.615541s, 46284 KB] g=4, 109 evaluated, 7 expanded
[t=0.679527s, 46284 KB] New best heuristic value for ff(): 45
[t=0.679527s, 46284 KB] g=5, 150 evaluated, 9 expanded
[t=0.819446s, 46284 KB] New best heuristic value for ff(): 44
[t=0.819446s, 46284 KB] g=7, 240 evaluated, 13 expanded
[t=0.831444s, 46284 KB] New best heuristic value for ff(): 42
[t=0.831444s, 46284 KB] g=8, 248 evaluated, 14 expanded
[t=1.72294s, 46284 KB] New best heuristic value for ff(): 41
[t=1.72294s, 46284 KB] g=10, 826 evaluated, 47 expanded
[t=1.78293s, 46284 KB] New best heuristic value for ff(): 39
[t=1.78293s, 46284 KB] g=11, 864 evaluated, 49 expanded
[t=1.78691s, 46284 KB] New best heuristic value for ff(): 38
[t=1.78691s, 46284 KB] g=11, 869 evaluated, 49 expanded
[t=2.6343s, 46284 KB] New best heuristic value for ff(): 37
[t=2.6343s, 46284 KB] g=13, 1418 evaluated, 79 expanded
[t=2.98221s, 46284 KB] New best heuristic value for ff(): 36
[t=2.98221s, 46284 KB] g=17, 1647 evaluated, 91 expanded
[t=3.16615s, 46284 KB] New best heuristic value for ff(): 35
[t=3.16615s, 46284 KB] g=20, 1765 evaluated, 97 expanded
[t=3.21814s, 46284 KB] New best heuristic value for ff(): 34
[t=3.21814s, 46284 KB] g=21, 1799 evaluated, 99 expanded
[t=3.37413s, 46284 KB] New best heuristic value for ff(): 33
[t=3.37413s, 46284 KB] g=23, 1902 evaluated, 104 expanded
[t=4.0339s, 46284 KB] New best heuristic value for ff(): 32
[t=4.0339s, 46284 KB] g=25, 2337 evaluated, 126 expanded
[t=4.22586s, 46284 KB] New best heuristic value for ff(): 31
[t=4.22586s, 46284 KB] g=27, 2464 evaluated, 133 expanded
[t=4.97434s, 46284 KB] New best heuristic value for ff(): 30
[t=4.97434s, 46284 KB] g=30, 2958 evaluated, 159 expanded
[t=5.16163s, 46284 KB] New best heuristic value for ff(): 29
[t=5.16163s, 46284 KB] g=33, 3084 evaluated, 164 expanded
[t=5.96139s, 46284 KB] New best heuristic value for ff(): 28
[t=5.96139s, 46284 KB] g=35, 3615 evaluated, 189 expanded
[t=6.35717s, 46284 KB] New best heuristic value for ff(): 27
[t=6.35717s, 46284 KB] g=38, 3881 evaluated, 200 expanded
[t=6.38117s, 46284 KB] New best heuristic value for ff(): 26
[t=6.38117s, 46284 KB] g=38, 3895 evaluated, 200 expanded
[t=6.79711s, 46284 KB] New best heuristic value for ff(): 25
[t=6.79711s, 46284 KB] g=40, 4177 evaluated, 212 expanded
[t=10.1429s, 46284 KB] New best heuristic value for ff(): 24
[t=10.1429s, 46284 KB] g=46, 6416 evaluated, 306 expanded
[t=10.1469s, 46284 KB] New best heuristic value for ff(): 23
[t=10.1469s, 46284 KB] g=46, 6417 evaluated, 306 expanded
[t=10.2468s, 46284 KB] New best heuristic value for ff(): 22
[t=10.2468s, 46284 KB] g=48, 6485 evaluated, 309 expanded
[t=18.2943s, 46284 KB] New best heuristic value for ff(): 21
[t=18.2962s, 46284 KB] g=53, 11908 evaluated, 535 expanded
[t=32.2522s, 46284 KB] New best heuristic value for ff(): 20
[t=32.2526s, 46284 KB] g=61, 21324 evaluated, 979 expanded
[t=32.2721s, 46284 KB] New best heuristic value for ff(): 19
[t=32.2723s, 46284 KB] g=62, 21337 evaluated, 980 expanded
[t=32.3361s, 46284 KB] New best heuristic value for ff(): 16
[t=32.3364s, 46284 KB] g=64, 21380 evaluated, 982 expanded
[t=32.396s, 46284 KB] New best heuristic value for ff(): 15
[t=32.3981s, 46284 KB] g=66, 21422 evaluated, 984 expanded
[t=39.0975s, 46284 KB] New best heuristic value for ff(): 14
[t=39.099s, 46284 KB] g=69, 26027 evaluated, 1208 expanded
[t=67.4803s, 46284 KB] New best heuristic value for ff(): 13
[t=67.4841s, 46284 KB] g=72, 45509 evaluated, 2148 expanded
[t=67.5479s, 46284 KB] New best heuristic value for ff(): 12
[t=67.5513s, 46284 KB] g=73, 45555 evaluated, 2150 expanded
[t=70.7864s, 46284 KB] New best heuristic value for ff(): 11
[t=70.7893s, 46284 KB] g=76, 47778 evaluated, 2259 expanded
[t=70.8063s, 46284 KB] New best heuristic value for ff(): 10
[t=70.81s, 46284 KB] g=76, 47792 evaluated, 2259 expanded
[t=70.8423s, 46284 KB] New best heuristic value for ff(): 8
[t=70.8431s, 46284 KB] g=77, 47814 evaluated, 2260 expanded
[t=70.8661s, 46284 KB] New best heuristic value for ff(): 7
[t=70.8683s, 46284 KB] g=78, 47831 evaluated, 2261 expanded
[t=70.8861s, 46284 KB] New best heuristic value for ff(): 6
[t=70.8885s, 46284 KB] g=79, 47845 evaluated, 2262 expanded
[t=78.4039s, 46284 KB] New best heuristic value for ff(): 5
[t=78.406s, 46284 KB] g=86, 53198 evaluated, 2521 expanded
[t=78.4238s, 46284 KB] New best heuristic value for ff(): 4
[t=78.4245s, 46284 KB] g=86, 53212 evaluated, 2521 expanded
[t=78.4397s, 46284 KB] New best heuristic value for ff(): 2
[t=78.4417s, 46284 KB] g=87, 53225 evaluated, 2522 expanded
[t=78.4717s, 46284 KB] New best heuristic value for ff(): 1
[t=78.4737s, 46284 KB] g=88, 53251 evaluated, 2523 expanded
[t=78.4957s, 46284 KB] New best heuristic value for ff(): 0
[t=78.4988s, 46284 KB] g=89, 53275 evaluated, 2524 expanded
[t=78.5076s, 46284 KB] Solution found!
[t=78.5094s, 46284 KB] Actual search time: 78.0617s
move-car-to-curb car_07 car_15 curb_13 (1)
move-curb-to-car car_15 curb_03 car_07 (1)
move-car-to-curb car_03 car_13 curb_03 (1)
move-car-to-car car_17 car_18 car_03 (1)
move-curb-to-car car_18 curb_07 car_13 (1)
move-car-to-curb car_02 car_05 curb_07 (1)
move-car-to-car car_19 car_11 car_05 (1)
move-curb-to-car car_11 curb_06 car_02 (1)
move-car-to-curb car_06 car_21 curb_06 (1)
move-car-to-car car_20 car_09 car_06 (1)
move-car-to-car car_11 car_02 car_21 (1)
move-car-to-car car_15 car_07 car_02 (1)
move-curb-to-car car_07 curb_13 car_09 (1)
move-car-to-curb car_15 car_02 curb_13 (1)
move-curb-to-car car_02 curb_07 car_15 (1)
move-car-to-curb car_07 car_09 curb_07 (1)
move-car-to-car car_08 car_01 car_07 (1)
move-curb-to-car car_01 curb_02 car_09 (1)
move-car-to-curb car_02 car_15 curb_02 (1)
move-curb-to-car car_15 curb_13 car_02 (1)
move-car-to-curb car_01 car_09 curb_13 (1)
move-car-to-car car_15 car_02 car_01 (1)
move-car-to-car car_08 car_07 car_02 (1)
move-car-to-car car_11 car_21 car_09 (1)
move-curb-to-car car_21 curb_01 car_07 (1)
move-car-to-curb car_08 car_02 curb_01 (1)
move-car-to-car car_11 car_09 car_08 (1)
move-car-to-car car_23 car_22 car_09 (1)
move-car-to-car car_12 car_04 car_22 (1)
move-car-to-car car_18 car_13 car_04 (1)
move-curb-to-car car_13 curb_00 car_02 (1)
move-car-to-curb car_11 car_08 curb_00 (1)
move-car-to-car car_10 car_16 car_08 (1)
move-curb-to-car car_16 curb_04 car_11 (1)
move-car-to-curb car_10 car_08 curb_04 (1)
move-car-to-car car_13 car_02 car_08 (1)
move-car-to-car car_16 car_11 car_02 (1)
move-car-to-car car_24 car_25 car_10 (1)
move-curb-to-car car_25 curb_08 car_11 (1)
move-car-to-curb car_13 car_08 curb_08 (1)
move-car-to-car car_12 car_22 car_13 (1)
move-curb-to-car car_22 curb_09 car_08 (1)
move-car-to-curb car_18 car_04 curb_09 (1)
move-curb-to-car car_04 curb_12 car_18 (1)
move-car-to-curb car_12 car_13 curb_12 (1)
move-curb-to-car car_13 curb_08 car_12 (1)
move-car-to-curb car_04 car_18 curb_08 (1)
move-curb-to-car car_18 curb_09 car_04 (1)
move-car-to-curb car_15 car_01 curb_09 (1)
move-car-to-car car_13 car_12 car_15 (1)
move-curb-to-car car_01 curb_13 car_12 (1)
move-car-to-curb car_13 car_15 curb_13 (1)
move-curb-to-car car_15 curb_09 car_13 (1)
move-car-to-curb car_01 car_12 curb_09 (1)
move-car-to-car car_15 car_13 car_01 (1)
move-car-to-car car_22 car_08 car_12 (1)
move-car-to-car car_24 car_10 car_13 (1)
move-curb-to-car car_08 curb_01 car_10 (1)
move-car-to-curb car_18 car_04 curb_01 (1)
move-curb-to-car car_04 curb_08 car_18 (1)
move-car-to-curb car_08 car_10 curb_08 (1)
move-curb-to-car car_10 curb_04 car_08 (1)
move-car-to-curb car_04 car_18 curb_04 (1)
move-curb-to-car car_18 curb_01 car_04 (1)
move-car-to-curb car_10 car_08 curb_01 (1)
move-car-to-car car_22 car_12 car_08 (1)
move-curb-to-car car_10 curb_01 car_12 (1)
move-car-to-curb car_23 car_09 curb_01 (1)
move-curb-to-car car_09 curb_10 car_23 (1)
move-car-to-curb car_10 car_12 curb_10 (1)
move-car-to-car car_09 car_23 car_12 (1)
move-car-to-car car_24 car_13 car_10 (1)
move-car-to-car car_15 car_01 car_13 (1)
move-curb-to-car car_01 curb_09 car_23 (1)
move-car-to-curb car_09 car_12 curb_09 (1)
move-car-to-car car_01 car_23 car_12 (1)
move-curb-to-car car_23 curb_01 car_09 (1)
move-car-to-curb car_01 car_12 curb_01 (1)
move-car-to-car car_15 car_13 car_01 (1)
move-car-to-car car_14 car_00 car_12 (1)
move-curb-to-car car_00 curb_11 car_13 (1)
move-car-to-curb car_14 car_12 curb_11 (1)
move-car-to-car car_25 car_11 car_12 (1)
move-curb-to-car car_11 curb_00 car_14 (1)
move-car-to-curb car_00 car_13 curb_00 (1)
move-car-to-car car_11 car_14 car_13 (1)
move-curb-to-car car_14 curb_11 car_00 (1)
move-car-to-curb car_11 car_13 curb_11 (1)
move-car-to-car car_25 car_12 car_11 (1)
[t=78.5094s, 46284 KB] Plan length: 89 step(s).
[t=78.5094s, 46284 KB] Plan cost: 89
[t=78.5094s, 46284 KB] Timestamp: 1687949451508 millisecond(s).
[t=78.5094s, 46284 KB] Expanded 2525 state(s).
[t=78.5094s, 46284 KB] Reopened 0 state(s).
[t=78.5094s, 46284 KB] Evaluated 53289 state(s).
[t=78.5094s, 46284 KB] Evaluations: 53289
[t=78.5094s, 46284 KB] Generated 62287 state(s).
[t=78.5094s, 46284 KB] Dead ends: 3930 state(s).
[t=78.5094s, 46284 KB] Number of registered states: 53289
[t=78.5094s, 46284 KB] Int hash set load factor: 53289/65536 = 0.813126
[t=78.5094s, 46284 KB] Int hash set resizes: 16
[t=78.5094s, 46284 KB] Search time: 78.0658s
[t=78.5094s, 46284 KB] Total time: 78.5094s
Solution found.
Peak memory: 46284 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 89 

Successful plans:
Value: 89
 sas_plan 89 

validate exit code: 0

INFO     Planner time: 84.12s
