INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5088 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.037s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.019s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.018s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 19
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9108
Translator peak memory: 37852 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.140s CPU, 0.143s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), softmin_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.00396054s, 12128 KB] done reading input!
[t=0.00791974s, 12636 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0116532s, 12900 KB] time to simplify: 0.00394179s
[t=0.0118848s, 12900 KB] Initializing additive heuristic...
[t=0.012035s, 12900 KB] Initializing FF heuristic...
[t=0.0120601s, 12900 KB] Building successor generator...done!
[t=0.0124853s, 12900 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0125411s, 12900 KB] time for successor generation creation: 0s
[t=0.012566s, 12900 KB] Variables: 47
[t=0.0125956s, 12900 KB] FactPairs: 600
[t=0.0126183s, 12900 KB] Bytes per state: 20
[t=0.0126415s, 12900 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0126979s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.0127817s, 12900 KB] g=0, 1 evaluated, 0 expanded
[t=0.0128067s, 12900 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.0128491s, 12900 KB] pruning method: none
[t=0.0128744s, 12900 KB] Start Timestep: 1685481442919 millisecond(s).
[t=0.0129207s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.0131155s, 12900 KB] g=2, 5 evaluated, 2 expanded
[t=0.0131397s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.0135057s, 12900 KB] g=4, 14 evaluated, 5 expanded
[t=0.0135299s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.0147663s, 12900 KB] g=8, 47 evaluated, 13 expanded
[t=0.0196123s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=0.0207742s, 12900 KB] g=12, 210 evaluated, 48 expanded
[t=0.0208012s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.021158s, 12900 KB] g=14, 219 evaluated, 50 expanded
[t=0.0275639s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.0287557s, 12900 KB] g=20, 430 evaluated, 89 expanded
[t=0.0314836s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.0331986s, 12900 KB] g=26, 553 evaluated, 111 expanded
[t=0.0433163s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.0455811s, 12900 KB] g=20, 905 evaluated, 182 expanded
[t=0.0456126s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.0464439s, 12900 KB] g=22, 928 evaluated, 185 expanded
[t=0.0552346s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.0571119s, 12900 KB] g=28, 1250 evaluated, 240 expanded
[t=0.0571398s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.0581607s, 12900 KB] g=30, 1281 evaluated, 244 expanded
[t=0.0581863s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.0590398s, 12900 KB] g=32, 1306 evaluated, 248 expanded
[t=0.0591246s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.0598013s, 12900 KB] g=34, 1328 evaluated, 252 expanded
[t=0.0598264s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.0612724s, 12900 KB] g=36, 1371 evaluated, 259 expanded
[t=0.409845s, 13300 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.411801s, 13300 KB] g=58, 11731 evaluated, 2862 expanded
[t=0.411833s, 13300 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.413057s, 13300 KB] g=60, 11767 evaluated, 2869 expanded
[t=2.80955s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=2.81348s, 17800 KB] g=174, 84743 evaluated, 28536 expanded
[t=2.81353s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=2.81402s, 17800 KB] g=176, 84759 evaluated, 28540 expanded
[t=2.81744s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=2.82033s, 17800 KB] g=182, 84983 evaluated, 28612 expanded
[t=2.82037s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=2.82073s, 17800 KB] g=184, 84995 evaluated, 28614 expanded
[t=2.82536s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=2.8273s, 17800 KB] g=192, 85272 evaluated, 28704 expanded
[t=2.82733s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=2.82833s, 17800 KB] g=196, 85317 evaluated, 28717 expanded
[t=2.82835s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=2.82863s, 17800 KB] g=198, 85328 evaluated, 28721 expanded
[t=2.84517s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=2.84545s, 17800 KB] g=210, 86129 evaluated, 29009 expanded
[t=2.84549s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=2.84637s, 17800 KB] g=214, 86170 evaluated, 29019 expanded
[t=2.8464s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=2.84735s, 17800 KB] g=214, 86219 evaluated, 29033 expanded
[t=2.84738s, 17800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=2.84766s, 17800 KB] g=216, 86233 evaluated, 29036 expanded
[t=2.84897s, 17932 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=2.85093s, 17932 KB] g=230, 86417 evaluated, 29126 expanded
[t=2.85096s, 17932 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=2.85245s, 17932 KB] g=236, 86509 evaluated, 29177 expanded
[t=2.85289s, 17932 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=2.85323s, 17932 KB] g=242, 86558 evaluated, 29195 expanded
[t=2.85326s, 17932 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=2.85334s, 17932 KB] g=243, 86562 evaluated, 29196 expanded
[t=2.85337s, 17932 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=2.85344s, 17932 KB] g=244, 86565 evaluated, 29197 expanded
[t=2.85347s, 17932 KB] Solution found!
[t=2.8535s, 17932 KB] Actual search time: 2.84058s
unstack b19 b11 (1)
putdown b19 (1)
unstack b8 b16 (1)
putdown b8 (1)
unstack b16 b17 (1)
stack b16 b8 (1)
unstack b17 b3 (1)
stack b17 b19 (1)
unstack b23 b21 (1)
putdown b23 (1)
unstack b21 b1 (1)
stack b21 b17 (1)
unstack b1 b4 (1)
stack b1 b21 (1)
unstack b4 b10 (1)
putdown b4 (1)
unstack b10 b13 (1)
stack b10 b1 (1)
unstack b3 b14 (1)
stack b3 b10 (1)
unstack b13 b22 (1)
stack b13 b3 (1)
unstack b14 b9 (1)
stack b14 b16 (1)
unstack b22 b7 (1)
stack b22 b13 (1)
unstack b9 b18 (1)
stack b9 b11 (1)
unstack b18 b6 (1)
stack b18 b9 (1)
unstack b14 b16 (1)
stack b14 b6 (1)
unstack b16 b8 (1)
stack b16 b18 (1)
unstack b7 b20 (1)
stack b7 b16 (1)
unstack b22 b13 (1)
putdown b22 (1)
pickup b23 (1)
stack b23 b22 (1)
pickup b4 (1)
stack b4 b20 (1)
unstack b14 b6 (1)
stack b14 b7 (1)
pickup b6 (1)
stack b6 b13 (1)
unstack b23 b22 (1)
putdown b23 (1)
unstack b14 b7 (1)
stack b14 b6 (1)
unstack b4 b20 (1)
stack b4 b7 (1)
pickup b20 (1)
stack b20 b8 (1)
pickup b22 (1)
stack b22 b20 (1)
unstack b4 b7 (1)
putdown b4 (1)
pickup b23 (1)
stack b23 b22 (1)
unstack b7 b16 (1)
putdown b7 (1)
unstack b16 b18 (1)
stack b16 b7 (1)
unstack b23 b22 (1)
stack b23 b18 (1)
unstack b22 b20 (1)
stack b22 b14 (1)
unstack b16 b7 (1)
stack b16 b20 (1)
pickup b7 (1)
stack b7 b16 (1)
unstack b22 b14 (1)
putdown b22 (1)
unstack b23 b18 (1)
putdown b23 (1)
pickup b4 (1)
stack b4 b22 (1)
unstack b18 b9 (1)
putdown b18 (1)
unstack b9 b11 (1)
stack b9 b7 (1)
pickup b18 (1)
stack b18 b9 (1)
unstack b11 b5 (1)
stack b11 b23 (1)
unstack b5 b12 (1)
stack b5 b14 (1)
unstack b11 b23 (1)
stack b11 b5 (1)
pickup b23 (1)
stack b23 b12 (1)
unstack b4 b22 (1)
putdown b4 (1)
unstack b18 b9 (1)
stack b18 b22 (1)
unstack b9 b7 (1)
stack b9 b11 (1)
unstack b18 b22 (1)
stack b18 b9 (1)
pickup b4 (1)
stack b4 b23 (1)
pickup b22 (1)
stack b22 b4 (1)
unstack b7 b16 (1)
stack b7 b22 (1)
unstack b16 b20 (1)
stack b16 b18 (1)
unstack b7 b22 (1)
stack b7 b16 (1)
unstack b22 b4 (1)
putdown b22 (1)
unstack b4 b23 (1)
putdown b4 (1)
unstack b20 b8 (1)
putdown b20 (1)
pickup b22 (1)
stack b22 b20 (1)
unstack b23 b12 (1)
stack b23 b8 (1)
unstack b12 b15 (1)
stack b12 b22 (1)
unstack b15 b2 (1)
putdown b15 (1)
pickup b2 (1)
stack b2 b7 (1)
unstack b23 b8 (1)
stack b23 b12 (1)
pickup b4 (1)
stack b4 b2 (1)
pickup b8 (1)
stack b8 b4 (1)
pickup b15 (1)
stack b15 b8 (1)
unstack b23 b12 (1)
putdown b23 (1)
unstack b12 b22 (1)
stack b12 b23 (1)
unstack b22 b20 (1)
stack b22 b15 (1)
unstack b12 b23 (1)
putdown b12 (1)
pickup b23 (1)
stack b23 b12 (1)
unstack b22 b15 (1)
stack b22 b23 (1)
unstack b15 b8 (1)
stack b15 b20 (1)
unstack b22 b23 (1)
stack b22 b15 (1)
unstack b8 b4 (1)
putdown b8 (1)
unstack b23 b12 (1)
putdown b23 (1)
pickup b12 (1)
stack b12 b22 (1)
pickup b23 (1)
stack b23 b12 (1)
[t=2.85355s, 17932 KB] Plan length: 158 step(s).
[t=2.85355s, 17932 KB] Plan cost: 158
[t=2.85355s, 17932 KB] Timestamp: 1685481445769 millisecond(s).
[t=2.85355s, 17932 KB] Expanded 29198 state(s).
[t=2.85355s, 17932 KB] Reopened 0 state(s).
[t=2.85355s, 17932 KB] Evaluated 86566 state(s).
[t=2.85355s, 17932 KB] Evaluations: 86566
[t=2.85355s, 17932 KB] Generated 142643 state(s).
[t=2.85355s, 17932 KB] Dead ends: 0 state(s).
[t=2.85355s, 17932 KB] Number of registered states: 86566
[t=2.85355s, 17932 KB] Int hash set load factor: 86566/131072 = 0.660446
[t=2.85355s, 17932 KB] Int hash set resizes: 17
[t=2.85355s, 17932 KB] Search time: 2.84091s
[t=2.85355s, 17932 KB] Total time: 2.85355s
Solution found.
Peak memory: 17932 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 158 

Successful plans:
Value: 158
 sas_plan 158 

validate exit code: 0

INFO     Planner time: 3.09s
