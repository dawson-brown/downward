INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.060s CPU, 0.062s wall-clock]
7250 relevant atoms
4848 auxiliary atoms
12098 final queue length
21413 total queue pushes
Completing instantiation... [0.160s CPU, 0.156s wall-clock]
Instantiating: [0.230s CPU, 0.223s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.007s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.002s wall-clock]
Choosing groups...
49 uncovered facts
Choosing groups: [0.010s CPU, 0.007s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.040s CPU, 0.035s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.002s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.003s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.002s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.007s wall-clock]
Translating task: [0.170s CPU, 0.167s wall-clock]
6864 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
96 propositions removed
Detecting unreachable propositions: [0.140s CPU, 0.138s wall-clock]
Reordering and filtering variables...
97 of 97 variables necessary.
49 of 97 mutex groups necessary.
4608 of 4608 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.042s wall-clock]
Translator variables: 97
Translator derived variables: 0
Translator facts: 2450
Translator goal facts: 41
Translator mutex groups: 49
Translator total mutex groups size: 2401
Translator operators: 4608
Translator axioms: 0
Translator task size: 39405
Translator peak memory: 57056 KB
Writing output... [0.030s CPU, 0.030s wall-clock]
Done! [0.660s CPU, 0.655s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), softmin_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.0270027s, 18096 KB] done reading input!
[t=0.0309559s, 19332 KB] Simplifying 18336 unary operators... done! [13824 unary operators]
[t=0.0436174s, 20852 KB] time to simplify: 0.0126615s
[t=0.0447722s, 20852 KB] Initializing additive heuristic...
[t=0.0452355s, 20852 KB] Initializing FF heuristic...
[t=0.0452646s, 20852 KB] Building successor generator...done!
[t=0.0467595s, 20852 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0468208s, 20852 KB] time for successor generation creation: 0.00130954s
[t=0.0468462s, 20852 KB] Variables: 97
[t=0.0469576s, 20852 KB] FactPairs: 2450
[t=0.0469803s, 20852 KB] Bytes per state: 44
[t=0.0470022s, 20852 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0470773s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 89
[t=0.0473682s, 20852 KB] g=0, 1 evaluated, 0 expanded
[t=0.047393s, 20852 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 89
[t=0.0474361s, 20852 KB] pruning method: none
[t=0.0474585s, 20852 KB] Start Timestep: 1685469648559 millisecond(s).
[t=0.0505533s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 88
[t=0.0535501s, 20852 KB] g=6, 40 evaluated, 16 expanded
[t=0.0584868s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 87
[t=0.0624578s, 20852 KB] g=10, 98 evaluated, 33 expanded
[t=0.0744085s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 86
[t=0.0778436s, 20852 KB] g=18, 199 evaluated, 62 expanded
[t=0.314183s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 85
[t=0.31429s, 20852 KB] g=30, 1768 evaluated, 606 expanded
[t=0.314321s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 84
[t=0.315143s, 20852 KB] g=32, 1773 evaluated, 608 expanded
[t=0.51394s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 83
[t=0.517986s, 20852 KB] g=52, 3117 evaluated, 915 expanded
[t=0.518021s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 82
[t=0.521416s, 20852 KB] g=54, 3139 evaluated, 919 expanded
[t=0.561792s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 80
[t=0.562482s, 20852 KB] g=60, 3413 evaluated, 962 expanded
[t=0.569706s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 78
[t=0.570105s, 20852 KB] g=62, 3463 evaluated, 969 expanded
[t=0.573641s, 20852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.576238s, 20852 KB] g=64, 3503 evaluated, 976 expanded
[t=3.702s, 21628 KB] New best heuristic value for ff(transform=adapt_costs(one)): 76
[t=3.70308s, 21628 KB] g=138, 24186 evaluated, 5283 expanded
[t=37.8373s, 41708 KB] New best heuristic value for ff(transform=adapt_costs(one)): 75
[t=37.8395s, 41708 KB] g=352, 249615 evaluated, 54840 expanded
[t=37.8413s, 41708 KB] New best heuristic value for ff(transform=adapt_costs(one)): 74
[t=37.8433s, 41708 KB] g=354, 249639 evaluated, 54844 expanded
[t=38.0838s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 73
[t=38.0859s, 41844 KB] g=358, 251262 evaluated, 55176 expanded
[t=38.0877s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 72
[t=38.0883s, 41844 KB] g=360, 251277 evaluated, 55179 expanded
[t=38.0883s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 71
[t=38.0909s, 41844 KB] g=362, 251294 evaluated, 55182 expanded
[t=38.0996s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 70
[t=38.1028s, 41844 KB] g=366, 251373 evaluated, 55197 expanded
[t=38.1116s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 69
[t=38.1143s, 41844 KB] g=370, 251449 evaluated, 55211 expanded
[t=38.1675s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 68
[t=38.1703s, 41844 KB] g=374, 251828 evaluated, 55282 expanded
[t=38.2114s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 67
[t=38.2147s, 41844 KB] g=380, 252128 evaluated, 55334 expanded
[t=38.2153s, 41844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 66
[t=38.2169s, 41844 KB] g=382, 252142 evaluated, 55336 expanded
[t=38.3032s, 41976 KB] New best heuristic value for ff(transform=adapt_costs(one)): 65
[t=38.3051s, 41976 KB] g=392, 252739 evaluated, 55410 expanded
[t=38.3671s, 41976 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=38.3711s, 41976 KB] g=398, 253186 evaluated, 55462 expanded
[t=38.547s, 42108 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=38.5477s, 42108 KB] g=404, 254386 evaluated, 55611 expanded
[t=40.9726s, 43308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=40.9728s, 43308 KB] g=428, 270828 evaluated, 58484 expanded
[t=40.9766s, 43308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=40.9782s, 43308 KB] g=430, 270863 evaluated, 58489 expanded
[t=41.4722s, 43576 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=41.4726s, 43576 KB] g=446, 274193 evaluated, 58999 expanded
[t=41.5321s, 43576 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=41.5341s, 43576 KB] g=454, 274608 evaluated, 59068 expanded
[t=57.1327s, 51216 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=57.1353s, 51216 KB] g=556, 379556 evaluated, 76037 expanded
[t=57.5484s, 51368 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=57.5515s, 51368 KB] g=568, 382361 evaluated, 76490 expanded
[t=57.5523s, 51368 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=57.5533s, 51368 KB] g=570, 382372 evaluated, 76492 expanded
[t=81.2166s, 66988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=81.2174s, 66988 KB] g=698, 540786 evaluated, 102541 expanded
[t=118.227s, 84648 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=118.23s, 84648 KB] g=810, 788194 evaluated, 148184 expanded
[t=170.089s, 117988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=170.09s, 117988 KB] g=972, 1138462 evaluated, 216099 expanded
[t=210.334s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=210.336s, 137668 KB] g=1006, 1411669 evaluated, 263971 expanded
[t=210.346s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=210.347s, 137668 KB] g=1010, 1411748 evaluated, 263980 expanded
[t=210.35s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=210.354s, 137668 KB] g=1012, 1411790 evaluated, 263986 expanded
[t=210.354s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=210.357s, 137668 KB] g=1014, 1411813 evaluated, 263988 expanded
[t=210.358s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=210.359s, 137668 KB] g=1016, 1411824 evaluated, 263990 expanded
[t=210.382s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=210.386s, 137668 KB] g=1020, 1412010 evaluated, 264015 expanded
[t=210.414s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=210.414s, 137668 KB] g=1024, 1412204 evaluated, 264042 expanded
[t=210.415s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=210.417s, 137668 KB] g=1026, 1412220 evaluated, 264044 expanded
[t=210.418s, 137668 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=210.419s, 137668 KB] g=1028, 1412237 evaluated, 264046 expanded
[t=210.673s, 137800 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=210.674s, 137800 KB] g=1036, 1414021 evaluated, 264308 expanded
[t=214.646s, 139804 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=214.649s, 139804 KB] g=1078, 1441699 evaluated, 269148 expanded
[t=214.694s, 139804 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=214.696s, 139804 KB] g=1084, 1442028 evaluated, 269192 expanded
[t=215.113s, 140072 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=215.117s, 140072 KB] g=1086, 1444981 evaluated, 269657 expanded
[t=215.118s, 140072 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=215.119s, 140072 KB] g=1088, 1444998 evaluated, 269660 expanded
[t=215.137s, 140072 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=215.137s, 140072 KB] g=1092, 1445122 evaluated, 269680 expanded
[t=215.141s, 140072 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=215.141s, 140072 KB] g=1094, 1445146 evaluated, 269683 expanded
[t=215.372s, 140208 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=215.373s, 140208 KB] g=1106, 1446773 evaluated, 269960 expanded
[t=215.4s, 140208 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=215.401s, 140208 KB] g=1110, 1446968 evaluated, 269986 expanded
[t=215.401s, 140208 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=215.403s, 140208 KB] g=1112, 1446977 evaluated, 269988 expanded
[t=215.518s, 140208 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=215.519s, 140208 KB] g=1120, 1447811 evaluated, 270123 expanded
[t=215.54s, 140344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=215.543s, 140344 KB] g=1126, 1447979 evaluated, 270152 expanded
[t=215.544s, 140344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=215.544s, 140344 KB] g=1128, 1447989 evaluated, 270154 expanded
[t=238.943s, 153184 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=238.943s, 153184 KB] g=1270, 1625796 evaluated, 306000 expanded
[t=446.505s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=446.506s, 352440 KB] g=1454, 3272584 evaluated, 661578 expanded
[t=446.507s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=446.507s, 352440 KB] g=1456, 3272592 evaluated, 661580 expanded
[t=446.606s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=446.607s, 352440 KB] g=1468, 3273718 evaluated, 661852 expanded
[t=446.609s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=446.609s, 352440 KB] g=1472, 3273737 evaluated, 661856 expanded
[t=446.61s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=446.61s, 352440 KB] g=1474, 3273747 evaluated, 661858 expanded
[t=448.413s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=448.414s, 352440 KB] g=1510, 3297061 evaluated, 668073 expanded
[t=448.416s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=448.417s, 352440 KB] g=1514, 3297111 evaluated, 668087 expanded
[t=448.417s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=448.418s, 352440 KB] g=1516, 3297118 evaluated, 668089 expanded
[t=448.461s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=448.462s, 352440 KB] g=1528, 3297906 evaluated, 668320 expanded
[t=448.465s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=448.465s, 352440 KB] g=1532, 3297971 evaluated, 668334 expanded
[t=448.465s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=448.465s, 352440 KB] g=1533, 3297977 evaluated, 668335 expanded
[t=448.465s, 352440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=448.465s, 352440 KB] g=1534, 3297981 evaluated, 668336 expanded
[t=448.466s, 352440 KB] Solution found!
[t=448.466s, 352440 KB] Actual search time: 448.418s
unstack b23 b26 (1)
stack b23 b24 (1)
unstack b43 b20 (1)
stack b43 b26 (1)
unstack b20 b22 (1)
putdown b20 (1)
unstack b43 b26 (1)
putdown b43 (1)
unstack b22 b30 (1)
stack b22 b26 (1)
unstack b23 b24 (1)
stack b23 b20 (1)
pickup b30 (1)
stack b30 b43 (1)
unstack b24 b47 (1)
stack b24 b30 (1)
unstack b23 b20 (1)
stack b23 b24 (1)
unstack b47 b44 (1)
stack b47 b22 (1)
unstack b23 b24 (1)
stack b23 b47 (1)
unstack b44 b25 (1)
stack b44 b23 (1)
unstack b24 b30 (1)
stack b24 b20 (1)
unstack b30 b43 (1)
stack b30 b44 (1)
unstack b25 b10 (1)
stack b25 b43 (1)
unstack b10 b38 (1)
putdown b10 (1)
unstack b30 b44 (1)
putdown b30 (1)
unstack b24 b20 (1)
stack b24 b10 (1)
unstack b44 b23 (1)
putdown b44 (1)
unstack b38 b3 (1)
stack b38 b20 (1)
unstack b24 b10 (1)
stack b24 b30 (1)
unstack b3 b36 (1)
stack b3 b38 (1)
pickup b44 (1)
stack b44 b24 (1)
unstack b36 b19 (1)
stack b36 b10 (1)
unstack b19 b5 (1)
putdown b19 (1)
unstack b44 b24 (1)
stack b44 b23 (1)
unstack b24 b30 (1)
putdown b24 (1)
pickup b30 (1)
stack b30 b19 (1)
unstack b5 b2 (1)
stack b5 b30 (1)
unstack b44 b23 (1)
stack b44 b2 (1)
unstack b3 b38 (1)
stack b3 b5 (1)
unstack b38 b20 (1)
stack b38 b23 (1)
unstack b36 b10 (1)
putdown b36 (1)
unstack b3 b5 (1)
stack b3 b25 (1)
unstack b38 b23 (1)
stack b38 b44 (1)
pickup b20 (1)
stack b20 b10 (1)
pickup b24 (1)
stack b24 b20 (1)
unstack b38 b44 (1)
stack b38 b5 (1)
unstack b3 b25 (1)
stack b3 b38 (1)
unstack b24 b20 (1)
stack b24 b3 (1)
unstack b44 b2 (1)
stack b44 b25 (1)
unstack b2 b14 (1)
stack b2 b24 (1)
unstack b14 b1 (1)
stack b14 b20 (1)
unstack b44 b25 (1)
stack b44 b2 (1)
unstack b1 b40 (1)
stack b1 b23 (1)
unstack b40 b27 (1)
stack b40 b36 (1)
unstack b14 b20 (1)
putdown b14 (1)
unstack b27 b45 (1)
stack b27 b40 (1)
unstack b45 b18 (1)
stack b45 b25 (1)
pickup b14 (1)
stack b14 b18 (1)
unstack b27 b40 (1)
stack b27 b14 (1)
unstack b20 b10 (1)
putdown b20 (1)
unstack b1 b23 (1)
stack b1 b44 (1)
unstack b40 b36 (1)
stack b40 b23 (1)
unstack b27 b14 (1)
stack b27 b1 (1)
pickup b36 (1)
stack b36 b10 (1)
unstack b40 b23 (1)
stack b40 b45 (1)
unstack b27 b1 (1)
stack b27 b20 (1)
unstack b1 b44 (1)
stack b1 b27 (1)
unstack b23 b47 (1)
stack b23 b36 (1)
unstack b47 b22 (1)
stack b47 b14 (1)
unstack b23 b36 (1)
stack b23 b47 (1)
unstack b1 b27 (1)
stack b1 b36 (1)
unstack b40 b45 (1)
stack b40 b1 (1)
unstack b45 b25 (1)
stack b45 b23 (1)
unstack b40 b1 (1)
stack b40 b45 (1)
unstack b27 b20 (1)
stack b27 b1 (1)
unstack b40 b45 (1)
stack b40 b25 (1)
unstack b45 b23 (1)
stack b45 b20 (1)
unstack b27 b1 (1)
stack b27 b44 (1)
unstack b45 b20 (1)
stack b45 b23 (1)
pickup b20 (1)
stack b20 b1 (1)
unstack b22 b26 (1)
stack b22 b27 (1)
unstack b20 b1 (1)
putdown b20 (1)
unstack b26 b37 (1)
stack b26 b40 (1)
unstack b22 b27 (1)
stack b22 b26 (1)
unstack b37 b41 (1)
stack b37 b20 (1)
unstack b41 b16 (1)
stack b41 b1 (1)
unstack b27 b44 (1)
stack b27 b37 (1)
unstack b16 b4 (1)
stack b16 b41 (1)
unstack b4 b34 (1)
stack b4 b27 (1)
unstack b34 b15 (1)
stack b34 b4 (1)
unstack b15 b12 (1)
stack b15 b16 (1)
unstack b12 b48 (1)
stack b12 b15 (1)
unstack b48 b9 (1)
stack b48 b22 (1)
unstack b45 b23 (1)
putdown b45 (1)
unstack b34 b4 (1)
stack b34 b23 (1)
unstack b9 b46 (1)
stack b9 b45 (1)
unstack b46 b42 (1)
stack b46 b34 (1)
unstack b42 b35 (1)
putdown b42 (1)
unstack b35 b29 (1)
putdown b35 (1)
unstack b46 b34 (1)
stack b46 b35 (1)
unstack b29 b39 (1)
stack b29 b9 (1)
unstack b39 b33 (1)
putdown b39 (1)
unstack b29 b9 (1)
stack b29 b33 (1)
unstack b12 b15 (1)
stack b12 b4 (1)
unstack b46 b35 (1)
stack b46 b34 (1)
pickup b39 (1)
stack b39 b35 (1)
unstack b46 b34 (1)
stack b46 b15 (1)
unstack b9 b45 (1)
stack b9 b29 (1)
pickup b45 (1)
stack b45 b39 (1)
unstack b9 b29 (1)
stack b9 b34 (1)
unstack b12 b4 (1)
putdown b12 (1)
unstack b29 b33 (1)
stack b29 b48 (1)
unstack b33 b13 (1)
stack b33 b42 (1)
unstack b13 b21 (1)
stack b13 b9 (1)
pickup b12 (1)
stack b12 b13 (1)
unstack b33 b42 (1)
stack b33 b21 (1)
unstack b29 b48 (1)
stack b29 b33 (1)
unstack b46 b15 (1)
stack b46 b48 (1)
pickup b42 (1)
stack b42 b45 (1)
unstack b46 b48 (1)
stack b46 b42 (1)
unstack b44 b2 (1)
putdown b44 (1)
unstack b2 b24 (1)
stack b2 b48 (1)
pickup b44 (1)
stack b44 b2 (1)
unstack b24 b3 (1)
stack b24 b29 (1)
unstack b3 b38 (1)
putdown b3 (1)
unstack b38 b5 (1)
putdown b38 (1)
unstack b46 b42 (1)
stack b46 b5 (1)
pickup b3 (1)
stack b3 b38 (1)
unstack b42 b45 (1)
putdown b42 (1)
unstack b3 b38 (1)
stack b3 b42 (1)
pickup b38 (1)
stack b38 b3 (1)
unstack b44 b2 (1)
putdown b44 (1)
unstack b2 b48 (1)
stack b2 b4 (1)
pickup b44 (1)
stack b44 b2 (1)
unstack b38 b3 (1)
putdown b38 (1)
unstack b15 b16 (1)
stack b15 b48 (1)
unstack b3 b42 (1)
stack b3 b16 (1)
unstack b15 b48 (1)
stack b15 b12 (1)
unstack b3 b16 (1)
stack b3 b38 (1)
unstack b16 b41 (1)
stack b16 b44 (1)
unstack b15 b12 (1)
stack b15 b16 (1)
pickup b42 (1)
stack b42 b45 (1)
unstack b3 b38 (1)
stack b3 b15 (1)
pickup b38 (1)
stack b38 b42 (1)
unstack b3 b15 (1)
stack b3 b38 (1)
unstack b41 b1 (1)
stack b41 b12 (1)
unstack b3 b38 (1)
stack b3 b48 (1)
unstack b38 b42 (1)
stack b38 b46 (1)
unstack b1 b36 (1)
stack b1 b42 (1)
unstack b41 b12 (1)
stack b41 b1 (1)
unstack b38 b46 (1)
stack b38 b15 (1)
unstack b3 b48 (1)
stack b3 b46 (1)
unstack b38 b15 (1)
stack b38 b3 (1)
unstack b15 b16 (1)
stack b15 b38 (1)
unstack b16 b44 (1)
stack b16 b41 (1)
unstack b15 b38 (1)
stack b15 b16 (1)
unstack b36 b10 (1)
putdown b36 (1)
unstack b38 b3 (1)
stack b38 b10 (1)
unstack b3 b46 (1)
stack b3 b48 (1)
unstack b44 b2 (1)
stack b44 b24 (1)
unstack b2 b4 (1)
stack b2 b3 (1)
unstack b44 b24 (1)
stack b44 b2 (1)
unstack b38 b10 (1)
stack b38 b46 (1)
pickup b36 (1)
stack b36 b10 (1)
unstack b4 b27 (1)
stack b4 b15 (1)
unstack b27 b37 (1)
putdown b27 (1)
unstack b12 b13 (1)
stack b12 b44 (1)
unstack b37 b20 (1)
stack b37 b12 (1)
unstack b4 b15 (1)
stack b4 b27 (1)
unstack b38 b46 (1)
putdown b38 (1)
unstack b4 b27 (1)
stack b4 b15 (1)
pickup b27 (1)
stack b27 b37 (1)
unstack b4 b15 (1)
stack b4 b27 (1)
unstack b36 b10 (1)
putdown b36 (1)
pickup b38 (1)
stack b38 b4 (1)
pickup b20 (1)
stack b20 b10 (1)
unstack b13 b9 (1)
stack b13 b46 (1)
unstack b9 b34 (1)
stack b9 b15 (1)
unstack b13 b46 (1)
stack b13 b9 (1)
unstack b38 b4 (1)
stack b38 b34 (1)
unstack b13 b9 (1)
putdown b13 (1)
unstack b9 b15 (1)
stack b9 b38 (1)
pickup b13 (1)
stack b13 b9 (1)
unstack b24 b29 (1)
stack b24 b20 (1)
unstack b29 b33 (1)
stack b29 b36 (1)
unstack b24 b20 (1)
stack b24 b29 (1)
unstack b33 b21 (1)
stack b33 b4 (1)
unstack b20 b10 (1)
putdown b20 (1)
pickup b21 (1)
stack b21 b46 (1)
unstack b33 b4 (1)
stack b33 b10 (1)
unstack b24 b29 (1)
stack b24 b21 (1)
unstack b29 b36 (1)
stack b29 b33 (1)
unstack b24 b21 (1)
stack b24 b29 (1)
unstack b21 b46 (1)
stack b21 b4 (1)
unstack b13 b9 (1)
stack b13 b46 (1)
unstack b9 b38 (1)
stack b9 b20 (1)
unstack b13 b46 (1)
stack b13 b9 (1)
unstack b21 b4 (1)
putdown b21 (1)
unstack b4 b27 (1)
stack b4 b38 (1)
pickup b21 (1)
stack b21 b4 (1)
unstack b13 b9 (1)
putdown b13 (1)
unstack b27 b37 (1)
putdown b27 (1)
unstack b21 b4 (1)
putdown b21 (1)
unstack b9 b20 (1)
stack b9 b13 (1)
unstack b4 b38 (1)
stack b4 b27 (1)
unstack b9 b13 (1)
stack b9 b46 (1)
pickup b13 (1)
stack b13 b9 (1)
unstack b37 b12 (1)
stack b37 b20 (1)
unstack b12 b44 (1)
stack b12 b13 (1)
pickup b21 (1)
stack b21 b36 (1)
unstack b37 b20 (1)
stack b37 b12 (1)
unstack b4 b27 (1)
stack b4 b21 (1)
pickup b27 (1)
stack b27 b37 (1)
unstack b4 b21 (1)
stack b4 b27 (1)
unstack b21 b36 (1)
putdown b21 (1)
unstack b44 b2 (1)
stack b44 b36 (1)
unstack b2 b3 (1)
putdown b2 (1)
unstack b44 b36 (1)
stack b44 b2 (1)
unstack b3 b48 (1)
stack b3 b44 (1)
unstack b48 b22 (1)
stack b48 b20 (1)
unstack b22 b26 (1)
stack b22 b21 (1)
unstack b48 b20 (1)
stack b48 b22 (1)
unstack b26 b40 (1)
stack b26 b24 (1)
unstack b40 b25 (1)
stack b40 b36 (1)
unstack b26 b24 (1)
stack b26 b40 (1)
unstack b3 b44 (1)
stack b3 b4 (1)
unstack b44 b2 (1)
stack b44 b48 (1)
pickup b2 (1)
stack b2 b38 (1)
unstack b44 b48 (1)
stack b44 b2 (1)
unstack b3 b4 (1)
stack b3 b26 (1)
unstack b48 b22 (1)
stack b48 b20 (1)
unstack b22 b21 (1)
stack b22 b15 (1)
pickup b21 (1)
stack b21 b25 (1)
unstack b3 b26 (1)
stack b3 b44 (1)
unstack b22 b15 (1)
stack b22 b26 (1)
unstack b48 b20 (1)
stack b48 b22 (1)
unstack b3 b44 (1)
stack b3 b20 (1)
unstack b44 b2 (1)
stack b44 b3 (1)
unstack b2 b38 (1)
stack b2 b24 (1)
unstack b44 b3 (1)
stack b44 b2 (1)
unstack b3 b20 (1)
stack b3 b44 (1)
unstack b38 b34 (1)
stack b38 b21 (1)
unstack b34 b23 (1)
putdown b34 (1)
unstack b38 b21 (1)
stack b38 b34 (1)
unstack b3 b44 (1)
stack b3 b48 (1)
unstack b23 b47 (1)
stack b23 b3 (1)
unstack b47 b14 (1)
stack b47 b4 (1)
unstack b23 b3 (1)
stack b23 b47 (1)
unstack b3 b48 (1)
putdown b3 (1)
unstack b14 b18 (1)
putdown b14 (1)
unstack b18 b28 (1)
stack b18 b21 (1)
pickup b14 (1)
stack b14 b18 (1)
unstack b28 b7 (1)
stack b28 b20 (1)
unstack b7 b31 (1)
stack b7 b48 (1)
unstack b31 b11 (1)
stack b31 b14 (1)
unstack b11 b6 (1)
stack b11 b44 (1)
pickup b3 (1)
stack b3 b11 (1)
unstack b28 b20 (1)
stack b28 b23 (1)
unstack b6 b8 (1)
stack b6 b20 (1)
unstack b8 b17 (1)
stack b8 b3 (1)
unstack b17 b32 (1)
putdown b17 (1)
unstack b28 b23 (1)
stack b28 b17 (1)
pickup b32 (1)
stack b32 b15 (1)
unstack b8 b3 (1)
stack b8 b32 (1)
unstack b38 b34 (1)
stack b38 b7 (1)
pickup b34 (1)
stack b34 b23 (1)
unstack b38 b7 (1)
stack b38 b34 (1)
unstack b8 b32 (1)
stack b8 b3 (1)
unstack b7 b48 (1)
putdown b7 (1)
unstack b48 b22 (1)
stack b48 b6 (1)
pickup b7 (1)
stack b7 b22 (1)
unstack b48 b6 (1)
stack b48 b38 (1)
unstack b7 b22 (1)
stack b7 b48 (1)
unstack b22 b26 (1)
stack b22 b7 (1)
unstack b8 b3 (1)
stack b8 b6 (1)
unstack b26 b40 (1)
stack b26 b3 (1)
unstack b40 b36 (1)
putdown b40 (1)
unstack b26 b3 (1)
stack b26 b40 (1)
unstack b8 b6 (1)
stack b8 b36 (1)
unstack b26 b40 (1)
stack b26 b3 (1)
unstack b22 b7 (1)
stack b22 b26 (1)
pickup b40 (1)
stack b40 b6 (1)
unstack b22 b26 (1)
stack b22 b31 (1)
unstack b26 b3 (1)
stack b26 b40 (1)
unstack b22 b31 (1)
stack b22 b26 (1)
unstack b7 b48 (1)
stack b7 b28 (1)
unstack b48 b38 (1)
stack b48 b22 (1)
unstack b7 b28 (1)
stack b7 b48 (1)
unstack b3 b11 (1)
stack b3 b31 (1)
unstack b11 b44 (1)
putdown b11 (1)
unstack b3 b31 (1)
stack b3 b11 (1)
unstack b44 b2 (1)
putdown b44 (1)
unstack b2 b24 (1)
stack b2 b32 (1)
pickup b44 (1)
stack b44 b2 (1)
unstack b3 b11 (1)
stack b3 b38 (1)
pickup b11 (1)
stack b11 b44 (1)
unstack b3 b38 (1)
stack b3 b11 (1)
unstack b24 b29 (1)
stack b24 b31 (1)
unstack b29 b33 (1)
stack b29 b28 (1)
unstack b33 b10 (1)
stack b33 b8 (1)
pickup b10 (1)
stack b10 b3 (1)
unstack b24 b31 (1)
stack b24 b38 (1)
unstack b29 b28 (1)
stack b29 b33 (1)
unstack b24 b38 (1)
stack b24 b29 (1)
unstack b10 b3 (1)
putdown b10 (1)
unstack b38 b34 (1)
stack b38 b7 (1)
unstack b34 b23 (1)
stack b34 b10 (1)
unstack b23 b47 (1)
stack b23 b31 (1)
unstack b34 b10 (1)
stack b34 b23 (1)
unstack b38 b7 (1)
stack b38 b34 (1)
pickup b10 (1)
stack b10 b7 (1)
unstack b47 b4 (1)
stack b47 b28 (1)
unstack b4 b27 (1)
stack b4 b38 (1)
unstack b47 b28 (1)
stack b47 b27 (1)
unstack b4 b38 (1)
putdown b4 (1)
unstack b47 b27 (1)
stack b47 b4 (1)
unstack b10 b7 (1)
stack b10 b24 (1)
unstack b38 b34 (1)
putdown b38 (1)
unstack b34 b23 (1)
stack b34 b10 (1)
unstack b23 b31 (1)
stack b23 b47 (1)
unstack b34 b10 (1)
stack b34 b23 (1)
pickup b38 (1)
stack b38 b34 (1)
unstack b10 b24 (1)
stack b10 b7 (1)
unstack b27 b37 (1)
stack b27 b3 (1)
unstack b37 b12 (1)
stack b37 b38 (1)
unstack b27 b3 (1)
stack b27 b37 (1)
unstack b10 b7 (1)
stack b10 b28 (1)
unstack b12 b13 (1)
stack b12 b10 (1)
unstack b13 b9 (1)
stack b13 b3 (1)
unstack b9 b46 (1)
stack b9 b31 (1)
unstack b13 b3 (1)
stack b13 b9 (1)
unstack b12 b10 (1)
stack b12 b13 (1)
unstack b27 b37 (1)
stack b27 b10 (1)
unstack b37 b38 (1)
stack b37 b12 (1)
unstack b27 b10 (1)
stack b27 b37 (1)
unstack b10 b28 (1)
stack b10 b24 (1)
unstack b28 b17 (1)
stack b28 b7 (1)
pickup b17 (1)
stack b17 b3 (1)
unstack b28 b7 (1)
stack b28 b17 (1)
unstack b10 b24 (1)
putdown b10 (1)
unstack b38 b34 (1)
stack b38 b24 (1)
unstack b34 b23 (1)
stack b34 b38 (1)
unstack b23 b47 (1)
stack b23 b7 (1)
unstack b34 b38 (1)
stack b34 b23 (1)
unstack b38 b24 (1)
stack b38 b34 (1)
unstack b47 b4 (1)
stack b47 b46 (1)
pickup b4 (1)
stack b4 b27 (1)
unstack b47 b46 (1)
stack b47 b4 (1)
pickup b10 (1)
stack b10 b24 (1)
unstack b38 b34 (1)
stack b38 b28 (1)
unstack b34 b23 (1)
stack b34 b46 (1)
unstack b23 b7 (1)
stack b23 b47 (1)
unstack b34 b46 (1)
stack b34 b23 (1)
unstack b38 b28 (1)
stack b38 b34 (1)
unstack b28 b17 (1)
stack b28 b10 (1)
unstack b17 b3 (1)
stack b17 b7 (1)
unstack b28 b10 (1)
stack b28 b17 (1)
unstack b38 b34 (1)
stack b38 b10 (1)
unstack b34 b23 (1)
stack b34 b3 (1)
unstack b23 b47 (1)
putdown b23 (1)
unstack b34 b3 (1)
stack b34 b23 (1)
unstack b38 b10 (1)
stack b38 b34 (1)
unstack b10 b24 (1)
putdown b10 (1)
unstack b47 b4 (1)
stack b47 b28 (1)
unstack b4 b27 (1)
stack b4 b46 (1)
unstack b47 b28 (1)
stack b47 b4 (1)
unstack b38 b34 (1)
stack b38 b28 (1)
unstack b34 b23 (1)
stack b34 b24 (1)
unstack b38 b28 (1)
stack b38 b34 (1)
pickup b23 (1)
stack b23 b47 (1)
pickup b10 (1)
stack b10 b3 (1)
unstack b38 b34 (1)
stack b38 b27 (1)
unstack b34 b24 (1)
stack b34 b23 (1)
unstack b38 b27 (1)
stack b38 b34 (1)
unstack b27 b37 (1)
stack b27 b24 (1)
unstack b37 b12 (1)
stack b37 b28 (1)
unstack b27 b24 (1)
stack b27 b37 (1)
unstack b12 b13 (1)
putdown b12 (1)
unstack b10 b3 (1)
stack b10 b24 (1)
unstack b27 b37 (1)
stack b27 b13 (1)
pickup b12 (1)
stack b12 b10 (1)
unstack b37 b28 (1)
stack b37 b12 (1)
unstack b27 b13 (1)
stack b27 b37 (1)
unstack b38 b34 (1)
putdown b38 (1)
unstack b34 b23 (1)
stack b34 b28 (1)
pickup b38 (1)
stack b38 b34 (1)
unstack b23 b47 (1)
putdown b23 (1)
unstack b47 b4 (1)
stack b47 b38 (1)
unstack b4 b46 (1)
stack b4 b27 (1)
unstack b47 b38 (1)
stack b47 b4 (1)
pickup b23 (1)
stack b23 b47 (1)
unstack b38 b34 (1)
putdown b38 (1)
unstack b34 b28 (1)
stack b34 b23 (1)
pickup b38 (1)
stack b38 b34 (1)
unstack b28 b17 (1)
stack b28 b3 (1)
unstack b17 b7 (1)
putdown b17 (1)
unstack b28 b3 (1)
stack b28 b17 (1)
unstack b13 b9 (1)
stack b13 b38 (1)
unstack b9 b31 (1)
stack b9 b28 (1)
unstack b13 b38 (1)
stack b13 b9 (1)
unstack b31 b14 (1)
stack b31 b13 (1)
unstack b14 b18 (1)
stack b14 b3 (1)
unstack b31 b13 (1)
stack b31 b14 (1)
unstack b13 b9 (1)
stack b13 b38 (1)
unstack b9 b28 (1)
stack b9 b31 (1)
unstack b13 b38 (1)
stack b13 b9 (1)
unstack b18 b21 (1)
putdown b18 (1)
unstack b21 b25 (1)
stack b21 b7 (1)
pickup b18 (1)
stack b18 b21 (1)
unstack b25 b43 (1)
stack b25 b38 (1)
pickup b43 (1)
stack b43 b46 (1)
unstack b25 b38 (1)
stack b25 b43 (1)
unstack b18 b21 (1)
stack b18 b38 (1)
unstack b21 b7 (1)
stack b21 b25 (1)
unstack b18 b38 (1)
stack b18 b21 (1)
unstack b13 b9 (1)
stack b13 b18 (1)
unstack b9 b31 (1)
stack b9 b38 (1)
unstack b13 b18 (1)
stack b13 b9 (1)
unstack b31 b14 (1)
stack b31 b7 (1)
unstack b14 b3 (1)
stack b14 b18 (1)
unstack b31 b7 (1)
stack b31 b14 (1)
unstack b13 b9 (1)
stack b13 b28 (1)
unstack b9 b38 (1)
stack b9 b31 (1)
unstack b13 b28 (1)
stack b13 b9 (1)
unstack b28 b17 (1)
stack b28 b13 (1)
pickup b17 (1)
stack b17 b3 (1)
unstack b28 b13 (1)
stack b28 b17 (1)
unstack b38 b34 (1)
putdown b38 (1)
unstack b34 b23 (1)
putdown b34 (1)
pickup b38 (1)
stack b38 b34 (1)
unstack b23 b47 (1)
stack b23 b13 (1)
unstack b47 b4 (1)
stack b47 b28 (1)
unstack b23 b13 (1)
stack b23 b47 (1)
unstack b38 b34 (1)
stack b38 b4 (1)
pickup b34 (1)
stack b34 b23 (1)
unstack b38 b4 (1)
stack b38 b34 (1)
unstack b4 b27 (1)
putdown b4 (1)
unstack b27 b37 (1)
stack b27 b7 (1)
pickup b4 (1)
stack b4 b27 (1)
unstack b37 b12 (1)
stack b37 b4 (1)
unstack b12 b10 (1)
stack b12 b13 (1)
unstack b37 b4 (1)
stack b37 b12 (1)
unstack b4 b27 (1)
stack b4 b38 (1)
unstack b27 b7 (1)
stack b27 b37 (1)
unstack b4 b38 (1)
stack b4 b27 (1)
unstack b38 b34 (1)
stack b38 b10 (1)
unstack b34 b23 (1)
putdown b34 (1)
unstack b38 b10 (1)
stack b38 b34 (1)
unstack b23 b47 (1)
stack b23 b10 (1)
unstack b47 b28 (1)
stack b47 b4 (1)
unstack b23 b10 (1)
stack b23 b47 (1)
unstack b38 b34 (1)
putdown b38 (1)
pickup b34 (1)
stack b34 b23 (1)
pickup b38 (1)
stack b38 b34 (1)
[t=448.466s, 352440 KB] Plan length: 892 step(s).
[t=448.466s, 352440 KB] Plan cost: 892
[t=448.466s, 352440 KB] Timestamp: 1685470098215 millisecond(s).
[t=448.466s, 352440 KB] Expanded 668337 state(s).
[t=448.466s, 352440 KB] Reopened 0 state(s).
[t=448.466s, 352440 KB] Evaluated 3297982 state(s).
[t=448.466s, 352440 KB] Evaluations: 3297982
[t=448.466s, 352440 KB] Generated 4715512 state(s).
[t=448.466s, 352440 KB] Dead ends: 0 state(s).
[t=448.466s, 352440 KB] Number of registered states: 3297982
[t=448.466s, 352440 KB] Int hash set load factor: 3297982/8388608 = 0.39315
[t=448.466s, 352440 KB] Int hash set resizes: 23
[t=448.466s, 352440 KB] Search time: 448.419s
[t=448.466s, 352440 KB] Total time: 448.466s
Solution found.
Peak memory: 352440 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 892 

Successful plans:
Value: 892
 sas_plan 892 

validate exit code: 0

INFO     Planner time: 449.28s
