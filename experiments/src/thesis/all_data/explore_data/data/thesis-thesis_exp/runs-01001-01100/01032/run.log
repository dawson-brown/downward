INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 90 rules.
Computing model... [0.050s CPU, 0.046s wall-clock]
1161 relevant atoms
7989 auxiliary atoms
9150 final queue length
10218 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.060s CPU, 0.069s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
45 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.013s wall-clock]
104 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
51 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
0 of 17 mutex groups necessary.
568 of 568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 147
Translator goal facts: 16
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 568
Translator axioms: 0
Translator task size: 2486
Translator peak memory: 35708 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.090s CPU, 0.103s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.002668s, 11200 KB] reading input...
[t=0.00287701s, 11324 KB] done reading input!
[t=0.00475432s, 11720 KB] Simplifying 698 unary operators... done! [650 unary operators]
[t=0.00676671s, 11720 KB] time to simplify: 0.00201239s
[t=0.0068314s, 11720 KB] Initializing additive heuristic...
[t=0.00688977s, 11720 KB] Initializing FF heuristic...
[t=0.00691461s, 11720 KB] Building successor generator...done!
[t=0.00720761s, 11720 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00725155s, 11720 KB] time for successor generation creation: 0s
[t=0.00727642s, 11720 KB] Variables: 45
[t=0.00730359s, 11720 KB] FactPairs: 147
[t=0.00732612s, 11720 KB] Bytes per state: 12
[t=0.00734866s, 11720 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00740478s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.00745409s, 11720 KB] g=0, 1 evaluated, 0 expanded
[t=0.00747829s, 11720 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.00750914s, 11720 KB] pruning method: none
[t=0.00753398s, 11720 KB] Start Timestep: 1685485104859 millisecond(s).
[t=0.00757564s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.00773081s, 11720 KB] g=1, 11 evaluated, 1 expanded
[t=0.00775508s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.00801843s, 11720 KB] g=2, 32 evaluated, 2 expanded
[t=0.00804403s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.00841373s, 11720 KB] g=3, 63 evaluated, 3 expanded
[t=0.00843717s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.0099108s, 11720 KB] g=5, 200 evaluated, 11 expanded
[t=0.0103325s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.0104027s, 11720 KB] g=6, 239 evaluated, 13 expanded
[t=0.0104275s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.0122253s, 11720 KB] g=8, 407 evaluated, 23 expanded
[t=0.0122504s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.012613s, 11720 KB] g=9, 439 evaluated, 25 expanded
[t=0.0126374s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.0130177s, 11720 KB] g=10, 473 evaluated, 27 expanded
[t=0.0142396s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.0146629s, 11720 KB] g=12, 620 evaluated, 40 expanded
[t=0.0146919s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.0151612s, 11720 KB] g=13, 665 evaluated, 42 expanded
[t=0.0151864s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.0157734s, 11720 KB] g=17, 724 evaluated, 49 expanded
[t=0.0157984s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=0.0158363s, 11720 KB] g=18, 725 evaluated, 50 expanded
[t=0.0158603s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.0162045s, 11720 KB] g=19, 757 evaluated, 52 expanded
[t=0.0162286s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.0172018s, 11720 KB] g=22, 852 evaluated, 61 expanded
[t=0.0172265s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.0176337s, 11720 KB] g=24, 891 evaluated, 65 expanded
[t=0.0180746s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.019064s, 11720 KB] g=26, 1025 evaluated, 79 expanded
[t=0.0190898s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.0192052s, 11720 KB] g=27, 1035 evaluated, 80 expanded
[t=0.0192285s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.0195454s, 11720 KB] g=29, 1068 evaluated, 83 expanded
[t=0.0195691s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.0203745s, 11720 KB] g=32, 1152 evaluated, 92 expanded
[t=0.0204001s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.020467s, 11720 KB] g=33, 1156 evaluated, 93 expanded
[t=0.0204916s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.0214727s, 11720 KB] g=36, 1261 evaluated, 110 expanded
[t=0.0214972s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.0216904s, 11720 KB] g=37, 1280 evaluated, 112 expanded
[t=0.021714s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.0217602s, 11720 KB] g=38, 1282 evaluated, 113 expanded
[t=0.0219042s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.0220934s, 11720 KB] g=40, 1314 evaluated, 115 expanded
[t=0.0221208s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.0223289s, 11720 KB] g=42, 1333 evaluated, 118 expanded
[t=0.0223528s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.0232356s, 11720 KB] g=45, 1420 evaluated, 127 expanded
[t=0.0232612s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.0235404s, 11720 KB] g=46, 1449 evaluated, 129 expanded
[t=0.0235644s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.0241938s, 11720 KB] g=48, 1512 evaluated, 138 expanded
[t=0.0242187s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.024506s, 11720 KB] g=49, 1538 evaluated, 140 expanded
[t=0.0245311s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.0247319s, 11720 KB] g=50, 1558 evaluated, 142 expanded
[t=0.0256716s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.025761s, 11720 KB] g=52, 1666 evaluated, 160 expanded
[t=0.0257864s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.0261468s, 11720 KB] g=54, 1701 evaluated, 164 expanded
[t=0.0261705s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.0263365s, 11720 KB] g=55, 1718 evaluated, 165 expanded
[t=0.0263605s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.0268877s, 11720 KB] g=57, 1774 evaluated, 172 expanded
[t=0.0269141s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.0270324s, 11720 KB] g=58, 1785 evaluated, 173 expanded
[t=0.0270611s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.0272843s, 11720 KB] g=59, 1809 evaluated, 175 expanded
[t=0.0975367s, 12252 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.10146s, 12252 KB] g=64, 10488 evaluated, 1327 expanded
[t=0.101512s, 12252 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.101654s, 12252 KB] g=65, 10500 evaluated, 1329 expanded
[t=0.101678s, 12252 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.10186s, 12252 KB] g=66, 10518 evaluated, 1331 expanded
[t=0.101885s, 12252 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.102161s, 12252 KB] g=67, 10548 evaluated, 1333 expanded
[t=0.193362s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.196189s, 12912 KB] g=76, 21931 evaluated, 2737 expanded
[t=0.196222s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.196342s, 12912 KB] g=77, 21943 evaluated, 2738 expanded
[t=0.196366s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.196724s, 12912 KB] g=78, 21981 evaluated, 2740 expanded
[t=0.196748s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.196867s, 12912 KB] g=79, 21995 evaluated, 2742 expanded
[t=0.196891s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.197148s, 12912 KB] g=80, 22028 evaluated, 2744 expanded
[t=0.197209s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.197344s, 12912 KB] g=81, 22049 evaluated, 2746 expanded
[t=0.197368s, 12912 KB] Solution found!
[t=0.197462s, 12912 KB] Actual search time: 0.189886s
calibrate rover0 camera5 objective0 waypoint8 (1)
calibrate rover0 camera2 objective0 waypoint8 (1)
take_image rover0 waypoint8 objective0 camera5 colour (1)
calibrate rover0 camera4 objective0 waypoint8 (1)
take_image rover0 waypoint8 objective0 camera4 high_res (1)
take_image rover0 waypoint8 objective0 camera2 low_res (1)
navigate rover0 waypoint8 waypoint1 (1)
communicate_image_data rover0 general objective0 low_res waypoint1 waypoint11 (1)
communicate_image_data rover0 general objective0 high_res waypoint1 waypoint11 (1)
communicate_image_data rover0 general objective0 colour waypoint1 waypoint11 (1)
sample_rock rover0 rover0store waypoint1 (1)
navigate rover1 waypoint5 waypoint2 (1)
communicate_rock_data rover0 general waypoint1 waypoint1 waypoint11 (1)
navigate rover0 waypoint1 waypoint10 (1)
drop rover0 rover0store (1)
sample_rock rover0 rover0store waypoint10 (1)
communicate_rock_data rover0 general waypoint10 waypoint10 waypoint11 (1)
navigate rover1 waypoint2 waypoint5 (1)
sample_rock rover1 rover1store waypoint5 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint5 waypoint2 (1)
communicate_rock_data rover1 general waypoint5 waypoint2 waypoint11 (1)
sample_rock rover1 rover1store waypoint2 (1)
drop rover1 rover1store (1)
communicate_rock_data rover1 general waypoint2 waypoint2 waypoint11 (1)
navigate rover1 waypoint2 waypoint5 (1)
navigate rover1 waypoint5 waypoint4 (1)
navigate rover0 waypoint10 waypoint1 (1)
sample_rock rover1 rover1store waypoint4 (1)
drop rover1 rover1store (1)
communicate_rock_data rover1 general waypoint4 waypoint4 waypoint11 (1)
navigate rover1 waypoint4 waypoint18 (1)
sample_rock rover1 rover1store waypoint18 (1)
communicate_rock_data rover1 general waypoint18 waypoint18 waypoint11 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint18 waypoint4 (1)
navigate rover1 waypoint4 waypoint5 (1)
drop rover0 rover0store (1)
navigate rover1 waypoint5 waypoint3 (1)
navigate rover1 waypoint3 waypoint16 (1)
navigate rover0 waypoint1 waypoint9 (1)
sample_rock rover1 rover1store waypoint16 (1)
communicate_rock_data rover1 general waypoint16 waypoint16 waypoint11 (1)
drop rover1 rover1store (1)
sample_rock rover0 rover0store waypoint9 (1)
navigate rover0 waypoint9 waypoint1 (1)
communicate_rock_data rover0 general waypoint9 waypoint1 waypoint11 (1)
drop rover0 rover0store (1)
navigate rover1 waypoint16 waypoint3 (1)
navigate rover1 waypoint3 waypoint6 (1)
sample_rock rover1 rover1store waypoint6 (1)
communicate_rock_data rover1 general waypoint6 waypoint6 waypoint11 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint6 waypoint3 (1)
sample_rock rover1 rover1store waypoint3 (1)
navigate rover1 waypoint3 waypoint16 (1)
communicate_rock_data rover1 general waypoint3 waypoint16 waypoint11 (1)
navigate rover1 waypoint16 waypoint3 (1)
navigate rover1 waypoint3 waypoint5 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint5 waypoint12 (1)
sample_rock rover1 rover1store waypoint12 (1)
navigate rover1 waypoint12 waypoint5 (1)
navigate rover1 waypoint5 waypoint2 (1)
communicate_rock_data rover1 general waypoint12 waypoint2 waypoint11 (1)
navigate rover1 waypoint2 waypoint5 (1)
navigate rover1 waypoint5 waypoint8 (1)
calibrate rover1 camera1 objective0 waypoint8 (1)
take_image rover1 waypoint8 objective0 camera1 high_res (1)
navigate rover0 waypoint1 waypoint8 (1)
navigate rover0 waypoint8 waypoint17 (1)
calibrate rover1 camera3 objective0 waypoint8 (1)
sample_rock rover0 rover0store waypoint17 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint17 waypoint8 (1)
sample_rock rover0 rover0store waypoint8 (1)
navigate rover0 waypoint8 waypoint1 (1)
communicate_rock_data rover0 general waypoint17 waypoint1 waypoint11 (1)
communicate_rock_data rover0 general waypoint8 waypoint1 waypoint11 (1)
[t=0.197495s, 12912 KB] Plan length: 79 step(s).
[t=0.197495s, 12912 KB] Plan cost: 79
[t=0.197495s, 12912 KB] Timestamp: 1685485105051 millisecond(s).
[t=0.197495s, 12912 KB] Expanded 2748 state(s).
[t=0.197495s, 12912 KB] Reopened 0 state(s).
[t=0.197495s, 12912 KB] Evaluated 22057 state(s).
[t=0.197495s, 12912 KB] Evaluations: 22057
[t=0.197495s, 12912 KB] Generated 49433 state(s).
[t=0.197495s, 12912 KB] Dead ends: 0 state(s).
[t=0.197495s, 12912 KB] Number of registered states: 22057
[t=0.197495s, 12912 KB] Int hash set load factor: 22057/32768 = 0.673126
[t=0.197495s, 12912 KB] Int hash set resizes: 15
[t=0.197495s, 12912 KB] Search time: 0.190146s
[t=0.197495s, 12912 KB] Total time: 0.197495s
Solution found.
Peak memory: 12912 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 79 

Successful plans:
Value: 79
 sas_plan 79 

validate exit code: 0

INFO     Planner time: 0.39s
