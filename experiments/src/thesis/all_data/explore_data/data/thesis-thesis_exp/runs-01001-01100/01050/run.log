INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 90 rules.
Computing model... [0.070s CPU, 0.067s wall-clock]
5381 relevant atoms
7594 auxiliary atoms
12975 final queue length
21486 total queue pushes
Completing instantiation... [0.110s CPU, 0.103s wall-clock]
Instantiating: [0.190s CPU, 0.182s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
317 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.006s wall-clock]
Translating task: [0.130s CPU, 0.126s wall-clock]
1906 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
34 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.051s wall-clock]
Reordering and filtering variables...
81 of 333 variables necessary.
0 of 22 mutex groups necessary.
2528 of 4362 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 81
Translator derived variables: 0
Translator facts: 233
Translator goal facts: 23
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 2528
Translator axioms: 0
Translator task size: 10704
Translator peak memory: 48412 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.410s CPU, 0.403s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.00796953s, 11828 KB] done reading input!
[t=0.00902547s, 12360 KB] Simplifying 2907 unary operators... done! [1253 unary operators]
[t=0.0118301s, 12360 KB] time to simplify: 0.00287753s
[t=0.0119349s, 12360 KB] Initializing additive heuristic...
[t=0.0120167s, 12360 KB] Initializing FF heuristic...
[t=0.0120418s, 12360 KB] Building successor generator...done!
[t=0.0127877s, 12564 KB] peak memory difference for successor generator creation: 204 KB
[t=0.0128427s, 12564 KB] time for successor generation creation: 0s
[t=0.0128677s, 12564 KB] Variables: 81
[t=0.0129057s, 12564 KB] FactPairs: 233
[t=0.0129281s, 12564 KB] Bytes per state: 16
[t=0.0129506s, 12564 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0130088s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.0130751s, 12564 KB] g=0, 1 evaluated, 0 expanded
[t=0.013099s, 12564 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.0131276s, 12564 KB] pruning method: none
[t=0.0131509s, 12564 KB] Start Timestep: 1685485092827 millisecond(s).
[t=0.0131939s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.0132521s, 12564 KB] g=1, 2 evaluated, 1 expanded
[t=0.0132754s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.0133254s, 12564 KB] g=1, 3 evaluated, 1 expanded
[t=0.0133482s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.0133948s, 12564 KB] g=1, 4 evaluated, 1 expanded
[t=0.0134175s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.0140699s, 12564 KB] g=2, 35 evaluated, 2 expanded
[t=0.014095s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.0144554s, 12564 KB] g=3, 52 evaluated, 3 expanded
[t=0.0144796s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.0152595s, 12564 KB] g=4, 92 evaluated, 5 expanded
[t=0.0155838s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.0163797s, 12564 KB] g=5, 145 evaluated, 7 expanded
[t=0.0164054s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.0168754s, 12564 KB] g=6, 168 evaluated, 9 expanded
[t=0.0168986s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.0178202s, 12564 KB] g=7, 216 evaluated, 11 expanded
[t=0.0178444s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.0188325s, 12564 KB] g=8, 265 evaluated, 13 expanded
[t=0.0194984s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.0202866s, 12564 KB] g=10, 339 evaluated, 16 expanded
[t=0.0203119s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.0213529s, 12564 KB] g=11, 391 evaluated, 18 expanded
[t=0.0213781s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.0227758s, 12564 KB] g=13, 464 evaluated, 21 expanded
[t=0.0233914s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.0238033s, 12564 KB] g=14, 513 evaluated, 23 expanded
[t=0.0313623s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.0323414s, 12564 KB] g=18, 976 evaluated, 44 expanded
[t=0.0353289s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.0374315s, 12564 KB] g=22, 1246 evaluated, 58 expanded
[t=0.0374589s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.0376833s, 12564 KB] g=23, 1257 evaluated, 59 expanded
[t=0.0392407s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.0426784s, 12564 KB] g=25, 1524 evaluated, 74 expanded
[t=0.0432147s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.0469538s, 12564 KB] g=27, 1758 evaluated, 89 expanded
[t=0.0471789s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.0509371s, 12564 KB] g=29, 1967 evaluated, 103 expanded
[t=0.0511531s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.0515975s, 12564 KB] g=30, 1999 evaluated, 105 expanded
[t=0.0551228s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.0560088s, 12564 KB] g=32, 2238 evaluated, 122 expanded
[t=0.0560363s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.0568903s, 12564 KB] g=33, 2280 evaluated, 124 expanded
[t=0.0569154s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.0576833s, 12564 KB] g=34, 2321 evaluated, 126 expanded
[t=0.0577082s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.0580972s, 12564 KB] g=35, 2342 evaluated, 127 expanded
[t=0.0589666s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.0590144s, 12564 KB] g=36, 2385 evaluated, 129 expanded
[t=0.0590396s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.0593849s, 12564 KB] g=37, 2404 evaluated, 130 expanded
[t=0.0594101s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=0.0597336s, 12564 KB] g=38, 2422 evaluated, 131 expanded
[t=0.0908279s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.0922396s, 12564 KB] g=41, 4200 evaluated, 259 expanded
[t=0.0922714s, 12564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.0929556s, 12564 KB] g=42, 4239 evaluated, 261 expanded
[t=0.130721s, 12680 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.132647s, 12680 KB] g=47, 6415 evaluated, 436 expanded
[t=0.132679s, 12680 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.133097s, 12680 KB] g=48, 6436 evaluated, 437 expanded
[t=0.133121s, 12680 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.133671s, 12680 KB] g=49, 6464 evaluated, 439 expanded
[t=0.154539s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.155247s, 12812 KB] g=52, 7479 evaluated, 523 expanded
[t=0.155279s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.155446s, 12812 KB] g=53, 7487 evaluated, 524 expanded
[t=0.158455s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.159761s, 12812 KB] g=55, 7714 evaluated, 541 expanded
[t=0.159789s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.160194s, 12812 KB] g=56, 7736 evaluated, 542 expanded
[t=0.162386s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.163033s, 12812 KB] g=58, 7889 evaluated, 552 expanded
[t=0.163061s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.165364s, 12812 KB] g=60, 8019 evaluated, 563 expanded
[t=0.165393s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.166164s, 12812 KB] g=61, 8059 evaluated, 565 expanded
[t=0.166308s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.169093s, 12812 KB] g=63, 8217 evaluated, 577 expanded
[t=0.169121s, 12812 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.16969s, 12812 KB] g=64, 8246 evaluated, 579 expanded
[t=0.182232s, 12944 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.185509s, 12944 KB] g=68, 9095 evaluated, 657 expanded
[t=0.185541s, 12944 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.185867s, 12944 KB] g=69, 9113 evaluated, 658 expanded
[t=0.18615s, 12944 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.186509s, 12944 KB] g=70, 9143 evaluated, 660 expanded
[t=0.198082s, 12944 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.200104s, 12944 KB] g=74, 9913 evaluated, 723 expanded
[t=0.200136s, 12944 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.200459s, 12944 KB] g=75, 9931 evaluated, 724 expanded
[t=0.200483s, 12944 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.200947s, 12944 KB] g=76, 9958 evaluated, 726 expanded
[t=0.601455s, 14516 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.604626s, 14516 KB] g=83, 32310 evaluated, 2788 expanded
[t=0.604658s, 14516 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.604895s, 14516 KB] g=84, 32323 evaluated, 2789 expanded
[t=0.605374s, 14516 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.609036s, 14516 KB] g=86, 32552 evaluated, 2809 expanded
[t=0.609323s, 14516 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.609414s, 14516 KB] g=87, 32570 evaluated, 2811 expanded
[t=0.609439s, 14516 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.610065s, 14516 KB] g=88, 32604 evaluated, 2813 expanded
[t=0.629265s, 14520 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.630473s, 14520 KB] g=91, 33768 evaluated, 2929 expanded
[t=0.630505s, 14520 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.630971s, 14520 KB] g=92, 33793 evaluated, 2931 expanded
[t=0.630996s, 14520 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.631529s, 14520 KB] g=93, 33823 evaluated, 2933 expanded
[t=0.633161s, 14520 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.63373s, 14520 KB] g=95, 33951 evaluated, 2945 expanded
[t=0.633756s, 14520 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.636388s, 14520 KB] g=97, 34113 evaluated, 2959 expanded
[t=0.636414s, 14520 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.636789s, 14520 KB] g=98, 34137 evaluated, 2961 expanded
[t=0.63724s, 14520 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.637368s, 14520 KB] g=99, 34172 evaluated, 2963 expanded
[t=0.637393s, 14520 KB] Solution found!
[t=0.637477s, 14520 KB] Actual search time: 0.624283s
navigate rover0 waypoint13 waypoint7 (1)
sample_rock rover3 rover3store waypoint3 (1)
navigate rover3 waypoint3 waypoint11 (1)
communicate_rock_data rover3 general waypoint3 waypoint11 waypoint1 (1)
calibrate rover0 camera0 objective1 waypoint7 (1)
calibrate rover3 camera7 objective4 waypoint11 (1)
take_image rover3 waypoint11 objective12 camera7 colour (1)
communicate_image_data rover3 general objective12 colour waypoint11 waypoint1 (1)
calibrate rover3 camera7 objective4 waypoint11 (1)
take_image rover3 waypoint11 objective11 camera7 colour (1)
communicate_image_data rover3 general objective11 colour waypoint11 waypoint1 (1)
calibrate rover3 camera7 objective4 waypoint11 (1)
take_image rover3 waypoint11 objective7 camera7 colour (1)
communicate_image_data rover3 general objective7 colour waypoint11 waypoint1 (1)
calibrate rover3 camera7 objective4 waypoint11 (1)
navigate rover1 waypoint1 waypoint9 (1)
take_image rover0 waypoint7 objective7 camera0 high_res (1)
calibrate rover0 camera0 objective1 waypoint7 (1)
navigate rover3 waypoint11 waypoint1 (1)
take_image rover3 waypoint1 objective1 camera7 colour (1)
sample_rock rover1 rover1store waypoint9 (1)
drop rover1 rover1store (1)
communicate_rock_data rover1 general waypoint9 waypoint9 waypoint1 (1)
take_image rover0 waypoint7 objective19 camera0 high_res (1)
calibrate rover0 camera0 objective1 waypoint7 (1)
take_image rover0 waypoint7 objective10 camera0 colour (1)
calibrate rover0 camera0 objective1 waypoint7 (1)
take_image rover0 waypoint7 objective20 camera0 high_res (1)
calibrate rover0 camera0 objective1 waypoint7 (1)
take_image rover0 waypoint7 objective21 camera0 colour (1)
sample_rock rover0 rover0store waypoint7 (1)
navigate rover0 waypoint7 waypoint13 (1)
communicate_image_data rover0 general objective7 high_res waypoint13 waypoint1 (1)
communicate_image_data rover0 general objective21 colour waypoint13 waypoint1 (1)
communicate_image_data rover0 general objective20 high_res waypoint13 waypoint1 (1)
communicate_image_data rover0 general objective19 high_res waypoint13 waypoint1 (1)
communicate_image_data rover0 general objective10 colour waypoint13 waypoint1 (1)
communicate_rock_data rover0 general waypoint7 waypoint13 waypoint1 (1)
navigate rover1 waypoint9 waypoint1 (1)
drop rover0 rover0store (1)
sample_soil rover0 rover0store waypoint13 (1)
communicate_soil_data rover0 general waypoint13 waypoint13 waypoint1 (1)
navigate rover2 waypoint11 waypoint13 (1)
calibrate rover0 camera0 objective1 waypoint13 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint13 waypoint1 (1)
navigate rover0 waypoint1 waypoint2 (1)
sample_soil rover0 rover0store waypoint2 (1)
communicate_soil_data rover0 general waypoint2 waypoint2 waypoint1 (1)
navigate rover1 waypoint1 waypoint10 (1)
sample_rock rover1 rover1store waypoint10 (1)
drop rover1 rover1store (1)
communicate_rock_data rover1 general waypoint10 waypoint10 waypoint1 (1)
sample_soil rover1 rover1store waypoint10 (1)
navigate rover1 waypoint10 waypoint1 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint1 waypoint0 (1)
communicate_soil_data rover1 general waypoint10 waypoint0 waypoint1 (1)
sample_soil rover1 rover1store waypoint0 (1)
communicate_soil_data rover1 general waypoint0 waypoint0 waypoint1 (1)
drop rover1 rover1store (1)
sample_rock rover1 rover1store waypoint0 (1)
communicate_rock_data rover1 general waypoint0 waypoint0 waypoint1 (1)
drop rover1 rover1store (1)
navigate rover2 waypoint13 waypoint3 (1)
navigate rover0 waypoint2 waypoint1 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint1 waypoint6 (1)
sample_soil rover0 rover0store waypoint6 (1)
communicate_soil_data rover0 general waypoint6 waypoint6 waypoint1 (1)
navigate rover3 waypoint1 waypoint11 (1)
navigate rover0 waypoint6 waypoint1 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint1 waypoint9 (1)
sample_soil rover0 rover0store waypoint9 (1)
communicate_soil_data rover0 general waypoint9 waypoint9 waypoint1 (1)
calibrate rover3 camera7 objective4 waypoint11 (1)
navigate rover3 waypoint11 waypoint1 (1)
navigate rover0 waypoint9 waypoint1 (1)
take_image rover0 waypoint1 objective12 camera0 colour (1)
drop rover0 rover0store (1)
navigate rover0 waypoint1 waypoint8 (1)
sample_soil rover0 rover0store waypoint8 (1)
communicate_soil_data rover0 general waypoint8 waypoint8 waypoint1 (1)
navigate rover0 waypoint8 waypoint14 (1)
drop rover0 rover0store (1)
sample_soil rover0 rover0store waypoint14 (1)
communicate_soil_data rover0 general waypoint14 waypoint14 waypoint1 (1)
navigate rover1 waypoint0 waypoint4 (1)
sample_soil rover1 rover1store waypoint4 (1)
navigate rover1 waypoint4 waypoint0 (1)
communicate_soil_data rover1 general waypoint4 waypoint0 waypoint1 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint0 waypoint1 (1)
navigate rover1 waypoint1 waypoint8 (1)
navigate rover1 waypoint8 waypoint5 (1)
sample_soil rover1 rover1store waypoint5 (1)
navigate rover1 waypoint5 waypoint8 (1)
communicate_soil_data rover1 general waypoint5 waypoint8 waypoint1 (1)
[t=0.637518s, 14520 KB] Plan length: 99 step(s).
[t=0.637518s, 14520 KB] Plan cost: 99
[t=0.637518s, 14520 KB] Timestamp: 1685485093456 millisecond(s).
[t=0.637518s, 14520 KB] Expanded 2964 state(s).
[t=0.637518s, 14520 KB] Reopened 0 state(s).
[t=0.637518s, 14520 KB] Evaluated 34178 state(s).
[t=0.637518s, 14520 KB] Evaluations: 34178
[t=0.637518s, 14520 KB] Generated 133020 state(s).
[t=0.637518s, 14520 KB] Dead ends: 0 state(s).
[t=0.637518s, 14520 KB] Number of registered states: 34178
[t=0.637518s, 14520 KB] Int hash set load factor: 34178/65536 = 0.521515
[t=0.637518s, 14520 KB] Int hash set resizes: 16
[t=0.637518s, 14520 KB] Search time: 0.624567s
[t=0.637518s, 14520 KB] Total time: 0.637518s
Solution found.
Peak memory: 14520 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 99 

Successful plans:
Value: 99
 sas_plan 99 

validate exit code: 0

INFO     Planner time: 1.14s
