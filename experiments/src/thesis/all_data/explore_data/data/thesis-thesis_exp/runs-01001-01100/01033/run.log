INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 90 rules.
Computing model... [0.030s CPU, 0.039s wall-clock]
1002 relevant atoms
6690 auxiliary atoms
7692 final queue length
8303 total queue pushes
Completing instantiation... [0.010s CPU, 0.009s wall-clock]
Instantiating: [0.050s CPU, 0.057s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.009s wall-clock]
110 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
27 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
49 of 51 variables necessary.
0 of 21 mutex groups necessary.
423 of 428 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 146
Translator goal facts: 19
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 423
Translator axioms: 0
Translator task size: 1882
Translator peak memory: 35196 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.070s CPU, 0.083s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.0037608s, 11324 KB] done reading input!
[t=0.00429955s, 11588 KB] Simplifying 543 unary operators... done! [507 unary operators]
[t=0.00620463s, 11588 KB] time to simplify: 0.00190508s
[t=0.00626054s, 11588 KB] Initializing additive heuristic...
[t=0.00631371s, 11588 KB] Initializing FF heuristic...
[t=0.00633683s, 11588 KB] Building successor generator...done!
[t=0.00658718s, 11720 KB] peak memory difference for successor generator creation: 132 KB
[t=0.0066293s, 11720 KB] time for successor generation creation: 0s
[t=0.00665362s, 11720 KB] Variables: 49
[t=0.00668008s, 11720 KB] FactPairs: 146
[t=0.00670242s, 11720 KB] Bytes per state: 8
[t=0.00672516s, 11720 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00677821s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.00682576s, 11720 KB] g=0, 1 evaluated, 0 expanded
[t=0.00685042s, 11720 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.00688028s, 11720 KB] pruning method: none
[t=0.006904s, 11720 KB] Start Timestep: 1685446627457 millisecond(s).
[t=0.00694659s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.00712718s, 11720 KB] g=1, 12 evaluated, 1 expanded
[t=0.00752133s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.00795118s, 11720 KB] g=3, 88 evaluated, 6 expanded
[t=0.00797663s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.00834488s, 11720 KB] g=4, 124 evaluated, 8 expanded
[t=0.00836879s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.0087078s, 11720 KB] g=5, 156 evaluated, 10 expanded
[t=0.00873167s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.009516s, 11720 KB] g=7, 234 evaluated, 17 expanded
[t=0.00954093s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.00978405s, 11720 KB] g=8, 256 evaluated, 19 expanded
[t=0.00980841s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.010459s, 11720 KB] g=10, 319 evaluated, 27 expanded
[t=0.0104836s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.0111633s, 11720 KB] g=12, 387 evaluated, 35 expanded
[t=0.0113693s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.0114616s, 11720 KB] g=13, 411 evaluated, 37 expanded
[t=0.0114853s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.0132487s, 11720 KB] g=17, 595 evaluated, 60 expanded
[t=0.013274s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.0134961s, 11720 KB] g=18, 617 evaluated, 62 expanded
[t=0.0135208s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.0137052s, 11720 KB] g=19, 634 evaluated, 64 expanded
[t=0.0137292s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.0138942s, 11720 KB] g=20, 650 evaluated, 66 expanded
[t=0.0139175s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.0140597s, 11720 KB] g=21, 664 evaluated, 67 expanded
[t=0.0140828s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.0142848s, 11720 KB] g=22, 685 evaluated, 69 expanded
[t=0.0143092s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.0148899s, 11720 KB] g=24, 753 evaluated, 76 expanded
[t=0.014914s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.0151829s, 11720 KB] g=25, 783 evaluated, 78 expanded
[t=0.0152137s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.0158109s, 11720 KB] g=27, 856 evaluated, 86 expanded
[t=0.0158352s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.016113s, 11720 KB] g=28, 885 evaluated, 88 expanded
[t=0.0161363s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.0167095s, 11720 KB] g=30, 954 evaluated, 96 expanded
[t=0.0191068s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.0230374s, 11720 KB] g=33, 1674 evaluated, 193 expanded
[t=0.0230798s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.0236338s, 11720 KB] g=35, 1738 evaluated, 201 expanded
[t=0.0236581s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.0240773s, 11720 KB] g=37, 1786 evaluated, 206 expanded
[t=0.0241024s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.0243079s, 11720 KB] g=38, 1809 evaluated, 208 expanded
[t=0.0243319s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.0245992s, 11720 KB] g=40, 1836 evaluated, 212 expanded
[t=0.0269327s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.0281224s, 11720 KB] g=44, 2239 evaluated, 263 expanded
[t=0.0281468s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.028344s, 11720 KB] g=45, 2261 evaluated, 264 expanded
[t=0.028368s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.0289371s, 11720 KB] g=47, 2324 evaluated, 271 expanded
[t=0.0388628s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.0408007s, 11832 KB] g=51, 3751 evaluated, 475 expanded
[t=0.0408347s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.0409576s, 11832 KB] g=52, 3762 evaluated, 476 expanded
[t=0.040981s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.0412259s, 11832 KB] g=53, 3788 evaluated, 478 expanded
[t=0.0507788s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.054122s, 11832 KB] g=57, 5296 evaluated, 681 expanded
[t=0.054152s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.0543481s, 11832 KB] g=58, 5318 evaluated, 683 expanded
[t=0.0543725s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.0546022s, 11832 KB] g=59, 5344 evaluated, 685 expanded
[t=0.066688s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.0679361s, 11968 KB] g=64, 6980 evaluated, 932 expanded
[t=0.0679667s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.0681563s, 11968 KB] g=65, 7002 evaluated, 933 expanded
[t=0.0681796s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.0686666s, 11968 KB] g=67, 7063 evaluated, 940 expanded
[t=0.0746031s, 12100 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.0772212s, 12100 KB] g=71, 8036 evaluated, 1113 expanded
[t=0.0772511s, 12100 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.0774309s, 12100 KB] g=72, 8057 evaluated, 1114 expanded
[t=0.0774555s, 12100 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.0778089s, 12100 KB] g=74, 8100 evaluated, 1119 expanded
[t=0.086522s, 12100 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.087737s, 12100 KB] g=78, 9317 evaluated, 1324 expanded
[t=0.0877678s, 12100 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.0883146s, 12100 KB] g=80, 9385 evaluated, 1332 expanded
[t=0.0883401s, 12100 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.0894666s, 12100 KB] g=83, 9530 evaluated, 1351 expanded
[t=0.0894925s, 12100 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.0895956s, 12100 KB] g=84, 9541 evaluated, 1352 expanded
[t=0.122417s, 12364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.123141s, 12364 KB] g=89, 13737 evaluated, 2088 expanded
[t=0.123172s, 12364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.123299s, 12364 KB] g=90, 13750 evaluated, 2090 expanded
[t=0.123323s, 12364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.123491s, 12364 KB] g=91, 13769 evaluated, 2092 expanded
[t=0.123515s, 12364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.1238s, 12364 KB] g=92, 13800 evaluated, 2094 expanded
[t=0.123824s, 12364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.124478s, 12364 KB] g=94, 13885 evaluated, 2103 expanded
[t=0.14226s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.145253s, 12616 KB] g=99, 16467 evaluated, 2474 expanded
[t=0.145284s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.145453s, 12616 KB] g=100, 16485 evaluated, 2476 expanded
[t=0.145476s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.145682s, 12616 KB] g=101, 16508 evaluated, 2478 expanded
[t=0.145706s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.145916s, 12616 KB] g=102, 16536 evaluated, 2480 expanded
[t=0.146132s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.146207s, 12616 KB] g=104, 16567 evaluated, 2485 expanded
[t=0.14623s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.14636s, 12616 KB] g=105, 16582 evaluated, 2487 expanded
[t=0.146385s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.146565s, 12616 KB] g=106, 16604 evaluated, 2489 expanded
[t=0.146589s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.146732s, 12616 KB] g=107, 16622 evaluated, 2491 expanded
[t=0.146756s, 12616 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.146866s, 12616 KB] g=108, 16638 evaluated, 2493 expanded
[t=0.14689s, 12616 KB] Solution found!
[t=0.147036s, 12616 KB] Actual search time: 0.140089s
calibrate rover0 camera5 objective0 waypoint22 (1)
calibrate rover1 camera3 objective0 waypoint3 (1)
take_image rover1 waypoint3 objective0 camera3 high_res (1)
take_image rover0 waypoint22 objective0 camera5 low_res (1)
navigate rover0 waypoint22 waypoint19 (1)
navigate rover1 waypoint3 waypoint2 (1)
navigate rover0 waypoint19 waypoint20 (1)
communicate_image_data rover0 general objective0 low_res waypoint20 waypoint13 (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_image_data rover1 general objective0 high_res waypoint18 waypoint13 (1)
sample_soil rover0 rover0store waypoint20 (1)
communicate_soil_data rover0 general waypoint20 waypoint20 waypoint13 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint20 waypoint19 (1)
sample_soil rover0 rover0store waypoint19 (1)
navigate rover0 waypoint19 waypoint1 (1)
drop rover0 rover0store (1)
sample_soil rover0 rover0store waypoint1 (1)
navigate rover0 waypoint1 waypoint19 (1)
navigate rover0 waypoint19 waypoint18 (1)
communicate_soil_data rover0 general waypoint1 waypoint18 waypoint13 (1)
communicate_soil_data rover0 general waypoint19 waypoint18 waypoint13 (1)
sample_rock rover1 rover1store waypoint18 (1)
communicate_rock_data rover1 general waypoint18 waypoint18 waypoint13 (1)
drop rover1 rover1store (1)
sample_soil rover1 rover1store waypoint18 (1)
communicate_soil_data rover1 general waypoint18 waypoint18 waypoint13 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint3 (1)
navigate rover1 waypoint3 waypoint9 (1)
sample_rock rover1 rover1store waypoint9 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint9 waypoint11 (1)
communicate_rock_data rover1 general waypoint9 waypoint11 waypoint13 (1)
sample_rock rover1 rover1store waypoint11 (1)
communicate_rock_data rover1 general waypoint11 waypoint11 waypoint13 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint11 waypoint9 (1)
navigate rover1 waypoint9 waypoint3 (1)
calibrate rover1 camera3 objective0 waypoint3 (1)
navigate rover1 waypoint3 waypoint17 (1)
sample_soil rover1 rover1store waypoint17 (1)
navigate rover1 waypoint17 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint3 waypoint25 (1)
communicate_soil_data rover1 general waypoint17 waypoint25 waypoint13 (1)
navigate rover1 waypoint25 waypoint6 (1)
navigate rover0 waypoint18 waypoint19 (1)
sample_rock rover1 rover1store waypoint6 (1)
navigate rover1 waypoint6 waypoint25 (1)
communicate_rock_data rover1 general waypoint6 waypoint25 waypoint13 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint25 waypoint4 (1)
navigate rover0 waypoint19 waypoint1 (1)
sample_rock rover1 rover1store waypoint4 (1)
navigate rover1 waypoint4 waypoint25 (1)
communicate_rock_data rover1 general waypoint4 waypoint25 waypoint13 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint25 waypoint3 (1)
navigate rover1 waypoint3 waypoint2 (1)
navigate rover1 waypoint2 waypoint16 (1)
sample_rock rover1 rover1store waypoint16 (1)
navigate rover1 waypoint16 waypoint2 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_rock_data rover1 general waypoint16 waypoint18 waypoint13 (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint12 (1)
sample_rock rover1 rover1store waypoint12 (1)
navigate rover1 waypoint12 waypoint2 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_rock_data rover1 general waypoint12 waypoint18 waypoint13 (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint8 (1)
sample_rock rover1 rover1store waypoint8 (1)
drop rover1 rover1store (1)
sample_soil rover1 rover1store waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_soil_data rover1 general waypoint8 waypoint18 waypoint13 (1)
communicate_rock_data rover1 general waypoint8 waypoint18 waypoint13 (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint8 (1)
navigate rover1 waypoint8 waypoint21 (1)
sample_rock rover1 rover1store waypoint21 (1)
navigate rover1 waypoint21 waypoint8 (1)
navigate rover1 waypoint8 waypoint2 (1)
navigate rover1 waypoint2 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint3 waypoint25 (1)
communicate_rock_data rover1 general waypoint21 waypoint25 waypoint13 (1)
navigate rover1 waypoint25 waypoint3 (1)
navigate rover1 waypoint3 waypoint14 (1)
navigate rover1 waypoint14 waypoint0 (1)
sample_rock rover1 rover1store waypoint0 (1)
navigate rover1 waypoint0 waypoint14 (1)
navigate rover1 waypoint14 waypoint3 (1)
navigate rover1 waypoint3 waypoint22 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint22 waypoint15 (1)
sample_soil rover1 rover1store waypoint15 (1)
navigate rover1 waypoint15 waypoint22 (1)
navigate rover1 waypoint22 waypoint24 (1)
communicate_rock_data rover1 general waypoint0 waypoint24 waypoint13 (1)
communicate_soil_data rover1 general waypoint15 waypoint24 waypoint13 (1)
[t=0.147076s, 12616 KB] Plan length: 108 step(s).
[t=0.147076s, 12616 KB] Plan cost: 108
[t=0.147076s, 12616 KB] Timestamp: 1685446627601 millisecond(s).
[t=0.147076s, 12616 KB] Expanded 2495 state(s).
[t=0.147076s, 12616 KB] Reopened 0 state(s).
[t=0.147076s, 12616 KB] Evaluated 16656 state(s).
[t=0.147076s, 12616 KB] Evaluations: 16656
[t=0.147076s, 12616 KB] Generated 40595 state(s).
[t=0.147076s, 12616 KB] Dead ends: 0 state(s).
[t=0.147076s, 12616 KB] Number of registered states: 16656
[t=0.147076s, 12616 KB] Int hash set load factor: 16656/32768 = 0.508301
[t=0.147076s, 12616 KB] Int hash set resizes: 15
[t=0.147076s, 12616 KB] Search time: 0.140351s
[t=0.147076s, 12616 KB] Total time: 0.147076s
Solution found.
Peak memory: 12616 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 108 

Successful plans:
Value: 108
 sas_plan 108 

validate exit code: 0

INFO     Planner time: 0.33s
