INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 90 rules.
Computing model... [0.050s CPU, 0.045s wall-clock]
4155 relevant atoms
4358 auxiliary atoms
8513 final queue length
14956 total queue pushes
Completing instantiation... [0.070s CPU, 0.077s wall-clock]
Instantiating: [0.120s CPU, 0.131s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
301 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.004s wall-clock]
Translating task: [0.080s CPU, 0.075s wall-clock]
1382 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
34 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.034s wall-clock]
Reordering and filtering variables...
86 of 314 variables necessary.
0 of 20 mutex groups necessary.
1927 of 3286 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 86
Translator derived variables: 0
Translator facts: 215
Translator goal facts: 23
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1927
Translator axioms: 0
Translator task size: 8262
Translator peak memory: 44132 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.270s CPU, 0.274s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00210403s, 11200 KB] reading input...
[t=0.00734042s, 11640 KB] done reading input!
[t=0.00939829s, 12176 KB] Simplifying 2283 unary operators... done! [990 unary operators]
[t=0.0107413s, 12176 KB] time to simplify: 0.00134298s
[t=0.0108163s, 12176 KB] Initializing additive heuristic...
[t=0.0108832s, 12176 KB] Initializing FF heuristic...
[t=0.0109076s, 12176 KB] Building successor generator...done!
[t=0.0114358s, 12328 KB] peak memory difference for successor generator creation: 152 KB
[t=0.0114865s, 12328 KB] time for successor generation creation: 0.000430348s
[t=0.0115104s, 12328 KB] Variables: 86
[t=0.0115415s, 12328 KB] FactPairs: 215
[t=0.0115641s, 12328 KB] Bytes per state: 16
[t=0.011587s, 12328 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0116401s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 69
[t=0.0116966s, 12328 KB] g=0, 1 evaluated, 0 expanded
[t=0.0117199s, 12328 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 69
[t=0.0117495s, 12328 KB] pruning method: none
[t=0.0117718s, 12328 KB] Start Timestep: 1685435026456 millisecond(s).
[t=0.0118108s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.011863s, 12328 KB] g=1, 2 evaluated, 1 expanded
[t=0.0129639s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.0131193s, 12328 KB] g=3, 73 evaluated, 4 expanded
[t=0.0133596s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.0140431s, 12328 KB] g=4, 127 evaluated, 6 expanded
[t=0.0154403s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.0155665s, 12328 KB] g=6, 219 evaluated, 10 expanded
[t=0.0155917s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.0164463s, 12328 KB] g=7, 270 evaluated, 12 expanded
[t=0.0168486s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.0174881s, 12328 KB] g=9, 331 evaluated, 15 expanded
[t=0.0175136s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.0179662s, 12328 KB] g=10, 358 evaluated, 16 expanded
[t=0.0185052s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.0192619s, 12328 KB] g=12, 436 evaluated, 20 expanded
[t=0.0195361s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.0200081s, 12328 KB] g=13, 480 evaluated, 22 expanded
[t=0.0258244s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.0264229s, 12328 KB] g=15, 856 evaluated, 42 expanded
[t=0.02685s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.0272088s, 12328 KB] g=16, 893 evaluated, 44 expanded
[t=0.032051s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.0323908s, 12328 KB] g=19, 1207 evaluated, 62 expanded
[t=0.0330791s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.0332137s, 12328 KB] g=20, 1254 evaluated, 64 expanded
[t=0.038309s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.038476s, 12328 KB] g=22, 1588 evaluated, 80 expanded
[t=0.0385008s, 12328 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.0391139s, 12328 KB] g=23, 1626 evaluated, 82 expanded
[t=0.0483958s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.0484986s, 12344 KB] g=26, 2204 evaluated, 116 expanded
[t=0.0498026s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.0501908s, 12344 KB] g=28, 2309 evaluated, 121 expanded
[t=0.0518804s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.0519264s, 12344 KB] g=30, 2416 evaluated, 126 expanded
[t=0.0522965s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.0526437s, 12344 KB] g=31, 2457 evaluated, 128 expanded
[t=0.0612826s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.0613574s, 12344 KB] g=34, 3008 evaluated, 162 expanded
[t=0.0613851s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.0617855s, 12344 KB] g=35, 3033 evaluated, 163 expanded
[t=0.0622894s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.063188s, 12344 KB] g=37, 3118 evaluated, 168 expanded
[t=0.0643703s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.0649088s, 12344 KB] g=39, 3225 evaluated, 174 expanded
[t=0.0774307s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.078008s, 12344 KB] g=42, 4014 evaluated, 231 expanded
[t=0.0780403s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.0786729s, 12344 KB] g=43, 4052 evaluated, 233 expanded
[t=0.0789292s, 12344 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.079295s, 12344 KB] g=44, 4088 evaluated, 235 expanded
[t=0.0917794s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.0920525s, 12472 KB] g=47, 4904 evaluated, 293 expanded
[t=0.0925466s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=0.0926442s, 12472 KB] g=48, 4939 evaluated, 295 expanded
[t=0.0926683s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.0929709s, 12472 KB] g=49, 4958 evaluated, 296 expanded
[t=0.108274s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.108674s, 12472 KB] g=52, 5958 evaluated, 370 expanded
[t=0.108702s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.109242s, 12472 KB] g=53, 5992 evaluated, 372 expanded
[t=0.109276s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.109781s, 12472 KB] g=54, 6024 evaluated, 374 expanded
[t=0.123444s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.123846s, 12472 KB] g=57, 6943 evaluated, 444 expanded
[t=0.123946s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.124377s, 12472 KB] g=58, 6973 evaluated, 446 expanded
[t=0.124402s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.124994s, 12472 KB] g=59, 7011 evaluated, 448 expanded
[t=0.125018s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.12556s, 12472 KB] g=60, 7045 evaluated, 450 expanded
[t=0.125988s, 12472 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.126144s, 12472 KB] g=61, 7080 evaluated, 452 expanded
[t=0.139607s, 12596 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.139844s, 12596 KB] g=64, 7949 evaluated, 520 expanded
[t=0.139873s, 12596 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.140087s, 12596 KB] g=65, 7962 evaluated, 521 expanded
[t=0.140111s, 12596 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.140398s, 12596 KB] g=66, 7981 evaluated, 522 expanded
[t=0.169977s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.170175s, 12728 KB] g=69, 9945 evaluated, 679 expanded
[t=0.170204s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.170768s, 12728 KB] g=70, 9979 evaluated, 681 expanded
[t=0.170974s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.171395s, 12728 KB] g=71, 10016 evaluated, 683 expanded
[t=0.175158s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.176092s, 12728 KB] g=73, 10328 evaluated, 706 expanded
[t=0.180366s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.180531s, 12728 KB] g=75, 10628 evaluated, 729 expanded
[t=0.180557s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.180987s, 12728 KB] g=76, 10657 evaluated, 731 expanded
[t=0.183475s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.18451s, 12728 KB] g=78, 10891 evaluated, 752 expanded
[t=0.188704s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.189002s, 12728 KB] g=80, 11190 evaluated, 777 expanded
[t=0.189028s, 12728 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.18945s, 12728 KB] g=81, 11219 evaluated, 779 expanded
[t=0.192863s, 12864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.193757s, 12864 KB] g=83, 11511 evaluated, 803 expanded
[t=0.197043s, 12864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.19765s, 12864 KB] g=85, 11777 evaluated, 825 expanded
[t=0.19807s, 12864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.198143s, 12864 KB] g=86, 11807 evaluated, 827 expanded
[t=0.201204s, 12864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.201934s, 12864 KB] g=88, 12060 evaluated, 849 expanded
[t=0.202229s, 12864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.202415s, 12864 KB] g=89, 12092 evaluated, 851 expanded
[t=0.202439s, 12864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.202876s, 12864 KB] g=90, 12124 evaluated, 853 expanded
[t=0.244199s, 12996 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.245071s, 12996 KB] g=94, 15003 evaluated, 1126 expanded
[t=0.245218s, 12996 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.245556s, 12996 KB] g=95, 15033 evaluated, 1128 expanded
[t=0.245581s, 12996 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.245932s, 12996 KB] g=96, 15056 evaluated, 1130 expanded
[t=0.253942s, 13256 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.254363s, 13256 KB] g=99, 15582 evaluated, 1178 expanded
[t=0.25461s, 13256 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.254789s, 13256 KB] g=100, 15607 evaluated, 1180 expanded
[t=0.254812s, 13256 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.255217s, 13256 KB] g=101, 15635 evaluated, 1182 expanded
[t=0.25524s, 13256 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.255407s, 13256 KB] g=102, 15649 evaluated, 1183 expanded
[t=0.255431s, 13256 KB] Solution found!
[t=0.255525s, 13256 KB] Actual search time: 0.243715s
calibrate rover3 camera1 objective13 waypoint3 (1)
calibrate rover3 camera5 objective9 waypoint3 (1)
take_image rover3 waypoint3 objective0 camera5 low_res (1)
communicate_image_data rover3 general objective0 low_res waypoint3 waypoint11 (1)
calibrate rover3 camera5 objective9 waypoint3 (1)
take_image rover3 waypoint3 objective12 camera5 low_res (1)
communicate_image_data rover3 general objective12 low_res waypoint3 waypoint11 (1)
calibrate rover3 camera5 objective9 waypoint3 (1)
take_image rover3 waypoint3 objective13 camera5 low_res (1)
communicate_image_data rover3 general objective13 low_res waypoint3 waypoint11 (1)
calibrate rover3 camera5 objective9 waypoint3 (1)
take_image rover3 waypoint3 objective3 camera5 low_res (1)
communicate_image_data rover3 general objective3 low_res waypoint3 waypoint11 (1)
sample_soil rover0 rover0store waypoint2 (1)
communicate_soil_data rover0 general waypoint2 waypoint2 waypoint11 (1)
drop rover0 rover0store (1)
calibrate rover3 camera5 objective9 waypoint3 (1)
navigate rover3 waypoint3 waypoint7 (1)
take_image rover3 waypoint7 objective11 camera5 low_res (1)
communicate_image_data rover3 general objective11 low_res waypoint7 waypoint11 (1)
sample_rock rover3 rover3store waypoint7 (1)
communicate_rock_data rover3 general waypoint7 waypoint7 waypoint11 (1)
drop rover3 rover3store (1)
calibrate rover3 camera4 objective10 waypoint7 (1)
navigate rover3 waypoint7 waypoint11 (1)
take_image rover3 waypoint11 objective18 camera4 low_res (1)
calibrate rover3 camera4 objective10 waypoint11 (1)
take_image rover3 waypoint11 objective8 camera4 low_res (1)
navigate rover3 waypoint11 waypoint7 (1)
communicate_image_data rover3 general objective8 low_res waypoint7 waypoint11 (1)
communicate_image_data rover3 general objective18 low_res waypoint7 waypoint11 (1)
navigate rover2 waypoint9 waypoint10 (1)
calibrate rover2 camera3 objective0 waypoint10 (1)
take_image rover2 waypoint10 objective11 camera3 high_res (1)
communicate_image_data rover2 general objective11 high_res waypoint10 waypoint11 (1)
navigate rover3 waypoint7 waypoint11 (1)
take_image rover3 waypoint11 objective19 camera1 high_res (1)
navigate rover3 waypoint11 waypoint7 (1)
communicate_image_data rover3 general objective19 high_res waypoint7 waypoint11 (1)
navigate rover3 waypoint7 waypoint11 (1)
sample_rock rover3 rover3store waypoint11 (1)
navigate rover3 waypoint11 waypoint7 (1)
communicate_rock_data rover3 general waypoint11 waypoint7 waypoint11 (1)
drop rover3 rover3store (1)
navigate rover3 waypoint7 waypoint2 (1)
sample_rock rover3 rover3store waypoint2 (1)
navigate rover3 waypoint2 waypoint7 (1)
communicate_rock_data rover3 general waypoint2 waypoint7 waypoint11 (1)
drop rover3 rover3store (1)
navigate rover3 waypoint7 waypoint4 (1)
sample_rock rover3 rover3store waypoint4 (1)
navigate rover3 waypoint4 waypoint7 (1)
communicate_rock_data rover3 general waypoint4 waypoint7 waypoint11 (1)
drop rover3 rover3store (1)
navigate rover3 waypoint7 waypoint6 (1)
sample_rock rover3 rover3store waypoint6 (1)
navigate rover3 waypoint6 waypoint7 (1)
navigate rover3 waypoint7 waypoint3 (1)
communicate_rock_data rover3 general waypoint6 waypoint3 waypoint11 (1)
navigate rover3 waypoint3 waypoint5 (1)
drop rover3 rover3store (1)
navigate rover3 waypoint5 waypoint10 (1)
sample_rock rover3 rover3store waypoint10 (1)
communicate_rock_data rover3 general waypoint10 waypoint10 waypoint11 (1)
navigate rover3 waypoint10 waypoint5 (1)
drop rover3 rover3store (1)
navigate rover0 waypoint2 waypoint12 (1)
sample_soil rover0 rover0store waypoint12 (1)
navigate rover0 waypoint12 waypoint2 (1)
navigate rover0 waypoint2 waypoint5 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint5 waypoint10 (1)
communicate_soil_data rover0 general waypoint12 waypoint10 waypoint11 (1)
sample_soil rover0 rover0store waypoint10 (1)
communicate_soil_data rover0 general waypoint10 waypoint10 waypoint11 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint10 waypoint5 (1)
navigate rover0 waypoint5 waypoint3 (1)
sample_soil rover0 rover0store waypoint3 (1)
communicate_soil_data rover0 general waypoint3 waypoint3 waypoint11 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint3 waypoint5 (1)
navigate rover0 waypoint5 waypoint4 (1)
sample_soil rover0 rover0store waypoint4 (1)
communicate_soil_data rover0 general waypoint4 waypoint4 waypoint11 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint4 waypoint5 (1)
sample_soil rover0 rover0store waypoint5 (1)
navigate rover0 waypoint5 waypoint10 (1)
communicate_soil_data rover0 general waypoint5 waypoint10 waypoint11 (1)
navigate rover3 waypoint5 waypoint0 (1)
navigate rover3 waypoint0 waypoint1 (1)
sample_rock rover3 rover3store waypoint1 (1)
navigate rover3 waypoint1 waypoint0 (1)
communicate_rock_data rover3 general waypoint1 waypoint0 waypoint11 (1)
drop rover3 rover3store (1)
navigate rover3 waypoint0 waypoint5 (1)
navigate rover3 waypoint5 waypoint8 (1)
sample_rock rover3 rover3store waypoint8 (1)
navigate rover3 waypoint8 waypoint5 (1)
navigate rover3 waypoint5 waypoint10 (1)
communicate_rock_data rover3 general waypoint8 waypoint10 waypoint11 (1)
[t=0.255558s, 13256 KB] Plan length: 102 step(s).
[t=0.255558s, 13256 KB] Plan cost: 102
[t=0.255558s, 13256 KB] Timestamp: 1685435026705 millisecond(s).
[t=0.255558s, 13256 KB] Expanded 1184 state(s).
[t=0.255558s, 13256 KB] Reopened 0 state(s).
[t=0.255558s, 13256 KB] Evaluated 15659 state(s).
[t=0.255558s, 13256 KB] Evaluations: 15659
[t=0.255558s, 13256 KB] Generated 40086 state(s).
[t=0.255558s, 13256 KB] Dead ends: 0 state(s).
[t=0.255558s, 13256 KB] Number of registered states: 15659
[t=0.255558s, 13256 KB] Int hash set load factor: 15659/32768 = 0.477875
[t=0.255558s, 13256 KB] Int hash set resizes: 15
[t=0.255558s, 13256 KB] Search time: 0.243971s
[t=0.255558s, 13256 KB] Total time: 0.255558s
Solution found.
Peak memory: 13256 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 102 

Successful plans:
Value: 102
 sas_plan 102 

validate exit code: 0

INFO     Planner time: 0.63s
