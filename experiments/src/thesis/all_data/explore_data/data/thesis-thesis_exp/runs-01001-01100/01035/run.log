INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 90 rules.
Computing model... [0.080s CPU, 0.086s wall-clock]
1773 relevant atoms
16074 auxiliary atoms
17847 final queue length
19677 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.120s CPU, 0.126s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
49 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
176 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
77 of 77 variables necessary.
0 of 32 mutex groups necessary.
982 of 982 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 77
Translator derived variables: 0
Translator facts: 257
Translator goal facts: 29
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 982
Translator axioms: 0
Translator task size: 4305
Translator peak memory: 38772 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.180s CPU, 0.174s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00190343s, 11200 KB] reading input...
[t=0.00588014s, 11468 KB] done reading input!
[t=0.00617802s, 11864 KB] Simplifying 1210 unary operators... done! [1137 unary operators]
[t=0.00832326s, 11864 KB] time to simplify: 0.00214524s
[t=0.00840285s, 11864 KB] Initializing additive heuristic...
[t=0.00848392s, 11864 KB] Initializing FF heuristic...
[t=0.00850854s, 11864 KB] Building successor generator...done!
[t=0.00891016s, 11864 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00895412s, 11864 KB] time for successor generation creation: 0s
[t=0.0089792s, 11864 KB] Variables: 77
[t=0.0090096s, 11864 KB] FactPairs: 257
[t=0.00903428s, 11864 KB] Bytes per state: 16
[t=0.0090577s, 11864 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00911198s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 91
[t=0.0091738s, 11864 KB] g=0, 1 evaluated, 0 expanded
[t=0.009197s, 11864 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 91
[t=0.00922544s, 11864 KB] pruning method: none
[t=0.00924837s, 11864 KB] Start Timestep: 1685435270757 millisecond(s).
[t=0.00929228s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 90
[t=0.00934878s, 11864 KB] g=1, 2 evaluated, 1 expanded
[t=0.00937156s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 88
[t=0.00946314s, 11864 KB] g=1, 5 evaluated, 1 expanded
[t=0.00948658s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 87
[t=0.00957198s, 11864 KB] g=1, 8 evaluated, 1 expanded
[t=0.00960838s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 86
[t=0.0096761s, 11864 KB] g=1, 10 evaluated, 1 expanded
[t=0.00969993s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 85
[t=0.0100942s, 11864 KB] g=2, 29 evaluated, 2 expanded
[t=0.010118s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 84
[t=0.0105738s, 11864 KB] g=2, 52 evaluated, 2 expanded
[t=0.0105971s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 83
[t=0.0106777s, 11864 KB] g=2, 55 evaluated, 2 expanded
[t=0.0107017s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 82
[t=0.0107693s, 11864 KB] g=3, 57 evaluated, 3 expanded
[t=0.0107928s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 81
[t=0.011818s, 11864 KB] g=4, 112 evaluated, 5 expanded
[t=0.0118428s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 80
[t=0.0128474s, 11864 KB] g=5, 166 evaluated, 7 expanded
[t=0.0134644s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 79
[t=0.0138377s, 11864 KB] g=6, 218 evaluated, 9 expanded
[t=0.013863s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 78
[t=0.0148432s, 11864 KB] g=7, 272 evaluated, 11 expanded
[t=0.0148675s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.0160255s, 11864 KB] g=8, 337 evaluated, 13 expanded
[t=0.01605s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 76
[t=0.0164418s, 11864 KB] g=9, 358 evaluated, 14 expanded
[t=0.0173589s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 75
[t=0.017915s, 11864 KB] g=11, 437 evaluated, 18 expanded
[t=0.0179395s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 74
[t=0.018758s, 11864 KB] g=12, 482 evaluated, 20 expanded
[t=0.0187831s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 73
[t=0.0195922s, 11864 KB] g=13, 523 evaluated, 22 expanded
[t=0.019617s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 72
[t=0.0202673s, 11864 KB] g=14, 558 evaluated, 24 expanded
[t=0.0202919s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 71
[t=0.0210533s, 11864 KB] g=15, 599 evaluated, 26 expanded
[t=0.0212518s, 11864 KB] New best heuristic value for ff(transform=adapt_costs(one)): 70
[t=0.0215895s, 11864 KB] g=16, 626 evaluated, 28 expanded
[t=0.0292299s, 11996 KB] New best heuristic value for ff(transform=adapt_costs(one)): 68
[t=0.0302923s, 11996 KB] g=20, 1119 evaluated, 68 expanded
[t=0.030319s, 11996 KB] New best heuristic value for ff(transform=adapt_costs(one)): 67
[t=0.0305629s, 11996 KB] g=21, 1132 evaluated, 69 expanded
[t=0.0491835s, 11996 KB] New best heuristic value for ff(transform=adapt_costs(one)): 66
[t=0.0494402s, 11996 KB] g=24, 2211 evaluated, 159 expanded
[t=0.0494688s, 11996 KB] New best heuristic value for ff(transform=adapt_costs(one)): 65
[t=0.0504368s, 11996 KB] g=26, 2266 evaluated, 165 expanded
[t=0.0970744s, 12168 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.0977147s, 12168 KB] g=32, 5012 evaluated, 408 expanded
[t=0.0977445s, 12168 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=0.0979783s, 12168 KB] g=33, 5025 evaluated, 409 expanded
[t=0.15702s, 12436 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.159347s, 12436 KB] g=40, 8638 evaluated, 706 expanded
[t=0.16097s, 12436 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.161165s, 12436 KB] g=42, 8744 evaluated, 714 expanded
[t=0.304945s, 12964 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.307182s, 12964 KB] g=54, 17426 evaluated, 1470 expanded
[t=0.307213s, 12964 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.30749s, 12964 KB] g=55, 17442 evaluated, 1471 expanded
[t=0.307515s, 12964 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.30879s, 12964 KB] g=57, 17519 evaluated, 1475 expanded
[t=0.308839s, 12964 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.312767s, 12964 KB] g=59, 17759 evaluated, 1494 expanded
[t=0.312813s, 12964 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.313312s, 12964 KB] g=60, 17789 evaluated, 1496 expanded
[t=0.524521s, 14016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.52609s, 14016 KB] g=73, 30289 evaluated, 2740 expanded
[t=0.526122s, 14016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.526433s, 14016 KB] g=74, 30307 evaluated, 2741 expanded
[t=0.528431s, 14016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.529205s, 14016 KB] g=76, 30477 evaluated, 2753 expanded
[t=0.529232s, 14016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.529738s, 14016 KB] g=77, 30504 evaluated, 2755 expanded
[t=0.529763s, 14016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.530018s, 14016 KB] g=78, 30519 evaluated, 2756 expanded
[t=0.56036s, 14020 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.562268s, 14020 KB] g=83, 32480 evaluated, 2947 expanded
[t=0.562297s, 14020 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.562484s, 14020 KB] g=84, 32490 evaluated, 2948 expanded
[t=0.884284s, 14952 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.884891s, 14952 KB] g=94, 52106 evaluated, 5039 expanded
[t=0.884922s, 14952 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.885061s, 14952 KB] g=95, 52113 evaluated, 5040 expanded
[t=0.940174s, 15084 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.941382s, 15084 KB] g=97, 55563 evaluated, 5440 expanded
[t=0.941413s, 15084 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.941673s, 15084 KB] g=98, 55579 evaluated, 5441 expanded
[t=0.941697s, 15084 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.942126s, 15084 KB] g=99, 55605 evaluated, 5443 expanded
[t=0.942151s, 15084 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.942596s, 15084 KB] g=100, 55632 evaluated, 5445 expanded
[t=0.94406s, 15084 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.945931s, 15084 KB] g=102, 55836 evaluated, 5461 expanded
[t=0.945958s, 15084 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.94624s, 15084 KB] g=103, 55852 evaluated, 5463 expanded
[t=0.964012s, 15220 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.964706s, 15220 KB] g=107, 57041 evaluated, 5575 expanded
[t=1.02798s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=1.02861s, 16248 KB] g=111, 60945 evaluated, 5855 expanded
[t=1.03192s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=1.03513s, 16248 KB] g=113, 61356 evaluated, 5884 expanded
[t=1.03516s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=1.03579s, 16248 KB] g=114, 61395 evaluated, 5886 expanded
[t=1.03587s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=1.0372s, 16248 KB] g=116, 61489 evaluated, 5891 expanded
[t=1.03723s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=1.03948s, 16248 KB] g=118, 61631 evaluated, 5901 expanded
[t=1.03951s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=1.03984s, 16248 KB] g=119, 61650 evaluated, 5903 expanded
[t=1.03986s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=1.04037s, 16248 KB] g=120, 61682 evaluated, 5905 expanded
[t=1.07977s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=1.08077s, 16248 KB] g=123, 64356 evaluated, 6127 expanded
[t=1.0808s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=1.08126s, 16248 KB] g=124, 64386 evaluated, 6129 expanded
[t=1.08129s, 16248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=1.08194s, 16248 KB] g=125, 64429 evaluated, 6131 expanded
[t=1.17169s, 16400 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=1.1742s, 16400 KB] g=129, 70550 evaluated, 6699 expanded
[t=1.17423s, 16400 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=1.17529s, 16400 KB] g=131, 70621 evaluated, 6705 expanded
[t=1.19159s, 16400 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=1.19448s, 16400 KB] g=135, 71894 evaluated, 6826 expanded
[t=1.19554s, 16400 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=1.19586s, 16400 KB] g=137, 71983 evaluated, 6833 expanded
[t=1.19588s, 16400 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=1.19795s, 16400 KB] g=139, 72128 evaluated, 6844 expanded
[t=1.19797s, 16400 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=1.19824s, 16400 KB] g=140, 72146 evaluated, 6845 expanded
[t=1.31548s, 16796 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=1.31825s, 16796 KB] g=142, 80255 evaluated, 7589 expanded
[t=1.31829s, 16796 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=1.31873s, 16796 KB] g=143, 80279 evaluated, 7591 expanded
[t=1.31875s, 16796 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=1.31938s, 16796 KB] g=144, 80318 evaluated, 7593 expanded
[t=1.41526s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=1.41609s, 17196 KB] g=148, 86858 evaluated, 8216 expanded
[t=1.41612s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=1.41649s, 17196 KB] g=149, 86883 evaluated, 8218 expanded
[t=1.41651s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=1.41687s, 17196 KB] g=150, 86907 evaluated, 8220 expanded
[t=1.41916s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=1.41951s, 17196 KB] g=152, 87083 evaluated, 8236 expanded
[t=1.41953s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=1.42233s, 17196 KB] g=154, 87284 evaluated, 8254 expanded
[t=1.42235s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=1.4227s, 17196 KB] g=155, 87305 evaluated, 8256 expanded
[t=1.42273s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=1.42293s, 17196 KB] g=156, 87319 evaluated, 8257 expanded
[t=1.42307s, 17196 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=1.4232s, 17196 KB] g=157, 87337 evaluated, 8258 expanded
[t=1.5826s, 17736 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=1.58457s, 17736 KB] g=164, 98551 evaluated, 9469 expanded
[t=1.58461s, 17736 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=1.58474s, 17736 KB] g=165, 98559 evaluated, 9470 expanded
[t=1.58477s, 17736 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=1.58516s, 17736 KB] g=166, 98585 evaluated, 9472 expanded
[t=1.58518s, 17736 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=1.58562s, 17736 KB] g=167, 98616 evaluated, 9474 expanded
[t=2.3584s, 21220 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=2.35935s, 21220 KB] g=182, 153371 evaluated, 15171 expanded
[t=2.35938s, 21220 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=2.35944s, 21220 KB] g=183, 153373 evaluated, 15172 expanded
[t=2.35946s, 21220 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=2.3599s, 21220 KB] g=184, 153406 evaluated, 15174 expanded
[t=2.74227s, 22564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=2.74402s, 22564 KB] g=193, 180256 evaluated, 18409 expanded
[t=2.74405s, 22564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=2.74413s, 22564 KB] g=194, 180260 evaluated, 18410 expanded
[t=2.74415s, 22564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=2.74448s, 22564 KB] g=195, 180284 evaluated, 18412 expanded
[t=2.74451s, 22564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=2.74491s, 22564 KB] g=196, 180314 evaluated, 18414 expanded
[t=2.74493s, 22564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=2.74534s, 22564 KB] g=197, 180350 evaluated, 18416 expanded
[t=2.74536s, 22564 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=2.74572s, 22564 KB] g=198, 180383 evaluated, 18418 expanded
[t=2.74574s, 22564 KB] Solution found!
[t=2.74604s, 22564 KB] Actual search time: 2.73675s
sample_soil rover2 rover2store waypoint22 (1)
sample_rock rover0 rover0store waypoint23 (1)
calibrate rover2 camera0 objective0 waypoint22 (1)
calibrate rover2 camera6 objective0 waypoint22 (1)
take_image rover2 waypoint22 objective0 camera6 high_res (1)
communicate_image_data rover2 general objective0 high_res waypoint22 waypoint17 (1)
communicate_soil_data rover2 general waypoint22 waypoint22 waypoint17 (1)
navigate rover0 waypoint23 waypoint27 (1)
communicate_rock_data rover0 general waypoint23 waypoint27 waypoint17 (1)
calibrate rover2 camera1 objective0 waypoint22 (1)
take_image rover2 waypoint22 objective0 camera1 colour (1)
take_image rover2 waypoint22 objective0 camera0 low_res (1)
navigate rover2 waypoint22 waypoint12 (1)
navigate rover2 waypoint12 waypoint25 (1)
communicate_image_data rover2 general objective0 low_res waypoint25 waypoint17 (1)
communicate_image_data rover2 general objective0 colour waypoint25 waypoint17 (1)
navigate rover2 waypoint25 waypoint24 (1)
drop rover2 rover2store (1)
drop rover0 rover0store (1)
sample_rock rover0 rover0store waypoint27 (1)
communicate_rock_data rover0 general waypoint27 waypoint27 waypoint17 (1)
calibrate rover2 camera6 objective0 waypoint24 (1)
sample_soil rover1 rover1store waypoint20 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint20 waypoint10 (1)
communicate_soil_data rover1 general waypoint20 waypoint10 waypoint17 (1)
navigate rover1 waypoint10 waypoint20 (1)
navigate rover0 waypoint27 waypoint23 (1)
navigate rover0 waypoint23 waypoint5 (1)
navigate rover1 waypoint20 waypoint0 (1)
sample_soil rover1 rover1store waypoint0 (1)
drop rover1 rover1store (1)
communicate_soil_data rover1 general waypoint0 waypoint0 waypoint17 (1)
calibrate rover2 camera0 objective0 waypoint24 (1)
navigate rover1 waypoint0 waypoint20 (1)
calibrate rover0 camera3 objective0 waypoint5 (1)
navigate rover1 waypoint20 waypoint1 (1)
sample_soil rover1 rover1store waypoint1 (1)
navigate rover1 waypoint1 waypoint20 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint20 waypoint0 (1)
communicate_soil_data rover1 general waypoint1 waypoint0 waypoint17 (1)
calibrate rover1 camera2 objective0 waypoint0 (1)
navigate rover0 waypoint5 waypoint23 (1)
navigate rover0 waypoint23 waypoint10 (1)
calibrate rover2 camera1 objective0 waypoint24 (1)
take_image rover2 waypoint24 objective0 camera6 colour (1)
navigate rover0 waypoint10 waypoint17 (1)
calibrate rover1 camera4 objective0 waypoint0 (1)
calibrate rover2 camera6 objective0 waypoint24 (1)
drop rover0 rover0store (1)
sample_rock rover0 rover0store waypoint17 (1)
navigate rover0 waypoint17 waypoint10 (1)
communicate_rock_data rover0 general waypoint17 waypoint10 waypoint17 (1)
navigate rover0 waypoint10 waypoint21 (1)
drop rover0 rover0store (1)
sample_rock rover0 rover0store waypoint21 (1)
navigate rover0 waypoint21 waypoint10 (1)
communicate_rock_data rover0 general waypoint21 waypoint10 waypoint17 (1)
navigate rover0 waypoint10 waypoint17 (1)
take_image rover2 waypoint24 objective0 camera1 colour (1)
take_image rover1 waypoint0 objective0 camera4 low_res (1)
take_image rover2 waypoint24 objective0 camera6 colour (1)
calibrate rover1 camera4 objective0 waypoint0 (1)
take_image rover1 waypoint0 objective0 camera2 colour (1)
navigate rover0 waypoint17 waypoint10 (1)
navigate rover0 waypoint10 waypoint23 (1)
navigate rover0 waypoint23 waypoint4 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint4 waypoint18 (1)
sample_rock rover0 rover0store waypoint18 (1)
navigate rover0 waypoint18 waypoint4 (1)
navigate rover0 waypoint4 waypoint6 (1)
communicate_rock_data rover0 general waypoint18 waypoint6 waypoint17 (1)
navigate rover1 waypoint0 waypoint20 (1)
drop rover0 rover0store (1)
sample_rock rover0 rover0store waypoint6 (1)
communicate_rock_data rover0 general waypoint6 waypoint6 waypoint17 (1)
calibrate rover2 camera1 objective0 waypoint24 (1)
calibrate rover2 camera6 objective0 waypoint24 (1)
navigate rover1 waypoint20 waypoint25 (1)
sample_rock rover1 rover1store waypoint25 (1)
drop rover1 rover1store (1)
communicate_rock_data rover1 general waypoint25 waypoint25 waypoint17 (1)
take_image rover2 waypoint24 objective0 camera6 colour (1)
navigate rover1 waypoint25 waypoint20 (1)
navigate rover1 waypoint20 waypoint10 (1)
navigate rover0 waypoint6 waypoint4 (1)
navigate rover0 waypoint4 waypoint23 (1)
sample_soil rover1 rover1store waypoint10 (1)
navigate rover1 waypoint10 waypoint9 (1)
navigate rover0 waypoint23 waypoint24 (1)
drop rover0 rover0store (1)
navigate rover2 waypoint24 waypoint25 (1)
drop rover1 rover1store (1)
sample_rock rover1 rover1store waypoint9 (1)
navigate rover2 waypoint25 waypoint12 (1)
navigate rover1 waypoint9 waypoint10 (1)
communicate_rock_data rover1 general waypoint9 waypoint10 waypoint17 (1)
communicate_soil_data rover1 general waypoint10 waypoint10 waypoint17 (1)
sample_rock rover0 rover0store waypoint24 (1)
communicate_rock_data rover0 general waypoint24 waypoint24 waypoint17 (1)
drop rover0 rover0store (1)
navigate rover2 waypoint12 waypoint22 (1)
navigate rover2 waypoint22 waypoint18 (1)
navigate rover1 waypoint10 waypoint20 (1)
navigate rover1 waypoint20 waypoint0 (1)
calibrate rover1 camera2 objective0 waypoint0 (1)
take_image rover0 waypoint24 objective0 camera3 low_res (1)
drop rover1 rover1store (1)
navigate rover1 waypoint0 waypoint17 (1)
sample_soil rover1 rover1store waypoint17 (1)
navigate rover1 waypoint17 waypoint0 (1)
communicate_soil_data rover1 general waypoint17 waypoint0 waypoint17 (1)
navigate rover2 waypoint18 waypoint22 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint0 waypoint16 (1)
sample_soil rover1 rover1store waypoint16 (1)
navigate rover1 waypoint16 waypoint0 (1)
communicate_soil_data rover1 general waypoint16 waypoint0 waypoint17 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint0 waypoint19 (1)
sample_soil rover1 rover1store waypoint19 (1)
navigate rover1 waypoint19 waypoint0 (1)
communicate_soil_data rover1 general waypoint19 waypoint0 waypoint17 (1)
navigate rover2 waypoint22 waypoint18 (1)
navigate rover1 waypoint0 waypoint16 (1)
sample_soil rover2 rover2store waypoint18 (1)
drop rover2 rover2store (1)
navigate rover2 waypoint18 waypoint22 (1)
communicate_soil_data rover2 general waypoint18 waypoint22 waypoint17 (1)
navigate rover1 waypoint16 waypoint0 (1)
navigate rover1 waypoint0 waypoint20 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint20 waypoint25 (1)
navigate rover1 waypoint25 waypoint2 (1)
sample_soil rover1 rover1store waypoint2 (1)
navigate rover1 waypoint2 waypoint25 (1)
communicate_soil_data rover1 general waypoint2 waypoint25 waypoint17 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint25 waypoint12 (1)
sample_rock rover1 rover1store waypoint12 (1)
navigate rover1 waypoint12 waypoint25 (1)
communicate_rock_data rover1 general waypoint12 waypoint25 waypoint17 (1)
navigate rover1 waypoint25 waypoint12 (1)
navigate rover0 waypoint24 waypoint13 (1)
sample_rock rover0 rover0store waypoint13 (1)
navigate rover0 waypoint13 waypoint24 (1)
communicate_rock_data rover0 general waypoint13 waypoint24 waypoint17 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint24 waypoint23 (1)
navigate rover0 waypoint23 waypoint11 (1)
navigate rover0 waypoint11 waypoint14 (1)
sample_rock rover0 rover0store waypoint14 (1)
navigate rover0 waypoint14 waypoint11 (1)
navigate rover0 waypoint11 waypoint0 (1)
communicate_rock_data rover0 general waypoint14 waypoint0 waypoint17 (1)
navigate rover2 waypoint22 waypoint18 (1)
navigate rover2 waypoint18 waypoint4 (1)
calibrate rover0 camera3 objective0 waypoint0 (1)
sample_soil rover2 rover2store waypoint4 (1)
navigate rover2 waypoint4 waypoint18 (1)
drop rover2 rover2store (1)
navigate rover2 waypoint18 waypoint22 (1)
communicate_soil_data rover2 general waypoint4 waypoint22 waypoint17 (1)
take_image rover0 waypoint0 objective0 camera3 high_res (1)
calibrate rover0 camera5 objective0 waypoint0 (1)
navigate rover0 waypoint0 waypoint11 (1)
drop rover0 rover0store (1)
drop rover1 rover1store (1)
navigate rover2 waypoint22 waypoint11 (1)
navigate rover2 waypoint11 waypoint14 (1)
navigate rover1 waypoint12 waypoint25 (1)
sample_soil rover2 rover2store waypoint14 (1)
navigate rover0 waypoint11 waypoint23 (1)
navigate rover0 waypoint23 waypoint20 (1)
navigate rover2 waypoint14 waypoint11 (1)
drop rover2 rover2store (1)
navigate rover2 waypoint11 waypoint0 (1)
communicate_soil_data rover2 general waypoint14 waypoint0 waypoint17 (1)
calibrate rover2 camera6 objective0 waypoint0 (1)
take_image rover2 waypoint0 objective0 camera0 colour (1)
navigate rover1 waypoint25 waypoint23 (1)
take_image rover1 waypoint23 objective0 camera4 low_res (1)
navigate rover2 waypoint0 waypoint11 (1)
navigate rover0 waypoint20 waypoint23 (1)
sample_soil rover2 rover2store waypoint11 (1)
navigate rover2 waypoint11 waypoint13 (1)
drop rover2 rover2store (1)
sample_soil rover2 rover2store waypoint13 (1)
navigate rover2 waypoint13 waypoint11 (1)
navigate rover2 waypoint11 waypoint0 (1)
communicate_soil_data rover2 general waypoint11 waypoint0 waypoint17 (1)
communicate_soil_data rover2 general waypoint13 waypoint0 waypoint17 (1)
[t=2.74609s, 22564 KB] Plan length: 194 step(s).
[t=2.74609s, 22564 KB] Plan cost: 194
[t=2.74609s, 22564 KB] Timestamp: 1685435273501 millisecond(s).
[t=2.74609s, 22564 KB] Expanded 18420 state(s).
[t=2.74609s, 22564 KB] Reopened 0 state(s).
[t=2.74609s, 22564 KB] Evaluated 180407 state(s).
[t=2.74609s, 22564 KB] Evaluations: 180407
[t=2.74609s, 22564 KB] Generated 556258 state(s).
[t=2.74609s, 22564 KB] Dead ends: 0 state(s).
[t=2.74609s, 22564 KB] Number of registered states: 180407
[t=2.74609s, 22564 KB] Int hash set load factor: 180407/262144 = 0.688198
[t=2.74609s, 22564 KB] Int hash set resizes: 18
[t=2.74609s, 22564 KB] Search time: 2.73703s
[t=2.74609s, 22564 KB] Total time: 2.74609s
Solution found.
Peak memory: 22564 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 194 

Successful plans:
Value: 194
 sas_plan 194 

validate exit code: 0

INFO     Planner time: 3.03s
