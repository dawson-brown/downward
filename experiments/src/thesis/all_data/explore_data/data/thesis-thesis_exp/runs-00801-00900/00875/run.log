INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 26 rules.
Computing model... [0.190s CPU, 0.189s wall-clock]
18338 relevant atoms
15310 auxiliary atoms
33648 final queue length
64160 total queue pushes
Completing instantiation... [0.580s CPU, 0.579s wall-clock]
Instantiating: [0.790s CPU, 0.783s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.020s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.023s wall-clock]
Translating task: [0.530s CPU, 0.532s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.340s CPU, 0.338s wall-clock]
Reordering and filtering variables...
14 of 14 variables necessary.
0 of 14 mutex groups necessary.
16320 of 16320 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.050s CPU, 0.054s wall-clock]
Translator variables: 14
Translator derived variables: 0
Translator facts: 1182
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 16320
Translator axioms: 0
Translator task size: 96246
Translator peak memory: 97116 KB
Writing output... [0.070s CPU, 0.072s wall-clock]
Done! [1.830s CPU, 1.835s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 898s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), softmin_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.0545951s, 16552 KB] done reading input!
[t=0.0598552s, 18536 KB] Simplifying 31680 unary operators... done! [31680 unary operators]
[t=0.0847546s, 21180 KB] time to simplify: 0.0248994s
[t=0.0867627s, 21180 KB] Initializing additive heuristic...
[t=0.0874218s, 21180 KB] Initializing FF heuristic...
[t=0.0874483s, 21180 KB] Building successor generator...done!
[t=0.0937978s, 21844 KB] peak memory difference for successor generator creation: 664 KB
[t=0.0938695s, 21844 KB] time for successor generation creation: 0.00410972s
[t=0.0938937s, 21844 KB] Variables: 14
[t=0.0939201s, 21844 KB] FactPairs: 1182
[t=0.0939422s, 21844 KB] Bytes per state: 12
[t=0.0939648s, 21844 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0940343s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.0945771s, 21844 KB] g=0, 1 evaluated, 0 expanded
[t=0.0946046s, 21844 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.0946465s, 21844 KB] pruning method: none
[t=0.0946697s, 21844 KB] Start Timestep: 1685459670209 millisecond(s).
[t=0.0947179s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=0.095095s, 21844 KB] g=1, 2 evaluated, 1 expanded
[t=0.0954999s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.0975189s, 21844 KB] g=1, 10 evaluated, 1 expanded
[t=0.0975467s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.0981805s, 21844 KB] g=2, 12 evaluated, 2 expanded
[t=0.0994442s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.103303s, 21844 KB] g=3, 30 evaluated, 3 expanded
[t=0.107383s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.10904s, 21844 KB] g=5, 50 evaluated, 5 expanded
[t=0.139336s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.142255s, 21844 KB] g=11, 163 evaluated, 23 expanded
[t=0.143286s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.143909s, 21844 KB] g=12, 168 evaluated, 24 expanded
[t=0.143937s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.146099s, 21844 KB] g=13, 175 evaluated, 25 expanded
[t=0.147213s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.148648s, 21844 KB] g=14, 183 evaluated, 26 expanded
[t=0.219111s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.221548s, 21844 KB] g=17, 421 evaluated, 53 expanded
[t=0.29903s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.300062s, 21844 KB] g=22, 681 evaluated, 92 expanded
[t=0.300093s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.301608s, 21844 KB] g=22, 686 evaluated, 92 expanded
[t=4.29419s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=4.29536s, 21844 KB] g=24, 14120 evaluated, 2546 expanded
[t=4.31003s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=4.31301s, 21844 KB] g=26, 14179 evaluated, 2552 expanded
[t=4.42589s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=4.42845s, 21844 KB] g=33, 14579 evaluated, 2645 expanded
[t=5.23729s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=5.23917s, 22212 KB] g=49, 17381 evaluated, 3247 expanded
[t=5.24123s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=5.24305s, 22212 KB] g=51, 17394 evaluated, 3249 expanded
[t=5.24519s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=5.24575s, 22212 KB] g=52, 17403 evaluated, 3250 expanded
[t=5.3411s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=5.34126s, 22212 KB] g=57, 17733 evaluated, 3284 expanded
[t=5.369s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=5.37305s, 22212 KB] g=59, 17843 evaluated, 3295 expanded
[t=5.48089s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=5.48249s, 22212 KB] g=65, 18222 evaluated, 3349 expanded
[t=5.54078s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=5.54092s, 22212 KB] g=72, 18425 evaluated, 3381 expanded
[t=6.07623s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=6.07816s, 22212 KB] g=87, 20300 evaluated, 3600 expanded
[t=6.08017s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=6.08038s, 22212 KB] g=88, 20307 evaluated, 3601 expanded
[t=6.10008s, 22212 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=6.10215s, 22212 KB] g=93, 20380 evaluated, 3610 expanded
[t=7.39525s, 22476 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=7.39716s, 22476 KB] g=107, 24741 evaluated, 4303 expanded
[t=7.39918s, 22476 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=7.39997s, 22476 KB] g=108, 24750 evaluated, 4304 expanded
[t=7.40314s, 22476 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=7.40521s, 22476 KB] g=109, 24767 evaluated, 4305 expanded
[t=7.62291s, 22608 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=7.62404s, 22608 KB] g=122, 25490 evaluated, 4420 expanded
[t=7.62407s, 22608 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=7.62444s, 22608 KB] g=122, 25491 evaluated, 4420 expanded
[t=7.62447s, 22608 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=7.62604s, 22608 KB] g=123, 25496 evaluated, 4421 expanded
[t=8.19444s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=8.19582s, 22740 KB] g=137, 27362 evaluated, 4686 expanded
[t=8.19585s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=8.19822s, 22740 KB] g=137, 27370 evaluated, 4686 expanded
[t=8.19834s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=8.20037s, 22740 KB] g=138, 27377 evaluated, 4687 expanded
[t=8.23828s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=8.24095s, 22740 KB] g=141, 27516 evaluated, 4698 expanded
[t=8.24223s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=8.24447s, 22740 KB] g=142, 27528 evaluated, 4699 expanded
[t=8.2462s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=8.24861s, 22740 KB] g=143, 27542 evaluated, 4700 expanded
[t=8.25416s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=8.25429s, 22740 KB] g=144, 27561 evaluated, 4701 expanded
[t=8.2621s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=8.26409s, 22740 KB] g=145, 27594 evaluated, 4703 expanded
[t=8.27007s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=8.27133s, 22740 KB] g=146, 27618 evaluated, 4705 expanded
[t=8.27404s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=8.27628s, 22740 KB] g=147, 27634 evaluated, 4706 expanded
[t=8.27801s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=8.28065s, 22740 KB] g=148, 27647 evaluated, 4707 expanded
[t=8.28197s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=8.28506s, 22740 KB] g=149, 27661 evaluated, 4708 expanded
[t=8.28994s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=8.28999s, 22740 KB] g=150, 27677 evaluated, 4709 expanded
[t=8.29386s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=8.29394s, 22740 KB] g=151, 27690 evaluated, 4710 expanded
[t=8.29783s, 22740 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=8.29868s, 22740 KB] g=152, 27706 evaluated, 4711 expanded
[t=11.3954s, 23524 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=11.3977s, 23524 KB] g=162, 38495 evaluated, 6399 expanded
[t=12.4865s, 23656 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=12.4897s, 23656 KB] g=177, 42331 evaluated, 7030 expanded
[t=12.5424s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=12.5446s, 23788 KB] g=182, 42532 evaluated, 7070 expanded
[t=12.5743s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=12.5762s, 23788 KB] g=187, 42642 evaluated, 7087 expanded
[t=12.5783s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=12.5797s, 23788 KB] g=189, 42654 evaluated, 7089 expanded
[t=12.5797s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=12.5811s, 23788 KB] g=190, 42659 evaluated, 7090 expanded
[t=12.5822s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=12.5831s, 23788 KB] g=191, 42667 evaluated, 7091 expanded
[t=12.5831s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=12.5854s, 23788 KB] g=192, 42677 evaluated, 7092 expanded
[t=12.5862s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=12.5871s, 23788 KB] g=193, 42685 evaluated, 7093 expanded
[t=12.5872s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=12.5889s, 23788 KB] g=194, 42694 evaluated, 7094 expanded
[t=12.5889s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=12.5901s, 23788 KB] g=195, 42701 evaluated, 7095 expanded
[t=12.5901s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=12.5923s, 23788 KB] g=196, 42715 evaluated, 7097 expanded
[t=12.5923s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=12.5931s, 23788 KB] g=197, 42721 evaluated, 7098 expanded
[t=12.594s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=12.5943s, 23788 KB] g=198, 42733 evaluated, 7099 expanded
[t=12.5943s, 23788 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=12.5953s, 23788 KB] g=199, 42744 evaluated, 7100 expanded
[t=12.5953s, 23788 KB] Solution found!
[t=12.5956s, 23788 KB] Actual search time: 12.5009s
drive truck-1 city-3-loc-5 city-3-loc-18 (24)
drive truck-2 city-1-loc-17 city-1-loc-1 (19)
drive truck-1 city-3-loc-18 city-3-loc-9 (16)
drive truck-1 city-3-loc-9 city-3-loc-12 (22)
drive truck-1 city-3-loc-12 city-3-loc-3 (25)
drive truck-2 city-1-loc-1 city-1-loc-18 (21)
drive truck-2 city-1-loc-18 city-1-loc-14 (20)
drive truck-2 city-1-loc-14 city-1-loc-16 (25)
pick-up truck-2 city-1-loc-16 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-1-loc-16 city-1-loc-19 (13)
pick-up truck-2 city-1-loc-19 package-7 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-19 city-1-loc-10 (27)
drive truck-2 city-1-loc-10 city-1-loc-14 (22)
drive truck-2 city-1-loc-14 city-1-loc-18 (20)
drive truck-2 city-1-loc-18 city-1-loc-4 (12)
drive truck-1 city-3-loc-3 city-3-loc-12 (25)
drive truck-1 city-3-loc-12 city-3-loc-17 (16)
drive truck-2 city-1-loc-4 city-1-loc-1 (12)
drop truck-2 city-1-loc-1 package-7 capacity-2 capacity-3 (1)
drive truck-1 city-3-loc-17 city-3-loc-19 (14)
drive truck-2 city-1-loc-1 city-1-loc-23 (12)
drop truck-2 city-1-loc-23 package-1 capacity-3 capacity-4 (1)
drive truck-1 city-3-loc-19 city-3-loc-9 (26)
drive truck-2 city-1-loc-23 city-1-loc-20 (27)
drive truck-2 city-1-loc-20 city-1-loc-6 (15)
drive truck-1 city-3-loc-9 city-3-loc-12 (22)
drive truck-1 city-3-loc-12 city-3-loc-3 (25)
drive truck-2 city-1-loc-6 city-1-loc-7 (14)
drive truck-2 city-1-loc-7 city-1-loc-31 (16)
drive truck-2 city-1-loc-31 city-1-loc-14 (20)
drive truck-1 city-3-loc-3 city-3-loc-15 (17)
pick-up truck-1 city-3-loc-15 package-10 capacity-1 capacity-2 (1)
drive truck-1 city-3-loc-15 city-3-loc-3 (17)
drive truck-2 city-1-loc-14 city-1-loc-31 (20)
drive truck-1 city-3-loc-3 city-3-loc-12 (25)
drive truck-1 city-3-loc-12 city-3-loc-27 (19)
drive truck-1 city-3-loc-27 city-3-loc-21 (13)
drive truck-2 city-1-loc-31 city-1-loc-4 (27)
drive truck-2 city-1-loc-4 city-1-loc-1 (12)
drive truck-2 city-1-loc-1 city-1-loc-29 (21)
drive truck-2 city-1-loc-29 city-1-loc-22 (18)
drive truck-2 city-1-loc-22 city-1-loc-32 (20)
drive truck-2 city-1-loc-32 city-3-loc-32 (146)
drive truck-2 city-3-loc-32 city-3-loc-21 (26)
drive truck-1 city-3-loc-21 city-3-loc-18 (19)
drive truck-2 city-3-loc-21 city-3-loc-18 (19)
drive truck-1 city-3-loc-18 city-3-loc-24 (14)
drive truck-2 city-3-loc-18 city-3-loc-24 (14)
drive truck-1 city-3-loc-24 city-3-loc-27 (27)
drive truck-2 city-3-loc-24 city-3-loc-28 (21)
pick-up truck-2 city-3-loc-28 package-5 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-28 city-3-loc-24 (21)
drop truck-2 city-3-loc-24 package-5 capacity-3 capacity-4 (1)
drive truck-1 city-3-loc-27 city-3-loc-24 (27)
pick-up truck-1 city-3-loc-24 package-5 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-24 city-3-loc-19 (27)
drop truck-1 city-3-loc-19 package-5 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-19 city-3-loc-17 (14)
drive truck-1 city-3-loc-17 city-3-loc-27 (24)
drive truck-2 city-3-loc-24 city-3-loc-27 (27)
drive truck-2 city-3-loc-27 city-3-loc-23 (25)
drive truck-2 city-3-loc-23 city-3-loc-1 (24)
drive truck-2 city-3-loc-1 city-3-loc-25 (27)
drive truck-1 city-3-loc-27 city-3-loc-12 (19)
drive truck-1 city-3-loc-12 city-3-loc-3 (25)
drive truck-1 city-3-loc-3 city-3-loc-1 (20)
pick-up truck-1 city-3-loc-1 package-8 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-1 city-3-loc-3 (20)
drive truck-2 city-3-loc-25 city-3-loc-2 (15)
drive truck-1 city-3-loc-3 city-3-loc-12 (25)
drive truck-1 city-3-loc-12 city-3-loc-9 (22)
drive truck-1 city-3-loc-9 city-3-loc-19 (26)
drive truck-2 city-3-loc-2 city-3-loc-1 (12)
drop truck-1 city-3-loc-19 package-10 capacity-0 capacity-1 (1)
drive truck-2 city-3-loc-1 city-3-loc-23 (24)
drive truck-2 city-3-loc-23 city-3-loc-27 (25)
drive truck-2 city-3-loc-27 city-3-loc-24 (27)
drive truck-2 city-3-loc-24 city-3-loc-28 (21)
drive truck-2 city-3-loc-28 city-3-loc-30 (16)
pick-up truck-1 city-3-loc-19 package-10 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-19 city-3-loc-14 (11)
drive truck-1 city-3-loc-14 city-2-loc-28 (148)
drive truck-2 city-3-loc-30 city-3-loc-28 (16)
drive truck-1 city-2-loc-28 city-2-loc-2 (16)
drive truck-1 city-2-loc-2 city-2-loc-8 (26)
drive truck-1 city-2-loc-8 city-2-loc-9 (23)
drop truck-1 city-2-loc-9 package-8 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-9 city-2-loc-25 (18)
drive truck-2 city-3-loc-28 city-3-loc-13 (22)
drive truck-2 city-3-loc-13 city-3-loc-5 (16)
drive truck-1 city-2-loc-25 city-2-loc-17 (14)
pick-up truck-1 city-2-loc-17 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-17 city-2-loc-25 (14)
drop truck-1 city-2-loc-25 package-10 capacity-0 capacity-1 (1)
drive truck-2 city-3-loc-5 city-3-loc-13 (16)
drive truck-2 city-3-loc-13 city-3-loc-28 (22)
pick-up truck-1 city-2-loc-25 package-10 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-25 city-2-loc-8 (27)
drive truck-1 city-2-loc-8 city-2-loc-2 (26)
drive truck-1 city-2-loc-2 city-2-loc-28 (16)
drop truck-1 city-2-loc-28 package-2 capacity-0 capacity-1 (1)
drive truck-2 city-3-loc-28 city-3-loc-11 (26)
drive truck-2 city-3-loc-11 city-3-loc-14 (18)
drive truck-2 city-3-loc-14 city-2-loc-28 (148)
drive truck-1 city-2-loc-28 city-2-loc-6 (16)
pick-up truck-2 city-2-loc-28 package-2 capacity-3 capacity-4 (1)
drop truck-1 city-2-loc-6 package-10 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-28 city-2-loc-2 (16)
drive truck-1 city-2-loc-6 city-2-loc-28 (16)
drive truck-2 city-2-loc-2 city-2-loc-8 (26)
drive truck-1 city-2-loc-28 city-2-loc-2 (16)
drive truck-1 city-2-loc-2 city-2-loc-29 (25)
drive truck-1 city-2-loc-29 city-2-loc-27 (13)
drive truck-1 city-2-loc-27 city-2-loc-12 (27)
drive truck-2 city-2-loc-8 city-2-loc-29 (15)
drive truck-2 city-2-loc-29 city-2-loc-5 (23)
pick-up truck-2 city-2-loc-5 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-2-loc-5 city-2-loc-29 (23)
drive truck-2 city-2-loc-29 city-2-loc-8 (15)
drive truck-1 city-2-loc-12 city-2-loc-27 (27)
drive truck-1 city-2-loc-27 city-2-loc-9 (22)
drive truck-1 city-2-loc-9 city-2-loc-16 (14)
drive truck-1 city-2-loc-16 city-2-loc-3 (18)
drive truck-1 city-2-loc-3 city-2-loc-19 (23)
drive truck-1 city-2-loc-19 city-2-loc-10 (23)
drive truck-2 city-2-loc-8 city-2-loc-2 (26)
drive truck-1 city-2-loc-10 city-2-loc-20 (26)
drive truck-1 city-2-loc-20 city-2-loc-1 (14)
drive truck-2 city-2-loc-2 city-2-loc-28 (16)
drive truck-2 city-2-loc-28 city-3-loc-14 (148)
pick-up truck-1 city-2-loc-1 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-3-loc-14 city-3-loc-19 (11)
drive truck-1 city-2-loc-1 city-2-loc-28 (26)
drive truck-2 city-3-loc-19 city-3-loc-9 (26)
drive truck-1 city-2-loc-28 city-3-loc-14 (148)
drive truck-1 city-3-loc-14 city-3-loc-6 (22)
pick-up truck-1 city-3-loc-6 package-9 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-6 city-3-loc-14 (22)
drive truck-1 city-3-loc-14 city-2-loc-28 (148)
drive truck-1 city-2-loc-28 city-2-loc-18 (16)
drop truck-1 city-2-loc-18 package-9 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-18 city-2-loc-2 (21)
drive truck-1 city-2-loc-2 city-2-loc-8 (26)
drive truck-1 city-2-loc-8 city-2-loc-25 (27)
drive truck-1 city-2-loc-25 city-2-loc-11 (20)
drive truck-1 city-2-loc-11 city-1-loc-2 (105)
drive truck-1 city-1-loc-2 city-1-loc-26 (18)
drop truck-1 city-1-loc-26 package-6 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-26 city-1-loc-2 (18)
drive truck-1 city-1-loc-2 city-2-loc-11 (105)
drive truck-1 city-2-loc-11 city-2-loc-14 (22)
drive truck-1 city-2-loc-14 city-2-loc-3 (16)
drive truck-2 city-3-loc-9 city-3-loc-19 (26)
drive truck-2 city-3-loc-19 city-3-loc-7 (12)
drive truck-2 city-3-loc-7 city-3-loc-26 (24)
drop truck-2 city-3-loc-26 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-3-loc-26 city-3-loc-7 (24)
drive truck-2 city-3-loc-7 city-3-loc-19 (12)
drive truck-2 city-3-loc-19 city-3-loc-9 (26)
drive truck-1 city-2-loc-3 city-2-loc-30 (20)
drive truck-1 city-2-loc-30 city-2-loc-11 (11)
drive truck-2 city-3-loc-9 city-3-loc-21 (20)
drive truck-1 city-2-loc-11 city-1-loc-2 (105)
drive truck-1 city-1-loc-2 city-1-loc-26 (18)
drive truck-1 city-1-loc-26 city-1-loc-28 (26)
drive truck-1 city-1-loc-28 city-1-loc-24 (11)
drive truck-2 city-3-loc-21 city-3-loc-32 (26)
drive truck-2 city-3-loc-32 city-1-loc-32 (146)
drive truck-2 city-1-loc-32 city-1-loc-22 (20)
drop truck-2 city-1-loc-22 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-1-loc-22 city-1-loc-21 (24)
drive truck-2 city-1-loc-21 city-1-loc-23 (14)
pick-up truck-2 city-1-loc-23 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-1-loc-23 city-1-loc-29 (15)
drive truck-2 city-1-loc-29 city-1-loc-22 (18)
drive truck-2 city-1-loc-22 city-1-loc-32 (20)
drive truck-2 city-1-loc-32 city-3-loc-32 (146)
drive truck-2 city-3-loc-32 city-3-loc-21 (26)
drop truck-2 city-3-loc-21 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-21 city-3-loc-9 (20)
drive truck-1 city-1-loc-24 city-1-loc-25 (11)
drive truck-2 city-3-loc-9 city-3-loc-19 (26)
drive truck-2 city-3-loc-19 city-3-loc-7 (12)
drive truck-2 city-3-loc-7 city-3-loc-29 (22)
pick-up truck-2 city-3-loc-29 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-29 city-3-loc-26 (13)
drive truck-2 city-3-loc-26 city-3-loc-17 (25)
drive truck-2 city-3-loc-17 city-3-loc-27 (24)
drive truck-2 city-3-loc-27 city-3-loc-23 (25)
drive truck-2 city-3-loc-23 city-3-loc-32 (16)
drive truck-2 city-3-loc-32 city-1-loc-32 (146)
drive truck-2 city-1-loc-32 city-1-loc-22 (20)
drive truck-2 city-1-loc-22 city-1-loc-21 (24)
drive truck-2 city-1-loc-21 city-1-loc-23 (14)
drop truck-2 city-1-loc-23 package-3 capacity-3 capacity-4 (1)
[t=12.5957s, 23788 KB] Plan length: 195 step(s).
[t=12.5957s, 23788 KB] Plan cost: 4744
[t=12.5957s, 23788 KB] Timestamp: 1685459682726 millisecond(s).
[t=12.5957s, 23788 KB] Expanded 7101 state(s).
[t=12.5957s, 23788 KB] Reopened 0 state(s).
[t=12.5957s, 23788 KB] Evaluated 42748 state(s).
[t=12.5957s, 23788 KB] Evaluations: 42748
[t=12.5957s, 23788 KB] Generated 88549 state(s).
[t=12.5957s, 23788 KB] Dead ends: 0 state(s).
[t=12.5957s, 23788 KB] Number of registered states: 42748
[t=12.5957s, 23788 KB] Int hash set load factor: 42748/65536 = 0.652283
[t=12.5957s, 23788 KB] Int hash set resizes: 16
[t=12.5957s, 23788 KB] Search time: 12.5017s
[t=12.5957s, 23788 KB] Total time: 12.5957s
Solution found.
Peak memory: 23788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 4744 

Successful plans:
Value: 4744
 sas_plan 4744 

validate exit code: 0

INFO     Planner time: 14.55s
