INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 24 rules.
Computing model... [0.010s CPU, 0.007s wall-clock]
771 relevant atoms
520 auxiliary atoms
1291 final queue length
1744 total queue pushes
Completing instantiation... [0.010s CPU, 0.009s wall-clock]
Instantiating: [0.020s CPU, 0.020s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.009s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
50 of 53 mutex groups necessary.
402 of 402 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 254
Translator goal facts: 50
Translator mutex groups: 50
Translator total mutex groups size: 200
Translator operators: 402
Translator axioms: 0
Translator task size: 2763
Translator peak memory: 33464 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.050s CPU, 0.050s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.00353319s, 11324 KB] done reading input!
[t=0.00434116s, 11720 KB] Simplifying 802 unary operators... done! [802 unary operators]
[t=0.00646934s, 11720 KB] time to simplify: 0.00212818s
[t=0.00653891s, 11720 KB] Initializing additive heuristic...
[t=0.0066084s, 11720 KB] Initializing FF heuristic...
[t=0.00663388s, 11720 KB] Building successor generator...done!
[t=0.00686739s, 11720 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00691219s, 11720 KB] time for successor generation creation: 0s
[t=0.00693789s, 11720 KB] Variables: 53
[t=0.00696378s, 11720 KB] FactPairs: 254
[t=0.00698701s, 11720 KB] Bytes per state: 16
[t=0.00701058s, 11720 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00706585s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 101
[t=0.00712233s, 11720 KB] g=0, 1 evaluated, 0 expanded
[t=0.00714695s, 11720 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 101
[t=0.00718152s, 11720 KB] pruning method: none
[t=0.00720559s, 11720 KB] Start Timestep: 1685466927886 millisecond(s).
[t=0.00730033s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 100
[t=0.00732857s, 11720 KB] g=1, 3 evaluated, 1 expanded
[t=0.00735272s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 99
[t=0.010128s, 11720 KB] g=3, 202 evaluated, 4 expanded
[t=0.0101539s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 98
[t=0.0101967s, 11720 KB] g=4, 203 evaluated, 5 expanded
[t=0.0102201s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 97
[t=0.010307s, 11720 KB] g=5, 207 evaluated, 7 expanded
[t=0.0103806s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 96
[t=0.010437s, 11720 KB] g=7, 211 evaluated, 9 expanded
[t=0.0151596s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 95
[t=0.0181166s, 11720 KB] g=9, 795 evaluated, 24 expanded
[t=0.0181449s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 94
[t=0.0181877s, 11720 KB] g=10, 796 evaluated, 25 expanded
[t=0.0182118s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 93
[t=0.0182865s, 11720 KB] g=11, 799 evaluated, 26 expanded
[t=0.01831s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 92
[t=0.0190599s, 11720 KB] g=13, 856 evaluated, 29 expanded
[t=0.0230191s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 91
[t=0.0246882s, 11720 KB] g=15, 1278 evaluated, 40 expanded
[t=0.0247128s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 90
[t=0.0247549s, 11720 KB] g=16, 1279 evaluated, 41 expanded
[t=0.0247794s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 89
[t=0.0249059s, 11720 KB] g=17, 1286 evaluated, 42 expanded
[t=0.0249302s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 88
[t=0.025686s, 11720 KB] g=19, 1343 evaluated, 45 expanded
[t=0.0428839s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 87
[t=0.0430159s, 11852 KB] g=21, 2668 evaluated, 78 expanded
[t=0.0430462s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 86
[t=0.0430906s, 11852 KB] g=22, 2669 evaluated, 79 expanded
[t=0.0431146s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 85
[t=0.0432739s, 11852 KB] g=23, 2678 evaluated, 80 expanded
[t=0.0432972s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 84
[t=0.0435781s, 11852 KB] g=25, 2697 evaluated, 84 expanded
[t=0.0436022s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 83
[t=0.045858s, 11852 KB] g=27, 2864 evaluated, 87 expanded
[t=0.0458833s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 82
[t=0.0459253s, 11852 KB] g=28, 2865 evaluated, 88 expanded
[t=0.0459502s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 81
[t=0.0462491s, 11852 KB] g=29, 2886 evaluated, 90 expanded
[t=0.0462728s, 11852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 80
[t=0.0465636s, 11852 KB] g=31, 2907 evaluated, 93 expanded
[t=0.059942s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 79
[t=0.0620964s, 11988 KB] g=33, 4115 evaluated, 129 expanded
[t=0.0621266s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 78
[t=0.0621728s, 11988 KB] g=34, 4116 evaluated, 130 expanded
[t=0.0621971s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.0624001s, 11988 KB] g=35, 4129 evaluated, 131 expanded
[t=0.0625198s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 76
[t=0.0643354s, 11988 KB] g=37, 4258 evaluated, 135 expanded
[t=0.0664851s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 75
[t=0.0700297s, 11988 KB] g=39, 4680 evaluated, 146 expanded
[t=0.0700566s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 74
[t=0.0700996s, 11988 KB] g=40, 4681 evaluated, 147 expanded
[t=0.0701239s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 73
[t=0.0703498s, 11988 KB] g=41, 4696 evaluated, 148 expanded
[t=0.0704156s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 72
[t=0.0719652s, 11988 KB] g=43, 4807 evaluated, 152 expanded
[t=0.0903512s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 71
[t=0.0933516s, 11988 KB] g=45, 6494 evaluated, 212 expanded
[t=0.0933826s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 70
[t=0.0934263s, 11988 KB] g=46, 6495 evaluated, 213 expanded
[t=0.0934508s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 69
[t=0.0938321s, 11988 KB] g=47, 6523 evaluated, 215 expanded
[t=0.0942698s, 11988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 68
[t=0.0947909s, 11988 KB] g=49, 6593 evaluated, 219 expanded
[t=0.114191s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 67
[t=0.118149s, 12112 KB] g=51, 8364 evaluated, 277 expanded
[t=0.118182s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 66
[t=0.11823s, 12112 KB] g=52, 8365 evaluated, 278 expanded
[t=0.118254s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 65
[t=0.11853s, 12112 KB] g=53, 8384 evaluated, 279 expanded
[t=0.118557s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.119063s, 12112 KB] g=55, 8422 evaluated, 282 expanded
[t=0.122046s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=0.123052s, 12112 KB] g=57, 8729 evaluated, 294 expanded
[t=0.123078s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.123121s, 12112 KB] g=58, 8730 evaluated, 295 expanded
[t=0.123146s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.123439s, 12112 KB] g=59, 8751 evaluated, 296 expanded
[t=0.123462s, 12112 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.124095s, 12112 KB] g=61, 8800 evaluated, 299 expanded
[t=0.129949s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.130259s, 12248 KB] g=63, 9284 evaluated, 316 expanded
[t=0.130287s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.130332s, 12248 KB] g=64, 9285 evaluated, 317 expanded
[t=0.130357s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.130723s, 12248 KB] g=65, 9311 evaluated, 319 expanded
[t=0.130747s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.1318s, 12248 KB] g=67, 9393 evaluated, 322 expanded
[t=0.149835s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.153594s, 12248 KB] g=69, 11086 evaluated, 407 expanded
[t=0.153627s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.153672s, 12248 KB] g=70, 11087 evaluated, 408 expanded
[t=0.153757s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.154059s, 12248 KB] g=71, 11113 evaluated, 410 expanded
[t=0.154084s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.155386s, 12248 KB] g=73, 11218 evaluated, 414 expanded
[t=0.169685s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.169941s, 12248 KB] g=75, 12375 evaluated, 485 expanded
[t=0.16997s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.170013s, 12248 KB] g=76, 12376 evaluated, 486 expanded
[t=0.170037s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.170736s, 12248 KB] g=77, 12432 evaluated, 488 expanded
[t=0.170761s, 12248 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.171699s, 12248 KB] g=79, 12510 evaluated, 492 expanded
[t=0.181539s, 12372 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.183271s, 12372 KB] g=81, 13453 evaluated, 536 expanded
[t=0.1833s, 12372 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.183343s, 12372 KB] g=82, 13454 evaluated, 537 expanded
[t=0.183368s, 12372 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.184035s, 12372 KB] g=83, 13508 evaluated, 539 expanded
[t=0.18406s, 12372 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.184785s, 12372 KB] g=85, 13567 evaluated, 543 expanded
[t=0.197422s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.201181s, 12632 KB] g=87, 14808 evaluated, 627 expanded
[t=0.20135s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.20251s, 12632 KB] g=89, 14913 evaluated, 631 expanded
[t=0.215348s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.216501s, 12632 KB] g=91, 16021 evaluated, 712 expanded
[t=0.217186s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.219113s, 12632 KB] g=93, 16219 evaluated, 716 expanded
[t=0.229163s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.231051s, 12632 KB] g=95, 17159 evaluated, 794 expanded
[t=0.231081s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.232531s, 12632 KB] g=97, 17283 evaluated, 798 expanded
[t=0.241072s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.24514s, 12632 KB] g=99, 18284 evaluated, 872 expanded
[t=0.245174s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.245219s, 12632 KB] g=100, 18285 evaluated, 873 expanded
[t=0.245243s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.245671s, 12632 KB] g=101, 18319 evaluated, 875 expanded
[t=0.245696s, 12632 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=0.246505s, 12632 KB] g=103, 18387 evaluated, 879 expanded
[t=0.252923s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.254894s, 12768 KB] g=105, 19054 evaluated, 912 expanded
[t=0.254925s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.254971s, 12768 KB] g=106, 19055 evaluated, 913 expanded
[t=0.254997s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.255456s, 12768 KB] g=107, 19092 evaluated, 915 expanded
[t=0.256835s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.256944s, 12768 KB] g=109, 19216 evaluated, 918 expanded
[t=0.260755s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.262323s, 12768 KB] g=111, 19650 evaluated, 978 expanded
[t=0.262353s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.263904s, 12768 KB] g=113, 19785 evaluated, 982 expanded
[t=0.268702s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.271704s, 12768 KB] g=115, 20394 evaluated, 1037 expanded
[t=0.272633s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.273325s, 12768 KB] g=117, 20532 evaluated, 1041 expanded
[t=0.273352s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.275284s, 12768 KB] g=119, 20687 evaluated, 1056 expanded
[t=0.275313s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.275356s, 12768 KB] g=120, 20688 evaluated, 1057 expanded
[t=0.27538s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.275839s, 12768 KB] g=121, 20728 evaluated, 1058 expanded
[t=0.276535s, 12768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.276731s, 12768 KB] g=123, 20806 evaluated, 1060 expanded
[t=0.280449s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.282494s, 12900 KB] g=125, 21264 evaluated, 1102 expanded
[t=0.282523s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.283804s, 12900 KB] g=127, 21384 evaluated, 1106 expanded
[t=0.288386s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.288464s, 12900 KB] g=129, 21770 evaluated, 1137 expanded
[t=0.288491s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.288534s, 12900 KB] g=130, 21771 evaluated, 1138 expanded
[t=0.288557s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.289043s, 12900 KB] g=131, 21815 evaluated, 1140 expanded
[t=0.289069s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.290383s, 12900 KB] g=133, 21934 evaluated, 1144 expanded
[t=0.292313s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.295661s, 12900 KB] g=135, 22371 evaluated, 1176 expanded
[t=0.296256s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.297068s, 12900 KB] g=137, 22502 evaluated, 1180 expanded
[t=0.297093s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.297376s, 12900 KB] g=139, 22524 evaluated, 1183 expanded
[t=0.297401s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.297441s, 12900 KB] g=140, 22525 evaluated, 1184 expanded
[t=0.297464s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.298102s, 12900 KB] g=141, 22583 evaluated, 1186 expanded
[t=0.298126s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.29908s, 12900 KB] g=143, 22675 evaluated, 1190 expanded
[t=0.299106s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.299655s, 12900 KB] g=145, 22719 evaluated, 1195 expanded
[t=0.30012s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.301106s, 12900 KB] g=147, 22858 evaluated, 1198 expanded
[t=0.304078s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.304592s, 12900 KB] g=149, 23125 evaluated, 1214 expanded
[t=0.304618s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.306054s, 12900 KB] g=151, 23269 evaluated, 1218 expanded
[t=0.307991s, 12900 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.308155s, 12900 KB] g=153, 23440 evaluated, 1231 expanded
[t=0.308181s, 13036 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.309857s, 13036 KB] g=155, 23603 evaluated, 1235 expanded
[t=0.309882s, 13036 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.309976s, 13036 KB] g=156, 23609 evaluated, 1237 expanded
[t=0.310001s, 13036 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.310058s, 13036 KB] g=157, 23611 evaluated, 1239 expanded
[t=0.310083s, 13036 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.310137s, 13036 KB] g=158, 23613 evaluated, 1241 expanded
[t=0.310161s, 13036 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.310569s, 13036 KB] g=159, 23665 evaluated, 1243 expanded
[t=0.310593s, 13036 KB] Solution found!
[t=0.310625s, 13036 KB] Actual search time: 0.303377s
pick ball4 rooma right (1)
pick ball9 rooma left (1)
move rooma roomb (1)
drop ball9 roomb left (1)
drop ball4 roomb right (1)
move roomb rooma (1)
pick ball1 rooma left (1)
pick ball41 rooma right (1)
move rooma roomb (1)
drop ball41 roomb right (1)
drop ball1 roomb left (1)
move roomb rooma (1)
pick ball10 rooma left (1)
pick ball8 rooma right (1)
move rooma roomb (1)
drop ball10 roomb left (1)
drop ball8 roomb right (1)
move roomb rooma (1)
pick ball23 rooma left (1)
pick ball44 rooma right (1)
move rooma roomb (1)
drop ball23 roomb left (1)
drop ball44 roomb right (1)
move roomb rooma (1)
pick ball11 rooma left (1)
pick ball21 rooma right (1)
move rooma roomb (1)
drop ball11 roomb left (1)
drop ball21 roomb right (1)
move roomb rooma (1)
pick ball20 rooma left (1)
pick ball29 rooma right (1)
move rooma roomb (1)
drop ball20 roomb left (1)
drop ball29 roomb right (1)
move roomb rooma (1)
pick ball13 rooma left (1)
pick ball38 rooma right (1)
move rooma roomb (1)
drop ball13 roomb left (1)
drop ball38 roomb right (1)
move roomb rooma (1)
pick ball35 rooma left (1)
pick ball49 rooma right (1)
move rooma roomb (1)
drop ball35 roomb left (1)
drop ball49 roomb right (1)
move roomb rooma (1)
pick ball45 rooma left (1)
pick ball24 rooma right (1)
move rooma roomb (1)
drop ball45 roomb left (1)
drop ball24 roomb right (1)
move roomb rooma (1)
pick ball15 rooma left (1)
pick ball14 rooma right (1)
move rooma roomb (1)
drop ball15 roomb left (1)
drop ball14 roomb right (1)
move roomb rooma (1)
pick ball19 rooma left (1)
pick ball42 rooma right (1)
move rooma roomb (1)
drop ball19 roomb left (1)
drop ball42 roomb right (1)
move roomb rooma (1)
pick ball47 rooma left (1)
pick ball6 rooma right (1)
move rooma roomb (1)
drop ball47 roomb left (1)
drop ball6 roomb right (1)
move roomb rooma (1)
pick ball25 rooma left (1)
pick ball50 rooma right (1)
move rooma roomb (1)
drop ball25 roomb left (1)
drop ball50 roomb right (1)
move roomb rooma (1)
pick ball43 rooma left (1)
pick ball16 rooma right (1)
move rooma roomb (1)
drop ball43 roomb left (1)
drop ball16 roomb right (1)
move roomb rooma (1)
pick ball12 rooma left (1)
move rooma roomb (1)
drop ball12 roomb left (1)
move roomb rooma (1)
pick ball17 rooma left (1)
move rooma roomb (1)
drop ball17 roomb left (1)
move roomb rooma (1)
pick ball18 rooma left (1)
move rooma roomb (1)
drop ball18 roomb left (1)
move roomb rooma (1)
pick ball37 rooma left (1)
pick ball5 rooma right (1)
move rooma roomb (1)
drop ball37 roomb left (1)
drop ball5 roomb right (1)
move roomb rooma (1)
pick ball28 rooma left (1)
pick ball39 rooma right (1)
move rooma roomb (1)
drop ball28 roomb left (1)
drop ball39 roomb right (1)
move roomb rooma (1)
pick ball2 rooma left (1)
move rooma roomb (1)
drop ball2 roomb left (1)
move roomb rooma (1)
pick ball22 rooma left (1)
move rooma roomb (1)
drop ball22 roomb left (1)
move roomb rooma (1)
pick ball30 rooma left (1)
pick ball7 rooma right (1)
move rooma roomb (1)
drop ball30 roomb left (1)
drop ball7 roomb right (1)
move roomb rooma (1)
pick ball26 rooma left (1)
move rooma roomb (1)
drop ball26 roomb left (1)
move roomb rooma (1)
pick ball40 rooma left (1)
pick ball3 rooma right (1)
move rooma roomb (1)
drop ball40 roomb left (1)
drop ball3 roomb right (1)
move roomb rooma (1)
pick ball27 rooma left (1)
move rooma roomb (1)
drop ball27 roomb left (1)
move roomb rooma (1)
pick ball31 rooma left (1)
pick ball48 rooma right (1)
move rooma roomb (1)
drop ball31 roomb left (1)
drop ball48 roomb right (1)
move roomb rooma (1)
pick ball32 rooma left (1)
move rooma roomb (1)
drop ball32 roomb left (1)
move roomb rooma (1)
pick ball33 rooma left (1)
move rooma roomb (1)
drop ball33 roomb left (1)
move roomb rooma (1)
pick ball34 rooma left (1)
move rooma roomb (1)
drop ball34 roomb left (1)
move roomb rooma (1)
pick ball36 rooma left (1)
pick ball46 rooma right (1)
move rooma roomb (1)
drop ball36 roomb left (1)
drop ball46 roomb right (1)
[t=0.310673s, 13036 KB] Plan length: 159 step(s).
[t=0.310673s, 13036 KB] Plan cost: 159
[t=0.310673s, 13036 KB] Timestamp: 1685466928195 millisecond(s).
[t=0.310673s, 13036 KB] Expanded 1244 state(s).
[t=0.310673s, 13036 KB] Reopened 0 state(s).
[t=0.310673s, 13036 KB] Evaluated 23665 state(s).
[t=0.310673s, 13036 KB] Evaluations: 23665
[t=0.310673s, 13036 KB] Generated 28725 state(s).
[t=0.310673s, 13036 KB] Dead ends: 0 state(s).
[t=0.310673s, 13036 KB] Number of registered states: 23665
[t=0.310673s, 13036 KB] Int hash set load factor: 23665/32768 = 0.722198
[t=0.310673s, 13036 KB] Int hash set resizes: 15
[t=0.310673s, 13036 KB] Search time: 0.303663s
[t=0.310673s, 13036 KB] Total time: 0.310673s
Solution found.
Peak memory: 13036 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 159 

Successful plans:
Value: 159
 sas_plan 159 

validate exit code: 0

INFO     Planner time: 0.46s
