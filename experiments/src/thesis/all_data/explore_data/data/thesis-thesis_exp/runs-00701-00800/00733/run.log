INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.010s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 90 rules.
Computing model... [0.040s CPU, 0.040s wall-clock]
1002 relevant atoms
6690 auxiliary atoms
7692 final queue length
8303 total queue pushes
Completing instantiation... [0.010s CPU, 0.010s wall-clock]
Instantiating: [0.050s CPU, 0.058s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.009s wall-clock]
110 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
27 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
49 of 51 variables necessary.
0 of 21 mutex groups necessary.
423 of 428 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 146
Translator goal facts: 19
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 423
Translator axioms: 0
Translator task size: 1882
Translator peak memory: 35196 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.090s CPU, 0.085s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), softmin_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00186274s, 11200 KB] reading input...
[t=0.00291558s, 11324 KB] done reading input!
[t=0.00580577s, 11588 KB] Simplifying 543 unary operators... done! [507 unary operators]
[t=0.00629824s, 11588 KB] time to simplify: 0.000492476s
[t=0.00635467s, 11588 KB] Initializing additive heuristic...
[t=0.00640675s, 11588 KB] Initializing FF heuristic...
[t=0.00643176s, 11588 KB] Building successor generator...done!
[t=0.00668797s, 11720 KB] peak memory difference for successor generator creation: 132 KB
[t=0.00673057s, 11720 KB] time for successor generation creation: 0s
[t=0.00675516s, 11720 KB] Variables: 49
[t=0.0067816s, 11720 KB] FactPairs: 146
[t=0.00680497s, 11720 KB] Bytes per state: 8
[t=0.00682825s, 11720 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00688348s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.0069421s, 11720 KB] g=0, 1 evaluated, 0 expanded
[t=0.00696659s, 11720 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.00700652s, 11720 KB] pruning method: none
[t=0.00702967s, 11720 KB] Start Timestep: 1685471188139 millisecond(s).
[t=0.00707233s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.00722912s, 11720 KB] g=1, 12 evaluated, 1 expanded
[t=0.00725353s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.00778061s, 11720 KB] g=3, 62 evaluated, 4 expanded
[t=0.00780472s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.00806654s, 11720 KB] g=4, 85 evaluated, 5 expanded
[t=0.00809014s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.00839416s, 11720 KB] g=5, 115 evaluated, 7 expanded
[t=0.00841815s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.00913989s, 11720 KB] g=7, 186 evaluated, 13 expanded
[t=0.00916931s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.00929095s, 11720 KB] g=8, 196 evaluated, 14 expanded
[t=0.0094653s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.0096158s, 11720 KB] g=9, 223 evaluated, 16 expanded
[t=0.00964082s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.0102598s, 11720 KB] g=12, 285 evaluated, 23 expanded
[t=0.0102859s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.0104096s, 11720 KB] g=13, 296 evaluated, 24 expanded
[t=0.0104331s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.0121709s, 11720 KB] g=21, 490 evaluated, 54 expanded
[t=0.0121966s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.012484s, 11720 KB] g=22, 515 evaluated, 56 expanded
[t=0.0125091s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.0129165s, 11720 KB] g=24, 561 evaluated, 61 expanded
[t=0.0129402s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.0131166s, 11720 KB] g=25, 578 evaluated, 62 expanded
[t=0.0132942s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.0133694s, 11720 KB] g=27, 599 evaluated, 65 expanded
[t=0.013393s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.0138031s, 11720 KB] g=29, 645 evaluated, 69 expanded
[t=0.013827s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.0139603s, 11720 KB] g=30, 658 evaluated, 70 expanded
[t=0.013989s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.0141321s, 11720 KB] g=31, 671 evaluated, 71 expanded
[t=0.0141549s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.0142667s, 11720 KB] g=32, 681 evaluated, 72 expanded
[t=0.0142897s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.0145348s, 11720 KB] g=33, 708 evaluated, 74 expanded
[t=0.0145588s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.0147144s, 11720 KB] g=34, 724 evaluated, 75 expanded
[t=0.0171539s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.0195036s, 11720 KB] g=37, 1303 evaluated, 153 expanded
[t=0.0195319s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.0197216s, 11720 KB] g=39, 1323 evaluated, 156 expanded
[t=0.0197447s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.0200641s, 11720 KB] g=41, 1361 evaluated, 161 expanded
[t=0.020088s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.0202286s, 11720 KB] g=42, 1375 evaluated, 162 expanded
[t=0.0202552s, 11720 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.0203569s, 11720 KB] g=44, 1384 evaluated, 164 expanded
[t=0.0329878s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.0349009s, 11832 KB] g=53, 3160 evaluated, 459 expanded
[t=0.0349376s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.0351583s, 11832 KB] g=54, 3183 evaluated, 460 expanded
[t=0.0351873s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.0354912s, 11832 KB] g=56, 3219 evaluated, 464 expanded
[t=0.0368959s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.0388005s, 11832 KB] g=59, 3641 evaluated, 526 expanded
[t=0.0388349s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.0389847s, 11832 KB] g=60, 3653 evaluated, 528 expanded
[t=0.0390105s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.0391854s, 11832 KB] g=61, 3672 evaluated, 529 expanded
[t=0.0408168s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.0419173s, 11832 KB] g=64, 3991 evaluated, 570 expanded
[t=0.0419459s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.042057s, 11832 KB] g=65, 4002 evaluated, 571 expanded
[t=0.0420802s, 11832 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.0422568s, 11832 KB] g=66, 4021 evaluated, 572 expanded
[t=0.056728s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.0586004s, 11968 KB] g=71, 6212 evaluated, 960 expanded
[t=0.0586321s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.0590645s, 11968 KB] g=73, 6266 evaluated, 966 expanded
[t=0.05909s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.0600452s, 11968 KB] g=76, 6396 evaluated, 986 expanded
[t=0.0600712s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.0601733s, 11968 KB] g=77, 6407 evaluated, 987 expanded
[t=0.0606223s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.0616058s, 11968 KB] g=83, 6605 evaluated, 1017 expanded
[t=0.061632s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.0618024s, 11968 KB] g=84, 6625 evaluated, 1018 expanded
[t=0.0618265s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.0621643s, 11968 KB] g=86, 6671 evaluated, 1024 expanded
[t=0.062188s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.0640463s, 11968 KB] g=93, 6938 evaluated, 1070 expanded
[t=0.0640727s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.0641816s, 11968 KB] g=94, 6949 evaluated, 1071 expanded
[t=0.0642058s, 11968 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.0644474s, 11968 KB] g=96, 6980 evaluated, 1076 expanded
[t=0.0684838s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.0710397s, 12092 KB] g=104, 7855 evaluated, 1235 expanded
[t=0.0710687s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.0711359s, 12092 KB] g=105, 7860 evaluated, 1236 expanded
[t=0.0711602s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.0712705s, 12092 KB] g=106, 7872 evaluated, 1237 expanded
[t=0.0712945s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.0715915s, 12092 KB] g=108, 7912 evaluated, 1244 expanded
[t=0.0723861s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.0761108s, 12092 KB] g=122, 8586 evaluated, 1346 expanded
[t=0.0761385s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.0761948s, 12092 KB] g=123, 8590 evaluated, 1347 expanded
[t=0.076218s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.0763118s, 12092 KB] g=124, 8600 evaluated, 1349 expanded
[t=0.0763435s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.07648s, 12092 KB] g=125, 8617 evaluated, 1350 expanded
[t=0.0765035s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.0767923s, 12092 KB] g=127, 8658 evaluated, 1355 expanded
[t=0.0768162s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.0780025s, 12092 KB] g=132, 8834 evaluated, 1392 expanded
[t=0.0780327s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.078124s, 12092 KB] g=133, 8844 evaluated, 1393 expanded
[t=0.0781476s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.0782492s, 12092 KB] g=134, 8856 evaluated, 1394 expanded
[t=0.0782727s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.0783823s, 12092 KB] g=135, 8872 evaluated, 1395 expanded
[t=0.0784054s, 12092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.0785933s, 12092 KB] g=136, 8904 evaluated, 1397 expanded
[t=0.0786162s, 12092 KB] Solution found!
[t=0.0786773s, 12092 KB] Actual search time: 0.071605s
calibrate rover0 camera5 objective0 waypoint22 (1)
take_image rover0 waypoint22 objective0 camera5 high_res (1)
calibrate rover0 camera2 objective0 waypoint22 (1)
take_image rover0 waypoint22 objective0 camera2 low_res (1)
navigate rover0 waypoint22 waypoint19 (1)
navigate rover1 waypoint3 waypoint2 (1)
navigate rover0 waypoint19 waypoint20 (1)
communicate_image_data rover0 general objective0 low_res waypoint20 waypoint13 (1)
communicate_image_data rover0 general objective0 high_res waypoint20 waypoint13 (1)
calibrate rover1 camera3 objective0 waypoint2 (1)
sample_soil rover0 rover0store waypoint20 (1)
communicate_soil_data rover0 general waypoint20 waypoint20 waypoint13 (1)
drop rover0 rover0store (1)
navigate rover1 waypoint2 waypoint18 (1)
calibrate rover1 camera4 objective0 waypoint18 (1)
take_image rover1 waypoint18 objective0 camera4 high_res (1)
calibrate rover1 camera4 objective0 waypoint18 (1)
navigate rover0 waypoint20 waypoint19 (1)
navigate rover0 waypoint19 waypoint1 (1)
sample_rock rover1 rover1store waypoint18 (1)
communicate_rock_data rover1 general waypoint18 waypoint18 waypoint13 (1)
drop rover1 rover1store (1)
sample_soil rover1 rover1store waypoint18 (1)
communicate_soil_data rover1 general waypoint18 waypoint18 waypoint13 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint3 (1)
sample_soil rover0 rover0store waypoint1 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint1 waypoint19 (1)
sample_soil rover0 rover0store waypoint19 (1)
navigate rover0 waypoint19 waypoint18 (1)
communicate_soil_data rover0 general waypoint1 waypoint18 waypoint13 (1)
communicate_soil_data rover0 general waypoint19 waypoint18 waypoint13 (1)
navigate rover1 waypoint3 waypoint9 (1)
sample_rock rover1 rover1store waypoint9 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint9 waypoint11 (1)
communicate_rock_data rover1 general waypoint9 waypoint11 waypoint13 (1)
sample_rock rover1 rover1store waypoint11 (1)
communicate_rock_data rover1 general waypoint11 waypoint11 waypoint13 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint11 waypoint9 (1)
navigate rover1 waypoint9 waypoint3 (1)
calibrate rover0 camera5 objective0 waypoint18 (1)
navigate rover0 waypoint18 waypoint19 (1)
navigate rover0 waypoint19 waypoint5 (1)
calibrate rover0 camera2 objective0 waypoint5 (1)
navigate rover1 waypoint3 waypoint17 (1)
sample_soil rover1 rover1store waypoint17 (1)
navigate rover1 waypoint17 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint3 waypoint25 (1)
communicate_soil_data rover1 general waypoint17 waypoint25 waypoint13 (1)
navigate rover1 waypoint25 waypoint4 (1)
sample_rock rover1 rover1store waypoint4 (1)
navigate rover1 waypoint4 waypoint25 (1)
communicate_rock_data rover1 general waypoint4 waypoint25 waypoint13 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint25 waypoint6 (1)
sample_rock rover1 rover1store waypoint6 (1)
navigate rover1 waypoint6 waypoint25 (1)
communicate_rock_data rover1 general waypoint6 waypoint25 waypoint13 (1)
navigate rover1 waypoint25 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint3 waypoint2 (1)
navigate rover1 waypoint2 waypoint8 (1)
sample_rock rover1 rover1store waypoint8 (1)
drop rover1 rover1store (1)
sample_soil rover1 rover1store waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_soil_data rover1 general waypoint8 waypoint18 waypoint13 (1)
communicate_rock_data rover1 general waypoint8 waypoint18 waypoint13 (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint16 (1)
drop rover0 rover0store (1)
calibrate rover0 camera0 objective0 waypoint5 (1)
sample_rock rover1 rover1store waypoint16 (1)
navigate rover1 waypoint16 waypoint2 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_rock_data rover1 general waypoint16 waypoint18 waypoint13 (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover0 waypoint5 waypoint19 (1)
navigate rover0 waypoint19 waypoint20 (1)
take_image rover1 waypoint2 objective0 camera4 high_res (1)
navigate rover1 waypoint2 waypoint12 (1)
sample_rock rover1 rover1store waypoint12 (1)
navigate rover1 waypoint12 waypoint2 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_rock_data rover1 general waypoint12 waypoint18 waypoint13 (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint3 (1)
take_image rover1 waypoint3 objective0 camera3 high_res (1)
navigate rover1 waypoint3 waypoint22 (1)
calibrate rover1 camera4 objective0 waypoint22 (1)
navigate rover1 waypoint22 waypoint15 (1)
sample_soil rover1 rover1store waypoint15 (1)
navigate rover1 waypoint15 waypoint22 (1)
navigate rover1 waypoint22 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint3 waypoint25 (1)
communicate_soil_data rover1 general waypoint15 waypoint25 waypoint13 (1)
navigate rover0 waypoint20 waypoint19 (1)
navigate rover1 waypoint25 waypoint3 (1)
navigate rover0 waypoint19 waypoint5 (1)
take_image rover0 waypoint5 objective0 camera5 high_res (1)
calibrate rover0 camera1 objective0 waypoint5 (1)
take_image rover0 waypoint5 objective0 camera2 colour (1)
navigate rover1 waypoint3 waypoint14 (1)
take_image rover0 waypoint5 objective0 camera0 high_res (1)
navigate rover0 waypoint5 waypoint19 (1)
navigate rover0 waypoint19 waypoint22 (1)
navigate rover1 waypoint14 waypoint0 (1)
navigate rover0 waypoint22 waypoint24 (1)
sample_rock rover1 rover1store waypoint0 (1)
navigate rover1 waypoint0 waypoint14 (1)
navigate rover1 waypoint14 waypoint3 (1)
navigate rover1 waypoint3 waypoint2 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_rock_data rover1 general waypoint0 waypoint18 waypoint13 (1)
navigate rover1 waypoint18 waypoint2 (1)
navigate rover1 waypoint2 waypoint8 (1)
navigate rover0 waypoint24 waypoint22 (1)
navigate rover1 waypoint8 waypoint21 (1)
sample_rock rover1 rover1store waypoint21 (1)
navigate rover1 waypoint21 waypoint8 (1)
navigate rover1 waypoint8 waypoint2 (1)
navigate rover1 waypoint2 waypoint18 (1)
communicate_rock_data rover1 general waypoint21 waypoint18 waypoint13 (1)
[t=0.0787183s, 12092 KB] Plan length: 134 step(s).
[t=0.0787183s, 12092 KB] Plan cost: 134
[t=0.0787183s, 12092 KB] Timestamp: 1685471188214 millisecond(s).
[t=0.0787183s, 12092 KB] Expanded 1398 state(s).
[t=0.0787183s, 12092 KB] Reopened 0 state(s).
[t=0.0787183s, 12092 KB] Evaluated 8913 state(s).
[t=0.0787183s, 12092 KB] Evaluations: 8913
[t=0.0787183s, 12092 KB] Generated 24155 state(s).
[t=0.0787183s, 12092 KB] Dead ends: 0 state(s).
[t=0.0787183s, 12092 KB] Number of registered states: 8913
[t=0.0787183s, 12092 KB] Int hash set load factor: 8913/16384 = 0.544006
[t=0.0787183s, 12092 KB] Int hash set resizes: 14
[t=0.0787183s, 12092 KB] Search time: 0.0718901s
[t=0.0787183s, 12092 KB] Total time: 0.0787183s
Solution found.
Peak memory: 12092 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 134 

Successful plans:
Value: 134
 sas_plan 134 

validate exit code: 0

INFO     Planner time: 0.26s
