INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 90 rules.
Computing model... [0.040s CPU, 0.040s wall-clock]
3015 relevant atoms
5137 auxiliary atoms
8152 final queue length
11084 total queue pushes
Completing instantiation... [0.040s CPU, 0.045s wall-clock]
Instantiating: [0.090s CPU, 0.093s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
257 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.054s wall-clock]
1500 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
34 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.024s wall-clock]
Reordering and filtering variables...
103 of 273 variables necessary.
0 of 22 mutex groups necessary.
1848 of 2182 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 103
Translator derived variables: 0
Translator facts: 260
Translator goal facts: 28
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1848
Translator axioms: 0
Translator task size: 8140
Translator peak memory: 40300 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.200s CPU, 0.200s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), softmin_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.00796752s, 11632 KB] done reading input!
[t=0.00830724s, 12188 KB] Simplifying 2308 unary operators... done! [908 unary operators]
[t=0.010671s, 12188 KB] time to simplify: 0.00236378s
[t=0.0107417s, 12188 KB] Initializing additive heuristic...
[t=0.0108084s, 12188 KB] Initializing FF heuristic...
[t=0.0108329s, 12188 KB] Building successor generator...done!
[t=0.0113095s, 12188 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0113598s, 12188 KB] time for successor generation creation: 0s
[t=0.0113844s, 12188 KB] Variables: 103
[t=0.0114156s, 12188 KB] FactPairs: 260
[t=0.0114381s, 12188 KB] Bytes per state: 16
[t=0.0114602s, 12188 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0115152s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.0115728s, 12188 KB] g=0, 1 evaluated, 0 expanded
[t=0.0115966s, 12188 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.0116362s, 12188 KB] pruning method: none
[t=0.0116582s, 12188 KB] Start Timestep: 1685502113970 millisecond(s).
[t=0.0117314s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 75
[t=0.0118843s, 12188 KB] g=1, 7 evaluated, 1 expanded
[t=0.0119071s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 74
[t=0.0128445s, 12188 KB] g=2, 58 evaluated, 3 expanded
[t=0.012869s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 73
[t=0.0134403s, 12188 KB] g=3, 89 evaluated, 4 expanded
[t=0.0134642s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 71
[t=0.0149188s, 12188 KB] g=4, 171 evaluated, 7 expanded
[t=0.0149436s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 70
[t=0.0156772s, 12188 KB] g=5, 212 evaluated, 8 expanded
[t=0.019625s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 69
[t=0.0207325s, 12188 KB] g=7, 512 evaluated, 20 expanded
[t=0.0207584s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 68
[t=0.0217049s, 12188 KB] g=8, 565 evaluated, 22 expanded
[t=0.0235851s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 67
[t=0.0248957s, 12188 KB] g=11, 756 evaluated, 30 expanded
[t=0.0249212s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 66
[t=0.0255684s, 12188 KB] g=12, 794 evaluated, 31 expanded
[t=0.0275255s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 65
[t=0.0279731s, 12188 KB] g=14, 938 evaluated, 38 expanded
[t=0.0279979s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.0284156s, 12188 KB] g=15, 962 evaluated, 39 expanded
[t=0.0284399s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=0.0306675s, 12188 KB] g=17, 1094 evaluated, 45 expanded
[t=0.0306913s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.0310774s, 12188 KB] g=18, 1116 evaluated, 46 expanded
[t=0.0314288s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.0317687s, 12188 KB] g=20, 1155 evaluated, 48 expanded
[t=0.0317924s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.0322796s, 12188 KB] g=21, 1184 evaluated, 49 expanded
[t=0.0323035s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.0336479s, 12188 KB] g=24, 1267 evaluated, 53 expanded
[t=0.0336726s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.0341548s, 12188 KB] g=25, 1296 evaluated, 54 expanded
[t=0.0353414s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.0365375s, 12188 KB] g=27, 1441 evaluated, 61 expanded
[t=0.0365626s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.0368877s, 12188 KB] g=28, 1460 evaluated, 62 expanded
[t=0.0369112s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.037292s, 12188 KB] g=29, 1483 evaluated, 63 expanded
[t=0.037316s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.0376515s, 12188 KB] g=30, 1503 evaluated, 64 expanded
[t=0.0392642s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.0392995s, 12188 KB] g=33, 1604 evaluated, 70 expanded
[t=0.0393239s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.0408029s, 12188 KB] g=35, 1697 evaluated, 76 expanded
[t=0.0408281s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.0411093s, 12188 KB] g=36, 1713 evaluated, 77 expanded
[t=0.041133s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.0428468s, 12188 KB] g=39, 1822 evaluated, 83 expanded
[t=0.043123s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.0432938s, 12188 KB] g=40, 1846 evaluated, 84 expanded
[t=0.0433187s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.0442681s, 12188 KB] g=42, 1906 evaluated, 88 expanded
[t=0.0442919s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.0447714s, 12188 KB] g=43, 1936 evaluated, 89 expanded
[t=0.0447945s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.0459059s, 12188 KB] g=46, 1999 evaluated, 93 expanded
[t=0.0459306s, 12188 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.0463388s, 12188 KB] g=47, 2024 evaluated, 94 expanded
[t=0.047008s, 12324 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.0494426s, 12324 KB] g=50, 2223 evaluated, 107 expanded
[t=0.049468s, 12324 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.0497911s, 12324 KB] g=51, 2242 evaluated, 108 expanded
[t=0.0498152s, 12324 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.0508561s, 12324 KB] g=53, 2308 evaluated, 112 expanded
[t=0.114924s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.116476s, 12452 KB] g=67, 6524 evaluated, 523 expanded
[t=0.116505s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.116709s, 12452 KB] g=68, 6536 evaluated, 524 expanded
[t=0.118867s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.119233s, 12452 KB] g=73, 6693 evaluated, 542 expanded
[t=0.122834s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.12396s, 12452 KB] g=76, 7005 evaluated, 569 expanded
[t=0.123985s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.124443s, 12452 KB] g=77, 7033 evaluated, 571 expanded
[t=0.124468s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.125842s, 12452 KB] g=81, 7123 evaluated, 579 expanded
[t=0.125867s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.126132s, 12452 KB] g=82, 7139 evaluated, 580 expanded
[t=0.126156s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=0.126513s, 12452 KB] g=83, 7161 evaluated, 581 expanded
[t=0.126736s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.127336s, 12452 KB] g=86, 7212 evaluated, 585 expanded
[t=0.127361s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.127447s, 12452 KB] g=86, 7216 evaluated, 585 expanded
[t=0.12747s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.127793s, 12452 KB] g=87, 7236 evaluated, 586 expanded
[t=0.127816s, 12452 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.128089s, 12452 KB] g=88, 7253 evaluated, 587 expanded
[t=0.194632s, 12848 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.194899s, 12848 KB] g=107, 11745 evaluated, 992 expanded
[t=0.19493s, 12848 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.195182s, 12848 KB] g=108, 11760 evaluated, 993 expanded
[t=0.202552s, 12848 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.205146s, 12848 KB] g=117, 12452 evaluated, 1057 expanded
[t=0.205175s, 12848 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.205465s, 12848 KB] g=118, 12470 evaluated, 1058 expanded
[t=0.2145s, 12848 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.217148s, 12848 KB] g=121, 13295 evaluated, 1163 expanded
[t=0.217175s, 12848 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.217423s, 12848 KB] g=122, 13311 evaluated, 1164 expanded
[t=0.217446s, 12848 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.217858s, 12848 KB] g=123, 13338 evaluated, 1166 expanded
[t=0.234422s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.237536s, 13244 KB] g=130, 14651 evaluated, 1333 expanded
[t=0.238371s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.238523s, 13244 KB] g=132, 14716 evaluated, 1342 expanded
[t=0.25434s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.254723s, 13244 KB] g=141, 15866 evaluated, 1496 expanded
[t=0.254752s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.255047s, 13244 KB] g=142, 15885 evaluated, 1497 expanded
[t=0.255072s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.255374s, 13244 KB] g=143, 15906 evaluated, 1498 expanded
[t=0.278247s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.280667s, 13244 KB] g=153, 17754 evaluated, 1700 expanded
[t=0.280698s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.280868s, 13244 KB] g=154, 17764 evaluated, 1701 expanded
[t=0.280891s, 13244 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.281112s, 13244 KB] g=155, 17777 evaluated, 1702 expanded
[t=0.294147s, 13376 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.297045s, 13376 KB] g=164, 18944 evaluated, 1825 expanded
[t=0.297074s, 13376 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.297301s, 13376 KB] g=165, 18958 evaluated, 1826 expanded
[t=0.297325s, 13376 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.297564s, 13376 KB] g=166, 18974 evaluated, 1827 expanded
[t=0.450066s, 14296 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.453413s, 14296 KB] g=191, 30357 evaluated, 2952 expanded
[t=0.465992s, 14296 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.467378s, 14296 KB] g=197, 31393 evaluated, 3099 expanded
[t=0.467406s, 14296 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.467517s, 14296 KB] g=198, 31399 evaluated, 3100 expanded
[t=0.469941s, 14296 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.471334s, 14296 KB] g=205, 31691 evaluated, 3135 expanded
[t=0.47136s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.473454s, 14304 KB] g=207, 31855 evaluated, 3148 expanded
[t=0.473479s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.473854s, 14304 KB] g=208, 31883 evaluated, 3150 expanded
[t=0.473887s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.474091s, 14304 KB] g=209, 31899 evaluated, 3151 expanded
[t=0.474114s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.474294s, 14304 KB] g=210, 31914 evaluated, 3152 expanded
[t=0.474318s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.474547s, 14304 KB] g=211, 31936 evaluated, 3153 expanded
[t=0.474572s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.474796s, 14304 KB] g=212, 31959 evaluated, 3154 expanded
[t=0.474819s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.4752s, 14304 KB] g=213, 32001 evaluated, 3156 expanded
[t=0.475223s, 14304 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.475418s, 14304 KB] g=214, 32022 evaluated, 3157 expanded
[t=0.475441s, 14304 KB] Solution found!
[t=0.475519s, 14304 KB] Actual search time: 0.463819s
calibrate rover2 camera5 objective11 waypoint10 (1)
calibrate rover1 camera1 objective13 waypoint6 (1)
navigate rover2 waypoint10 waypoint2 (1)
navigate rover2 waypoint2 waypoint4 (1)
take_image rover1 waypoint6 objective10 camera1 colour (1)
calibrate rover2 camera3 objective12 waypoint4 (1)
take_image rover2 waypoint4 objective14 camera3 high_res (1)
communicate_image_data rover2 general objective14 high_res waypoint4 waypoint3 (1)
navigate rover3 waypoint0 waypoint10 (1)
sample_rock rover2 rover2store waypoint4 (1)
communicate_rock_data rover2 general waypoint4 waypoint4 waypoint3 (1)
drop rover2 rover2store (1)
calibrate rover2 camera3 objective12 waypoint4 (1)
take_image rover2 waypoint4 objective6 camera3 high_res (1)
communicate_image_data rover2 general objective6 high_res waypoint4 waypoint3 (1)
calibrate rover2 camera3 objective12 waypoint4 (1)
take_image rover2 waypoint4 objective18 camera3 high_res (1)
communicate_image_data rover2 general objective18 high_res waypoint4 waypoint3 (1)
calibrate rover2 camera6 objective4 waypoint4 (1)
take_image rover2 waypoint4 objective14 camera6 colour (1)
communicate_image_data rover2 general objective14 colour waypoint4 waypoint3 (1)
navigate rover3 waypoint10 waypoint0 (1)
calibrate rover2 camera6 objective4 waypoint4 (1)
take_image rover2 waypoint4 objective16 camera6 colour (1)
communicate_image_data rover2 general objective16 colour waypoint4 waypoint3 (1)
navigate rover0 waypoint11 waypoint5 (1)
sample_soil rover0 rover0store waypoint5 (1)
navigate rover0 waypoint5 waypoint11 (1)
navigate rover0 waypoint11 waypoint7 (1)
communicate_soil_data rover0 general waypoint5 waypoint7 waypoint3 (1)
navigate rover3 waypoint0 waypoint1 (1)
navigate rover1 waypoint6 waypoint1 (1)
communicate_image_data rover1 general objective10 colour waypoint1 waypoint3 (1)
take_image rover2 waypoint4 objective5 camera5 colour (1)
communicate_image_data rover2 general objective5 colour waypoint4 waypoint3 (1)
calibrate rover1 camera0 objective5 waypoint1 (1)
navigate rover3 waypoint1 waypoint3 (1)
take_image rover1 waypoint1 objective11 camera0 colour (1)
calibrate rover1 camera0 objective5 waypoint1 (1)
calibrate rover2 camera6 objective4 waypoint4 (1)
take_image rover2 waypoint4 objective18 camera6 colour (1)
communicate_image_data rover2 general objective18 colour waypoint4 waypoint3 (1)
communicate_image_data rover1 general objective11 colour waypoint1 waypoint3 (1)
navigate rover3 waypoint3 waypoint1 (1)
take_image rover1 waypoint1 objective15 camera0 high_res (1)
calibrate rover1 camera0 objective5 waypoint1 (1)
communicate_image_data rover1 general objective15 high_res waypoint1 waypoint3 (1)
calibrate rover2 camera3 objective12 waypoint4 (1)
calibrate rover2 camera6 objective4 waypoint4 (1)
navigate rover1 waypoint1 waypoint6 (1)
take_image rover1 waypoint6 objective13 camera0 high_res (1)
navigate rover1 waypoint6 waypoint7 (1)
communicate_image_data rover1 general objective13 high_res waypoint7 waypoint3 (1)
navigate rover3 waypoint1 waypoint0 (1)
navigate rover3 waypoint0 waypoint10 (1)
navigate rover1 waypoint7 waypoint6 (1)
navigate rover0 waypoint7 waypoint6 (1)
drop rover0 rover0store (1)
calibrate rover1 camera1 objective13 waypoint6 (1)
take_image rover1 waypoint6 objective16 camera1 colour (1)
navigate rover3 waypoint10 waypoint12 (1)
navigate rover1 waypoint6 waypoint7 (1)
calibrate rover1 camera0 objective5 waypoint7 (1)
sample_rock rover1 rover1store waypoint7 (1)
drop rover1 rover1store (1)
communicate_rock_data rover1 general waypoint7 waypoint7 waypoint3 (1)
navigate rover1 waypoint7 waypoint6 (1)
calibrate rover1 camera1 objective13 waypoint6 (1)
take_image rover1 waypoint6 objective10 camera0 colour (1)
navigate rover1 waypoint6 waypoint1 (1)
take_image rover1 waypoint1 objective5 camera1 colour (1)
navigate rover2 waypoint4 waypoint2 (1)
take_image rover2 waypoint2 objective3 camera6 colour (1)
navigate rover2 waypoint2 waypoint4 (1)
communicate_image_data rover2 general objective3 colour waypoint4 waypoint3 (1)
calibrate rover2 camera6 objective4 waypoint4 (1)
navigate rover2 waypoint4 waypoint2 (1)
take_image rover2 waypoint2 objective3 camera3 high_res (1)
navigate rover2 waypoint2 waypoint10 (1)
navigate rover2 waypoint10 waypoint5 (1)
sample_rock rover2 rover2store waypoint5 (1)
navigate rover3 waypoint12 waypoint10 (1)
navigate rover2 waypoint5 waypoint10 (1)
navigate rover2 waypoint10 waypoint7 (1)
communicate_image_data rover2 general objective3 high_res waypoint7 waypoint3 (1)
communicate_rock_data rover2 general waypoint5 waypoint7 waypoint3 (1)
navigate rover3 waypoint10 waypoint0 (1)
navigate rover3 waypoint0 waypoint5 (1)
calibrate rover1 camera0 objective5 waypoint1 (1)
take_image rover1 waypoint1 objective18 camera0 high_res (1)
take_image rover2 waypoint7 objective11 camera6 colour (1)
calibrate rover1 camera0 objective5 waypoint1 (1)
take_image rover1 waypoint1 objective18 camera0 colour (1)
navigate rover3 waypoint5 waypoint11 (1)
calibrate rover1 camera0 objective5 waypoint1 (1)
navigate rover1 waypoint1 waypoint6 (1)
navigate rover2 waypoint7 waypoint10 (1)
navigate rover2 waypoint10 waypoint12 (1)
navigate rover1 waypoint6 waypoint1 (1)
drop rover2 rover2store (1)
navigate rover2 waypoint12 waypoint6 (1)
sample_rock rover1 rover1store waypoint1 (1)
communicate_rock_data rover1 general waypoint1 waypoint1 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover3 waypoint11 waypoint5 (1)
calibrate rover2 camera2 objective13 waypoint6 (1)
navigate rover3 waypoint5 waypoint0 (1)
take_image rover2 waypoint6 objective13 camera2 high_res (1)
take_image rover1 waypoint1 objective11 camera0 colour (1)
navigate rover1 waypoint1 waypoint6 (1)
sample_rock rover1 rover1store waypoint6 (1)
navigate rover1 waypoint6 waypoint1 (1)
communicate_rock_data rover1 general waypoint6 waypoint1 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint1 waypoint3 (1)
sample_soil rover1 rover1store waypoint3 (1)
navigate rover1 waypoint3 waypoint1 (1)
communicate_soil_data rover1 general waypoint3 waypoint1 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover3 waypoint0 waypoint1 (1)
calibrate rover2 camera6 objective4 waypoint6 (1)
calibrate rover1 camera0 objective5 waypoint1 (1)
navigate rover1 waypoint1 waypoint0 (1)
navigate rover3 waypoint1 waypoint3 (1)
sample_soil rover1 rover1store waypoint0 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint0 waypoint1 (1)
communicate_soil_data rover1 general waypoint0 waypoint1 waypoint3 (1)
calibrate rover2 camera2 objective13 waypoint6 (1)
take_image rover2 waypoint6 objective13 camera6 colour (1)
take_image rover1 waypoint1 objective11 camera0 colour (1)
navigate rover3 waypoint3 waypoint1 (1)
navigate rover1 waypoint1 waypoint9 (1)
calibrate rover2 camera6 objective4 waypoint6 (1)
navigate rover3 waypoint1 waypoint0 (1)
sample_soil rover1 rover1store waypoint9 (1)
navigate rover1 waypoint9 waypoint1 (1)
communicate_soil_data rover1 general waypoint9 waypoint1 waypoint3 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint1 waypoint6 (1)
take_image rover2 waypoint6 objective10 camera2 high_res (1)
navigate rover0 waypoint6 waypoint7 (1)
navigate rover3 waypoint0 waypoint5 (1)
navigate rover3 waypoint5 waypoint11 (1)
take_image rover2 waypoint6 objective13 camera6 colour (1)
navigate rover2 waypoint6 waypoint12 (1)
navigate rover2 waypoint12 waypoint10 (1)
navigate rover2 waypoint10 waypoint0 (1)
sample_rock rover2 rover2store waypoint0 (1)
navigate rover2 waypoint0 waypoint1 (1)
communicate_rock_data rover2 general waypoint0 waypoint1 waypoint3 (1)
navigate rover3 waypoint11 waypoint5 (1)
navigate rover3 waypoint5 waypoint0 (1)
calibrate rover1 camera1 objective13 waypoint6 (1)
navigate rover3 waypoint0 waypoint9 (1)
navigate rover0 waypoint7 waypoint11 (1)
navigate rover0 waypoint11 waypoint2 (1)
navigate rover0 waypoint2 waypoint12 (1)
sample_soil rover0 rover0store waypoint12 (1)
navigate rover0 waypoint12 waypoint2 (1)
navigate rover0 waypoint2 waypoint1 (1)
communicate_soil_data rover0 general waypoint12 waypoint1 waypoint3 (1)
navigate rover3 waypoint9 waypoint0 (1)
navigate rover0 waypoint1 waypoint2 (1)
navigate rover2 waypoint1 waypoint0 (1)
navigate rover3 waypoint0 waypoint5 (1)
take_image rover1 waypoint6 objective10 camera1 colour (1)
calibrate rover0 camera4 objective3 waypoint2 (1)
navigate rover0 waypoint2 waypoint11 (1)
navigate rover0 waypoint11 waypoint5 (1)
take_image rover0 waypoint5 objective6 camera4 high_res (1)
navigate rover2 waypoint0 waypoint1 (1)
drop rover2 rover2store (1)
calibrate rover1 camera1 objective13 waypoint6 (1)
navigate rover3 waypoint5 waypoint4 (1)
navigate rover1 waypoint6 waypoint10 (1)
navigate rover0 waypoint5 waypoint0 (1)
navigate rover1 waypoint10 waypoint8 (1)
navigate rover2 waypoint1 waypoint3 (1)
take_image rover1 waypoint8 objective14 camera1 colour (1)
calibrate rover1 camera1 objective13 waypoint8 (1)
sample_soil rover1 rover1store waypoint8 (1)
drop rover1 rover1store (1)
navigate rover3 waypoint4 waypoint5 (1)
calibrate rover2 camera6 objective4 waypoint3 (1)
navigate rover3 waypoint5 waypoint0 (1)
navigate rover3 waypoint0 waypoint1 (1)
sample_rock rover1 rover1store waypoint8 (1)
drop rover1 rover1store (1)
navigate rover0 waypoint0 waypoint5 (1)
navigate rover1 waypoint8 waypoint10 (1)
navigate rover2 waypoint3 waypoint1 (1)
navigate rover3 waypoint1 waypoint3 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint5 waypoint11 (1)
sample_rock rover1 rover1store waypoint10 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint10 waypoint11 (1)
sample_rock rover1 rover1store waypoint11 (1)
navigate rover1 waypoint11 waypoint10 (1)
navigate rover1 waypoint10 waypoint6 (1)
navigate rover1 waypoint6 waypoint1 (1)
communicate_rock_data rover1 general waypoint10 waypoint1 waypoint3 (1)
communicate_rock_data rover1 general waypoint11 waypoint1 waypoint3 (1)
communicate_soil_data rover1 general waypoint8 waypoint1 waypoint3 (1)
communicate_rock_data rover1 general waypoint8 waypoint1 waypoint3 (1)
[t=0.475566s, 14304 KB] Plan length: 206 step(s).
[t=0.475566s, 14304 KB] Plan cost: 206
[t=0.475566s, 14304 KB] Timestamp: 1685502114439 millisecond(s).
[t=0.475566s, 14304 KB] Expanded 3158 state(s).
[t=0.475566s, 14304 KB] Reopened 0 state(s).
[t=0.475566s, 14304 KB] Evaluated 32029 state(s).
[t=0.475566s, 14304 KB] Evaluations: 32029
[t=0.475566s, 14304 KB] Generated 127411 state(s).
[t=0.475566s, 14304 KB] Dead ends: 0 state(s).
[t=0.475566s, 14304 KB] Number of registered states: 32029
[t=0.475566s, 14304 KB] Int hash set load factor: 32029/65536 = 0.488724
[t=0.475566s, 14304 KB] Int hash set resizes: 16
[t=0.475566s, 14304 KB] Search time: 0.464106s
[t=0.475566s, 14304 KB] Total time: 0.475566s
Solution found.
Peak memory: 14304 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 206 

Successful plans:
Value: 206
 sas_plan 206 

validate exit code: 0

INFO     Planner time: 0.78s
