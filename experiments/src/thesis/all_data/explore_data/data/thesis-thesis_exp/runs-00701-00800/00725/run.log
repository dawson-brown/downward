INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 90 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
981 relevant atoms
2429 auxiliary atoms
3410 final queue length
4092 total queue pushes
Completing instantiation... [0.020s CPU, 0.011s wall-clock]
Instantiating: [0.050s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
42 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.011s wall-clock]
312 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
23 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
44 of 44 variables necessary.
0 of 10 mutex groups necessary.
590 of 590 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 44
Translator derived variables: 0
Translator facts: 99
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 590
Translator axioms: 0
Translator task size: 2638
Translator peak memory: 34292 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.070s CPU, 0.068s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), softmin_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.00307821s, 11324 KB] done reading input!
[t=0.00491845s, 11744 KB] Simplifying 909 unary operators... done! [773 unary operators]
[t=0.00700901s, 11744 KB] time to simplify: 0.00209057s
[t=0.00708885s, 11744 KB] Initializing additive heuristic...
[t=0.00713766s, 11744 KB] Initializing FF heuristic...
[t=0.00716247s, 11744 KB] Building successor generator...done!
[t=0.00746617s, 11744 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0075149s, 11744 KB] time for successor generation creation: 0s
[t=0.00753941s, 11744 KB] Variables: 44
[t=0.00756743s, 11744 KB] FactPairs: 99
[t=0.00758946s, 11744 KB] Bytes per state: 8
[t=0.00761248s, 11744 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00767386s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.00772208s, 11744 KB] g=0, 1 evaluated, 0 expanded
[t=0.00775329s, 11744 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.00779514s, 11744 KB] pruning method: none
[t=0.00781855s, 11744 KB] Start Timestep: 1685486994083 millisecond(s).
[t=0.00786136s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.00831058s, 11744 KB] g=2, 51 evaluated, 3 expanded
[t=0.00833487s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.00910163s, 11744 KB] g=4, 141 evaluated, 8 expanded
[t=0.00912641s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.00959146s, 11744 KB] g=5, 197 evaluated, 10 expanded
[t=0.0096154s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.0102414s, 11744 KB] g=7, 272 evaluated, 13 expanded
[t=0.0102641s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.0106992s, 11744 KB] g=8, 324 evaluated, 15 expanded
[t=0.0107236s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.0109546s, 11744 KB] g=9, 351 evaluated, 16 expanded
[t=0.0109773s, 11744 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.0113944s, 11744 KB] g=10, 403 evaluated, 18 expanded
[t=0.0625857s, 12016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.0633984s, 12016 KB] g=25, 7098 evaluated, 461 expanded
[t=0.0634309s, 12016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.0637235s, 12016 KB] g=26, 7131 evaluated, 462 expanded
[t=0.0637482s, 12016 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.0641609s, 12016 KB] g=27, 7180 evaluated, 464 expanded
[t=0.130421s, 12544 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.133057s, 12544 KB] g=31, 15851 evaluated, 1044 expanded
[t=0.133091s, 12544 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.13315s, 12544 KB] g=32, 15854 evaluated, 1045 expanded
[t=0.133174s, 12544 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.133325s, 12544 KB] g=33, 15869 evaluated, 1046 expanded
[t=0.133349s, 12544 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.133671s, 12544 KB] g=34, 15907 evaluated, 1047 expanded
[t=0.210241s, 12816 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.212617s, 12816 KB] g=37, 26319 evaluated, 1716 expanded
[t=0.212648s, 12816 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.212731s, 12816 KB] g=38, 26325 evaluated, 1717 expanded
[t=0.214155s, 12816 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.21666s, 12816 KB] g=41, 26849 evaluated, 1748 expanded
[t=0.216687s, 12816 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.216763s, 12816 KB] g=42, 26854 evaluated, 1749 expanded
[t=0.216788s, 12816 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.216869s, 12816 KB] g=43, 26860 evaluated, 1750 expanded
[t=0.22605s, 12948 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.227181s, 12948 KB] g=46, 28257 evaluated, 1839 expanded
[t=0.227211s, 12948 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.227356s, 12948 KB] g=47, 28273 evaluated, 1840 expanded
[t=0.227379s, 12948 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.227513s, 12948 KB] g=48, 28287 evaluated, 1841 expanded
[t=0.241953s, 13464 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.244744s, 13464 KB] g=51, 30417 evaluated, 1974 expanded
[t=0.244777s, 13464 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.244861s, 13464 KB] g=52, 30423 evaluated, 1976 expanded
[t=0.244887s, 13464 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.245116s, 13464 KB] g=53, 30451 evaluated, 1978 expanded
[t=0.289724s, 13468 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.290097s, 13468 KB] g=68, 36676 evaluated, 2409 expanded
[t=0.290127s, 13468 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.290255s, 13468 KB] g=69, 36689 evaluated, 2410 expanded
[t=0.29028s, 13468 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.290543s, 13468 KB] g=70, 36724 evaluated, 2412 expanded
[t=0.290568s, 13468 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.290693s, 13468 KB] g=71, 36738 evaluated, 2413 expanded
[t=0.290716s, 13468 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.290854s, 13468 KB] g=72, 36756 evaluated, 2414 expanded
[t=0.290878s, 13468 KB] Solution found!
[t=0.29108s, 13468 KB] Actual search time: 0.283219s
calibrate rover0 camera16 objective0 waypoint1 (1)
navigate rover0 waypoint1 waypoint10 (1)
calibrate rover0 camera0 objective0 waypoint10 (1)
take_image rover0 waypoint10 objective0 camera16 colour (1)
communicate_image_data rover0 general objective0 colour waypoint10 waypoint12 (1)
calibrate rover0 camera1 objective0 waypoint10 (1)
take_image rover0 waypoint10 objective0 camera1 high_res (1)
take_image rover0 waypoint10 objective0 camera0 low_res (1)
communicate_image_data rover0 general objective0 low_res waypoint10 waypoint12 (1)
communicate_image_data rover0 general objective0 high_res waypoint10 waypoint12 (1)
calibrate rover0 camera0 objective0 waypoint10 (1)
calibrate rover0 camera10 objective0 waypoint10 (1)
calibrate rover0 camera7 objective0 waypoint10 (1)
calibrate rover0 camera14 objective0 waypoint10 (1)
calibrate rover0 camera13 objective0 waypoint10 (1)
calibrate rover0 camera5 objective0 waypoint10 (1)
take_image rover0 waypoint10 objective0 camera7 colour (1)
calibrate rover0 camera8 objective0 waypoint10 (1)
calibrate rover0 camera17 objective0 waypoint10 (1)
take_image rover0 waypoint10 objective0 camera5 high_res (1)
calibrate rover0 camera21 objective0 waypoint10 (1)
calibrate rover0 camera1 objective0 waypoint10 (1)
navigate rover0 waypoint10 waypoint2 (1)
sample_rock rover0 rover0store waypoint2 (1)
navigate rover0 waypoint2 waypoint10 (1)
communicate_rock_data rover0 general waypoint2 waypoint10 waypoint12 (1)
drop rover0 rover0store (1)
calibrate rover0 camera15 objective0 waypoint10 (1)
navigate rover0 waypoint10 waypoint5 (1)
sample_rock rover0 rover0store waypoint5 (1)
communicate_rock_data rover0 general waypoint5 waypoint5 waypoint12 (1)
navigate rover0 waypoint5 waypoint10 (1)
navigate rover0 waypoint10 waypoint1 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint1 waypoint0 (1)
sample_rock rover0 rover0store waypoint0 (1)
communicate_rock_data rover0 general waypoint0 waypoint0 waypoint12 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint0 waypoint9 (1)
sample_rock rover0 rover0store waypoint9 (1)
navigate rover0 waypoint9 waypoint0 (1)
communicate_rock_data rover0 general waypoint9 waypoint0 waypoint12 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint0 waypoint4 (1)
sample_rock rover0 rover0store waypoint4 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint4 waypoint0 (1)
communicate_rock_data rover0 general waypoint4 waypoint0 waypoint12 (1)
navigate rover0 waypoint0 waypoint12 (1)
sample_rock rover0 rover0store waypoint12 (1)
navigate rover0 waypoint12 waypoint0 (1)
communicate_rock_data rover0 general waypoint12 waypoint0 waypoint12 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint0 waypoint1 (1)
calibrate rover0 camera5 objective0 waypoint1 (1)
calibrate rover0 camera7 objective0 waypoint1 (1)
take_image rover0 waypoint1 objective0 camera14 high_res (1)
take_image rover0 waypoint1 objective0 camera8 colour (1)
take_image rover0 waypoint1 objective0 camera1 colour (1)
calibrate rover0 camera16 objective0 waypoint1 (1)
calibrate rover0 camera9 objective0 waypoint1 (1)
navigate rover0 waypoint1 waypoint6 (1)
navigate rover0 waypoint6 waypoint8 (1)
sample_rock rover0 rover0store waypoint8 (1)
navigate rover0 waypoint8 waypoint6 (1)
navigate rover0 waypoint6 waypoint1 (1)
navigate rover0 waypoint1 waypoint0 (1)
communicate_rock_data rover0 general waypoint8 waypoint0 waypoint12 (1)
[t=0.291115s, 13468 KB] Plan length: 68 step(s).
[t=0.291115s, 13468 KB] Plan cost: 68
[t=0.291115s, 13468 KB] Timestamp: 1685486994368 millisecond(s).
[t=0.291115s, 13468 KB] Expanded 2416 state(s).
[t=0.291115s, 13468 KB] Reopened 0 state(s).
[t=0.291115s, 13468 KB] Evaluated 36784 state(s).
[t=0.291115s, 13468 KB] Evaluations: 36784
[t=0.291115s, 13468 KB] Generated 92812 state(s).
[t=0.291115s, 13468 KB] Dead ends: 0 state(s).
[t=0.291115s, 13468 KB] Number of registered states: 36784
[t=0.291115s, 13468 KB] Int hash set load factor: 36784/65536 = 0.561279
[t=0.291115s, 13468 KB] Int hash set resizes: 16
[t=0.291115s, 13468 KB] Search time: 0.283503s
[t=0.291115s, 13468 KB] Total time: 0.291115s
Solution found.
Peak memory: 13468 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 68 

Successful plans:
Value: 68
 sas_plan 68 

validate exit code: 0

INFO     Planner time: 0.45s
