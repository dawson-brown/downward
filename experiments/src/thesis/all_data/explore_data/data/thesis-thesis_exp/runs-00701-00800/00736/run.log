INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 90 rules.
Computing model... [0.090s CPU, 0.084s wall-clock]
1705 relevant atoms
14811 auxiliary atoms
16516 final queue length
18093 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.120s CPU, 0.118s wall-clock]
Computing fact groups...
Finding invariants...
35 initial candidates
Finding invariants: [0.010s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
51 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.019s wall-clock]
160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
83 of 83 variables necessary.
0 of 36 mutex groups necessary.
895 of 895 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 83
Translator derived variables: 0
Translator facts: 261
Translator goal facts: 33
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 895
Translator axioms: 0
Translator task size: 3922
Translator peak memory: 38020 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.180s CPU, 0.171s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 899s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), softmin_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00210354s, 11200 KB] reading input...
[t=0.00523625s, 11460 KB] done reading input!
[t=0.0062654s, 11868 KB] Simplifying 1099 unary operators... done! [1051 unary operators]
[t=0.00747273s, 11868 KB] time to simplify: 0.00120733s
[t=0.00754994s, 11868 KB] Initializing additive heuristic...
[t=0.00762762s, 11868 KB] Initializing FF heuristic...
[t=0.00769685s, 11868 KB] Building successor generator...done!
[t=0.00805436s, 11868 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00810184s, 11868 KB] time for successor generation creation: 0s
[t=0.00812697s, 11868 KB] Variables: 83
[t=0.00815613s, 11868 KB] FactPairs: 261
[t=0.00817976s, 11868 KB] Bytes per state: 16
[t=0.0082288s, 11868 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00826663s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 104
[t=0.00832925s, 11868 KB] g=0, 1 evaluated, 0 expanded
[t=0.00835264s, 11868 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 104
[t=0.00839066s, 11868 KB] pruning method: none
[t=0.0084138s, 11868 KB] Start Timestep: 1685446628803 millisecond(s).
[t=0.00845516s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 103
[t=0.00869693s, 11868 KB] g=1, 11 evaluated, 1 expanded
[t=0.00872512s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 102
[t=0.00910953s, 11868 KB] g=2, 30 evaluated, 2 expanded
[t=0.00917541s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 101
[t=0.00953308s, 11868 KB] g=3, 50 evaluated, 3 expanded
[t=0.0095574s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 100
[t=0.00997201s, 11868 KB] g=4, 71 evaluated, 4 expanded
[t=0.0101841s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 99
[t=0.0105118s, 11868 KB] g=5, 99 evaluated, 5 expanded
[t=0.0105363s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 98
[t=0.0111318s, 11868 KB] g=6, 131 evaluated, 7 expanded
[t=0.0113911s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 97
[t=0.0115576s, 11868 KB] g=7, 152 evaluated, 8 expanded
[t=0.0115827s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 96
[t=0.0118906s, 11868 KB] g=8, 168 evaluated, 9 expanded
[t=0.0119152s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 95
[t=0.0121483s, 11868 KB] g=9, 180 evaluated, 10 expanded
[t=0.0121776s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 94
[t=0.0126652s, 11868 KB] g=11, 207 evaluated, 13 expanded
[t=0.0126883s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 93
[t=0.0131488s, 11868 KB] g=12, 230 evaluated, 14 expanded
[t=0.0142316s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 92
[t=0.0148915s, 11868 KB] g=14, 324 evaluated, 21 expanded
[t=0.0162705s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 91
[t=0.0171132s, 11868 KB] g=16, 448 evaluated, 34 expanded
[t=0.0172956s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 90
[t=0.0175173s, 11868 KB] g=17, 468 evaluated, 36 expanded
[t=0.0193753s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 89
[t=0.0197571s, 11868 KB] g=21, 588 evaluated, 46 expanded
[t=0.0197859s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 88
[t=0.0201255s, 11868 KB] g=22, 605 evaluated, 47 expanded
[t=0.0277348s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 87
[t=0.0278108s, 11868 KB] g=25, 1025 evaluated, 81 expanded
[t=0.0287529s, 11868 KB] New best heuristic value for ff(transform=adapt_costs(one)): 86
[t=0.0291391s, 11868 KB] g=27, 1098 evaluated, 87 expanded
[t=0.0539426s, 12000 KB] New best heuristic value for ff(transform=adapt_costs(one)): 85
[t=0.0540979s, 12000 KB] g=30, 2559 evaluated, 224 expanded
[t=0.0549601s, 12000 KB] New best heuristic value for ff(transform=adapt_costs(one)): 84
[t=0.0558345s, 12000 KB] g=33, 2660 evaluated, 232 expanded
[t=0.0885608s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 83
[t=0.0887482s, 12136 KB] g=45, 4590 evaluated, 404 expanded
[t=0.0937773s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 82
[t=0.0942749s, 12136 KB] g=47, 4925 evaluated, 422 expanded
[t=0.0943261s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 81
[t=0.0947082s, 12136 KB] g=48, 4948 evaluated, 423 expanded
[t=0.096879s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 80
[t=0.097081s, 12136 KB] g=49, 5093 evaluated, 430 expanded
[t=0.097113s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 79
[t=0.0974397s, 12136 KB] g=50, 5111 evaluated, 431 expanded
[t=0.0974642s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 78
[t=0.0978147s, 12136 KB] g=51, 5130 evaluated, 432 expanded
[t=0.115656s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.116553s, 12136 KB] g=59, 6294 evaluated, 523 expanded
[t=0.116672s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 76
[t=0.116957s, 12136 KB] g=60, 6315 evaluated, 524 expanded
[t=0.116982s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 75
[t=0.11764s, 12136 KB] g=61, 6355 evaluated, 526 expanded
[t=0.123981s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 74
[t=0.124439s, 12136 KB] g=64, 6787 evaluated, 563 expanded
[t=0.124469s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 73
[t=0.124733s, 12136 KB] g=65, 6802 evaluated, 564 expanded
[t=0.124978s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 72
[t=0.125295s, 12136 KB] g=66, 6834 evaluated, 565 expanded
[t=0.12532s, 12136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 71
[t=0.125745s, 12136 KB] g=67, 6860 evaluated, 566 expanded
[t=0.166983s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 70
[t=0.168082s, 12396 KB] g=81, 9459 evaluated, 758 expanded
[t=0.168112s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 69
[t=0.168368s, 12396 KB] g=82, 9474 evaluated, 759 expanded
[t=0.169359s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 68
[t=0.17005s, 12396 KB] g=84, 9580 evaluated, 768 expanded
[t=0.178435s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 67
[t=0.179029s, 12396 KB] g=87, 10147 evaluated, 822 expanded
[t=0.179056s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 66
[t=0.179244s, 12396 KB] g=88, 10157 evaluated, 823 expanded
[t=0.179437s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 65
[t=0.17962s, 12396 KB] g=89, 10178 evaluated, 825 expanded
[t=0.179644s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.180323s, 12396 KB] g=91, 10221 evaluated, 829 expanded
[t=0.186748s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=0.187708s, 12396 KB] g=96, 10690 evaluated, 875 expanded
[t=0.187771s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.187992s, 12396 KB] g=97, 10704 evaluated, 876 expanded
[t=0.188016s, 12396 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.188545s, 12396 KB] g=100, 10737 evaluated, 880 expanded
[t=0.203499s, 12528 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.203893s, 12528 KB] g=104, 11753 evaluated, 984 expanded
[t=0.203921s, 12528 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.204326s, 12528 KB] g=105, 11777 evaluated, 986 expanded
[t=0.204496s, 12528 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.204566s, 12528 KB] g=106, 11789 evaluated, 987 expanded
[t=0.220244s, 12528 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.220784s, 12528 KB] g=117, 12899 evaluated, 1102 expanded
[t=0.220812s, 12660 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.221105s, 12660 KB] g=118, 12916 evaluated, 1103 expanded
[t=0.222295s, 12660 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.223295s, 12660 KB] g=120, 13066 evaluated, 1115 expanded
[t=0.246452s, 12660 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.247137s, 12660 KB] g=126, 14700 evaluated, 1290 expanded
[t=0.247165s, 12660 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.247421s, 12660 KB] g=127, 14716 evaluated, 1291 expanded
[t=0.24847s, 12660 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=0.249181s, 12660 KB] g=129, 14839 evaluated, 1302 expanded
[t=0.261063s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.261591s, 12912 KB] g=140, 15635 evaluated, 1378 expanded
[t=0.261619s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.261944s, 12912 KB] g=141, 15657 evaluated, 1379 expanded
[t=0.263107s, 12912 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.263456s, 12912 KB] g=143, 15766 evaluated, 1387 expanded
[t=0.292519s, 13044 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.293193s, 13044 KB] g=158, 17877 evaluated, 1624 expanded
[t=0.293222s, 13044 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=0.293517s, 13044 KB] g=159, 17894 evaluated, 1625 expanded
[t=0.293542s, 13044 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.294427s, 13044 KB] g=161, 17956 evaluated, 1629 expanded
[t=0.303993s, 13044 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=0.304298s, 13044 KB] g=169, 18645 evaluated, 1698 expanded
[t=0.304326s, 13044 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.304485s, 13044 KB] g=170, 18654 evaluated, 1699 expanded
[t=0.30451s, 13044 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.304917s, 13044 KB] g=171, 18680 evaluated, 1701 expanded
[t=0.304967s, 13044 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.305196s, 13044 KB] g=172, 18696 evaluated, 1702 expanded
[t=0.318608s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.319566s, 13176 KB] g=182, 19731 evaluated, 1812 expanded
[t=0.319663s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=0.319826s, 13176 KB] g=183, 19744 evaluated, 1813 expanded
[t=0.319851s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=0.32009s, 13176 KB] g=184, 19760 evaluated, 1814 expanded
[t=0.320114s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=0.320397s, 13176 KB] g=185, 19779 evaluated, 1815 expanded
[t=0.334277s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=0.334736s, 13176 KB] g=193, 20823 evaluated, 1913 expanded
[t=0.334765s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=0.334927s, 13176 KB] g=194, 20833 evaluated, 1914 expanded
[t=0.334951s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=0.335174s, 13176 KB] g=195, 20848 evaluated, 1915 expanded
[t=0.335425s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=0.33547s, 13176 KB] g=196, 20865 evaluated, 1916 expanded
[t=0.335494s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=0.335873s, 13176 KB] g=197, 20891 evaluated, 1918 expanded
[t=0.339365s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=0.340307s, 13176 KB] g=202, 21213 evaluated, 1954 expanded
[t=0.34039s, 13176 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=0.340714s, 13176 KB] g=203, 21238 evaluated, 1956 expanded
[t=0.34878s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=0.349241s, 13308 KB] g=209, 21860 evaluated, 2056 expanded
[t=0.354009s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=0.354431s, 13308 KB] g=217, 22235 evaluated, 2102 expanded
[t=0.354458s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=0.354645s, 13308 KB] g=218, 22247 evaluated, 2103 expanded
[t=0.35467s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=0.354844s, 13308 KB] g=219, 22258 evaluated, 2104 expanded
[t=0.356046s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=0.356931s, 13308 KB] g=222, 22416 evaluated, 2123 expanded
[t=0.357073s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=0.357204s, 13308 KB] g=223, 22432 evaluated, 2125 expanded
[t=0.357229s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.357404s, 13308 KB] g=224, 22444 evaluated, 2126 expanded
[t=0.357427s, 13308 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.357608s, 13308 KB] g=225, 22456 evaluated, 2127 expanded
[t=0.376944s, 13440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.377088s, 13440 KB] g=240, 24001 evaluated, 2299 expanded
[t=0.377117s, 13440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.377277s, 13440 KB] g=241, 24011 evaluated, 2300 expanded
[t=0.377301s, 13440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.377468s, 13440 KB] g=242, 24022 evaluated, 2301 expanded
[t=0.377491s, 13440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.37769s, 13440 KB] g=243, 24036 evaluated, 2302 expanded
[t=0.377713s, 13440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.377907s, 13440 KB] g=244, 24049 evaluated, 2303 expanded
[t=0.37793s, 13440 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.378113s, 13440 KB] g=245, 24062 evaluated, 2304 expanded
[t=0.452394s, 14092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.452872s, 14092 KB] g=251, 30060 evaluated, 3011 expanded
[t=0.452901s, 14092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.453207s, 14092 KB] g=252, 30083 evaluated, 3013 expanded
[t=0.453369s, 14092 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=0.45354s, 14092 KB] g=253, 30107 evaluated, 3014 expanded
[t=0.567924s, 14364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.568756s, 14364 KB] g=258, 39589 evaluated, 3956 expanded
[t=0.568914s, 14364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.569024s, 14364 KB] g=259, 39605 evaluated, 3957 expanded
[t=0.569254s, 14364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.569339s, 14364 KB] g=260, 39626 evaluated, 3958 expanded
[t=0.569363s, 14364 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.569696s, 14364 KB] g=261, 39652 evaluated, 3959 expanded
[t=0.609851s, 14636 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.610562s, 14636 KB] g=275, 43150 evaluated, 4233 expanded
[t=0.617159s, 14636 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.617507s, 14636 KB] g=278, 43740 evaluated, 4312 expanded
[t=0.617536s, 14636 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.617658s, 14636 KB] g=279, 43748 evaluated, 4313 expanded
[t=0.617682s, 14636 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.617889s, 14636 KB] g=280, 43764 evaluated, 4314 expanded
[t=0.619191s, 14636 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.620089s, 14636 KB] g=282, 43961 evaluated, 4328 expanded
[t=0.620219s, 14636 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.620334s, 14636 KB] g=283, 43978 evaluated, 4329 expanded
[t=0.634876s, 14768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.63521s, 14768 KB] g=292, 45360 evaluated, 4437 expanded
[t=0.635238s, 14768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.63539s, 14768 KB] g=293, 45373 evaluated, 4438 expanded
[t=0.635414s, 14768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.635571s, 14768 KB] g=294, 45389 evaluated, 4439 expanded
[t=0.635596s, 14768 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=0.635831s, 14768 KB] g=295, 45416 evaluated, 4440 expanded
[t=0.63586s, 14768 KB] Solution found!
[t=0.635896s, 14768 KB] Actual search time: 0.627441s
sample_soil rover0 rover0store waypoint2 (1)
calibrate rover0 camera4 objective0 waypoint2 (1)
take_image rover0 waypoint2 objective0 camera4 high_res (1)
calibrate rover0 camera6 objective0 waypoint2 (1)
take_image rover0 waypoint2 objective0 camera6 low_res (1)
communicate_soil_data rover0 general waypoint2 waypoint2 waypoint27 (1)
navigate rover0 waypoint2 waypoint20 (1)
communicate_image_data rover0 general objective0 low_res waypoint20 waypoint27 (1)
communicate_image_data rover0 general objective0 high_res waypoint20 waypoint27 (1)
navigate rover2 waypoint5 waypoint10 (1)
calibrate rover2 camera0 objective0 waypoint10 (1)
take_image rover2 waypoint10 objective0 camera0 colour (1)
navigate rover2 waypoint10 waypoint19 (1)
communicate_image_data rover2 general objective0 colour waypoint19 waypoint27 (1)
sample_rock rover1 rover1store waypoint4 (1)
communicate_rock_data rover1 general waypoint4 waypoint4 waypoint27 (1)
drop rover1 rover1store (1)
calibrate rover2 camera0 objective0 waypoint19 (1)
navigate rover1 waypoint4 waypoint2 (1)
sample_rock rover1 rover1store waypoint2 (1)
communicate_rock_data rover1 general waypoint2 waypoint2 waypoint27 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint2 waypoint10 (1)
sample_rock rover1 rover1store waypoint10 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint10 waypoint2 (1)
communicate_rock_data rover1 general waypoint10 waypoint2 waypoint27 (1)
navigate rover1 waypoint2 waypoint8 (1)
sample_rock rover1 rover1store waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
communicate_rock_data rover1 general waypoint8 waypoint2 waypoint27 (1)
calibrate rover2 camera3 objective0 waypoint19 (1)
calibrate rover1 camera2 objective0 waypoint2 (1)
calibrate rover1 camera5 objective0 waypoint2 (1)
navigate rover1 waypoint2 waypoint15 (1)
navigate rover2 waypoint19 waypoint10 (1)
take_image rover2 waypoint10 objective0 camera3 high_res (1)
drop rover0 rover0store (1)
take_image rover1 waypoint15 objective0 camera5 high_res (1)
navigate rover0 waypoint20 waypoint2 (1)
navigate rover0 waypoint2 waypoint8 (1)
sample_soil rover0 rover0store waypoint8 (1)
navigate rover0 waypoint8 waypoint2 (1)
communicate_soil_data rover0 general waypoint8 waypoint2 waypoint27 (1)
navigate rover0 waypoint2 waypoint4 (1)
drop rover0 rover0store (1)
sample_soil rover0 rover0store waypoint4 (1)
communicate_soil_data rover0 general waypoint4 waypoint4 waypoint27 (1)
calibrate rover1 camera1 objective0 waypoint15 (1)
calibrate rover1 camera5 objective0 waypoint15 (1)
navigate rover0 waypoint4 waypoint26 (1)
navigate rover0 waypoint26 waypoint9 (1)
calibrate rover0 camera6 objective0 waypoint9 (1)
drop rover0 rover0store (1)
sample_soil rover0 rover0store waypoint9 (1)
navigate rover0 waypoint9 waypoint26 (1)
navigate rover0 waypoint26 waypoint4 (1)
communicate_soil_data rover0 general waypoint9 waypoint4 waypoint27 (1)
navigate rover1 waypoint15 waypoint3 (1)
sample_rock rover1 rover1store waypoint3 (1)
navigate rover1 waypoint3 waypoint15 (1)
navigate rover1 waypoint15 waypoint2 (1)
drop rover1 rover1store (1)
communicate_rock_data rover1 general waypoint3 waypoint2 waypoint27 (1)
drop rover0 rover0store (1)
take_image rover1 waypoint2 objective0 camera2 colour (1)
take_image rover2 waypoint10 objective0 camera0 colour (1)
navigate rover0 waypoint4 waypoint26 (1)
navigate rover2 waypoint10 waypoint5 (1)
navigate rover0 waypoint26 waypoint9 (1)
take_image rover1 waypoint2 objective0 camera1 colour (1)
navigate rover1 waypoint2 waypoint4 (1)
take_image rover0 waypoint9 objective0 camera6 low_res (1)
navigate rover0 waypoint9 waypoint26 (1)
navigate rover1 waypoint4 waypoint26 (1)
navigate rover1 waypoint26 waypoint19 (1)
sample_rock rover1 rover1store waypoint19 (1)
communicate_rock_data rover1 general waypoint19 waypoint19 waypoint27 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint19 waypoint26 (1)
navigate rover1 waypoint26 waypoint5 (1)
navigate rover1 waypoint5 waypoint28 (1)
sample_rock rover1 rover1store waypoint28 (1)
navigate rover1 waypoint28 waypoint5 (1)
communicate_rock_data rover1 general waypoint28 waypoint5 waypoint27 (1)
drop rover1 rover1store (1)
navigate rover2 waypoint5 waypoint10 (1)
calibrate rover2 camera0 objective0 waypoint10 (1)
navigate rover1 waypoint5 waypoint26 (1)
navigate rover1 waypoint26 waypoint4 (1)
navigate rover2 waypoint10 waypoint19 (1)
sample_soil rover2 rover2store waypoint19 (1)
communicate_soil_data rover2 general waypoint19 waypoint19 waypoint27 (1)
drop rover2 rover2store (1)
calibrate rover2 camera3 objective0 waypoint19 (1)
navigate rover2 waypoint19 waypoint10 (1)
navigate rover2 waypoint10 waypoint5 (1)
navigate rover0 waypoint26 waypoint9 (1)
navigate rover2 waypoint5 waypoint22 (1)
sample_soil rover2 rover2store waypoint22 (1)
navigate rover2 waypoint22 waypoint5 (1)
drop rover2 rover2store (1)
communicate_soil_data rover2 general waypoint22 waypoint5 waypoint27 (1)
calibrate rover0 camera6 objective0 waypoint9 (1)
navigate rover1 waypoint4 waypoint2 (1)
calibrate rover1 camera1 objective0 waypoint2 (1)
navigate rover1 waypoint2 waypoint8 (1)
navigate rover1 waypoint8 waypoint11 (1)
calibrate rover0 camera4 objective0 waypoint9 (1)
take_image rover1 waypoint11 objective0 camera5 colour (1)
navigate rover0 waypoint9 waypoint26 (1)
take_image rover1 waypoint11 objective0 camera1 colour (1)
sample_rock rover1 rover1store waypoint11 (1)
navigate rover1 waypoint11 waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
communicate_rock_data rover1 general waypoint11 waypoint2 waypoint27 (1)
calibrate rover1 camera1 objective0 waypoint2 (1)
navigate rover0 waypoint26 waypoint9 (1)
navigate rover1 waypoint2 waypoint8 (1)
navigate rover1 waypoint8 waypoint24 (1)
sample_rock rover1 rover1store waypoint24 (1)
navigate rover1 waypoint24 waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
communicate_rock_data rover1 general waypoint24 waypoint2 waypoint27 (1)
calibrate rover1 camera5 objective0 waypoint2 (1)
take_image rover1 waypoint2 objective0 camera1 colour (1)
take_image rover0 waypoint9 objective0 camera6 low_res (1)
navigate rover0 waypoint9 waypoint26 (1)
navigate rover1 waypoint2 waypoint8 (1)
calibrate rover1 camera2 objective0 waypoint8 (1)
calibrate rover1 camera1 objective0 waypoint8 (1)
navigate rover1 waypoint8 waypoint6 (1)
navigate rover0 waypoint26 waypoint9 (1)
sample_rock rover1 rover1store waypoint6 (1)
navigate rover1 waypoint6 waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
communicate_rock_data rover1 general waypoint6 waypoint2 waypoint27 (1)
calibrate rover0 camera6 objective0 waypoint9 (1)
navigate rover2 waypoint5 waypoint24 (1)
take_image rover0 waypoint9 objective0 camera4 high_res (1)
take_image rover1 waypoint2 objective0 camera1 colour (1)
take_image rover1 waypoint2 objective0 camera5 colour (1)
navigate rover2 waypoint24 waypoint5 (1)
navigate rover1 waypoint2 waypoint8 (1)
take_image rover1 waypoint8 objective0 camera2 colour (1)
navigate rover0 waypoint9 waypoint26 (1)
calibrate rover1 camera1 objective0 waypoint8 (1)
navigate rover1 waypoint8 waypoint18 (1)
sample_rock rover1 rover1store waypoint18 (1)
navigate rover1 waypoint18 waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
communicate_rock_data rover1 general waypoint18 waypoint2 waypoint27 (1)
calibrate rover1 camera2 objective0 waypoint2 (1)
navigate rover0 waypoint26 waypoint9 (1)
navigate rover2 waypoint5 waypoint24 (1)
calibrate rover0 camera4 objective0 waypoint9 (1)
navigate rover1 waypoint2 waypoint20 (1)
navigate rover1 waypoint20 waypoint13 (1)
sample_rock rover1 rover1store waypoint13 (1)
navigate rover1 waypoint13 waypoint20 (1)
navigate rover1 waypoint20 waypoint2 (1)
communicate_rock_data rover1 general waypoint13 waypoint2 waypoint27 (1)
drop rover1 rover1store (1)
take_image rover1 waypoint2 objective0 camera1 colour (1)
take_image rover1 waypoint2 objective0 camera2 colour (1)
take_image rover0 waypoint9 objective0 camera4 high_res (1)
navigate rover2 waypoint24 waypoint5 (1)
navigate rover1 waypoint2 waypoint8 (1)
calibrate rover1 camera1 objective0 waypoint8 (1)
navigate rover0 waypoint9 waypoint26 (1)
navigate rover1 waypoint8 waypoint23 (1)
sample_rock rover1 rover1store waypoint23 (1)
navigate rover1 waypoint23 waypoint8 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint8 waypoint2 (1)
communicate_rock_data rover1 general waypoint23 waypoint2 waypoint27 (1)
take_image rover1 waypoint2 objective0 camera1 colour (1)
calibrate rover1 camera2 objective0 waypoint2 (1)
navigate rover1 waypoint2 waypoint10 (1)
navigate rover0 waypoint26 waypoint9 (1)
calibrate rover0 camera4 objective0 waypoint9 (1)
navigate rover1 waypoint10 waypoint7 (1)
sample_rock rover1 rover1store waypoint7 (1)
navigate rover1 waypoint7 waypoint10 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint10 waypoint2 (1)
navigate rover1 waypoint2 waypoint4 (1)
communicate_rock_data rover1 general waypoint7 waypoint4 waypoint27 (1)
navigate rover2 waypoint5 waypoint10 (1)
navigate rover2 waypoint10 waypoint15 (1)
navigate rover2 waypoint15 waypoint17 (1)
sample_soil rover2 rover2store waypoint17 (1)
communicate_soil_data rover2 general waypoint17 waypoint17 waypoint27 (1)
drop rover2 rover2store (1)
take_image rover2 waypoint17 objective0 camera3 high_res (1)
take_image rover2 waypoint17 objective0 camera0 colour (1)
navigate rover0 waypoint9 waypoint26 (1)
navigate rover2 waypoint17 waypoint15 (1)
navigate rover2 waypoint15 waypoint10 (1)
navigate rover2 waypoint10 waypoint5 (1)
navigate rover0 waypoint26 waypoint9 (1)
navigate rover2 waypoint5 waypoint24 (1)
take_image rover0 waypoint9 objective0 camera4 high_res (1)
take_image rover0 waypoint9 objective0 camera6 low_res (1)
navigate rover1 waypoint4 waypoint27 (1)
calibrate rover1 camera5 objective0 waypoint27 (1)
sample_rock rover1 rover1store waypoint27 (1)
navigate rover1 waypoint27 waypoint4 (1)
communicate_rock_data rover1 general waypoint27 waypoint4 waypoint27 (1)
drop rover1 rover1store (1)
navigate rover1 waypoint4 waypoint26 (1)
navigate rover1 waypoint26 waypoint9 (1)
sample_rock rover1 rover1store waypoint9 (1)
navigate rover1 waypoint9 waypoint26 (1)
navigate rover1 waypoint26 waypoint4 (1)
communicate_rock_data rover1 general waypoint9 waypoint4 waypoint27 (1)
navigate rover2 waypoint24 waypoint5 (1)
navigate rover2 waypoint5 waypoint10 (1)
navigate rover2 waypoint10 waypoint1 (1)
sample_soil rover2 rover2store waypoint1 (1)
drop rover2 rover2store (1)
navigate rover0 waypoint9 waypoint26 (1)
navigate rover1 waypoint4 waypoint2 (1)
calibrate rover2 camera3 objective0 waypoint1 (1)
navigate rover1 waypoint2 waypoint20 (1)
navigate rover0 waypoint26 waypoint9 (1)
navigate rover2 waypoint1 waypoint14 (1)
calibrate rover0 camera6 objective0 waypoint9 (1)
take_image rover2 waypoint14 objective0 camera3 high_res (1)
sample_soil rover2 rover2store waypoint14 (1)
navigate rover2 waypoint14 waypoint1 (1)
drop rover2 rover2store (1)
navigate rover2 waypoint1 waypoint10 (1)
navigate rover2 waypoint10 waypoint5 (1)
communicate_soil_data rover2 general waypoint1 waypoint5 waypoint27 (1)
communicate_soil_data rover2 general waypoint14 waypoint5 waypoint27 (1)
navigate rover1 waypoint20 waypoint13 (1)
navigate rover0 waypoint9 waypoint26 (1)
navigate rover0 waypoint26 waypoint4 (1)
navigate rover0 waypoint4 waypoint2 (1)
navigate rover0 waypoint2 waypoint15 (1)
sample_soil rover0 rover0store waypoint15 (1)
navigate rover0 waypoint15 waypoint2 (1)
communicate_soil_data rover0 general waypoint15 waypoint2 waypoint27 (1)
navigate rover2 waypoint5 waypoint10 (1)
calibrate rover2 camera3 objective0 waypoint10 (1)
drop rover0 rover0store (1)
navigate rover2 waypoint10 waypoint18 (1)
sample_soil rover2 rover2store waypoint18 (1)
navigate rover2 waypoint18 waypoint10 (1)
navigate rover2 waypoint10 waypoint5 (1)
communicate_soil_data rover2 general waypoint18 waypoint5 waypoint27 (1)
navigate rover2 waypoint5 waypoint10 (1)
take_image rover1 waypoint13 objective0 camera2 colour (1)
take_image rover1 waypoint13 objective0 camera5 low_res (1)
calibrate rover1 camera5 objective0 waypoint13 (1)
calibrate rover1 camera1 objective0 waypoint13 (1)
navigate rover2 waypoint10 waypoint1 (1)
navigate rover2 waypoint1 waypoint8 (1)
navigate rover1 waypoint13 waypoint20 (1)
navigate rover0 waypoint2 waypoint8 (1)
drop rover1 rover1store (1)
navigate rover0 waypoint8 waypoint7 (1)
take_image rover2 waypoint8 objective0 camera3 high_res (1)
sample_soil rover0 rover0store waypoint7 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint7 waypoint13 (1)
sample_soil rover0 rover0store waypoint13 (1)
navigate rover0 waypoint13 waypoint7 (1)
navigate rover0 waypoint7 waypoint8 (1)
drop rover0 rover0store (1)
navigate rover0 waypoint8 waypoint2 (1)
communicate_soil_data rover0 general waypoint7 waypoint2 waypoint27 (1)
communicate_soil_data rover0 general waypoint13 waypoint2 waypoint27 (1)
navigate rover1 waypoint20 waypoint2 (1)
navigate rover2 waypoint8 waypoint1 (1)
take_image rover1 waypoint2 objective0 camera1 colour (1)
navigate rover1 waypoint2 waypoint10 (1)
drop rover2 rover2store (1)
calibrate rover0 camera4 objective0 waypoint2 (1)
navigate rover0 waypoint2 waypoint8 (1)
navigate rover0 waypoint8 waypoint23 (1)
sample_soil rover0 rover0store waypoint23 (1)
navigate rover0 waypoint23 waypoint8 (1)
navigate rover0 waypoint8 waypoint2 (1)
communicate_soil_data rover0 general waypoint23 waypoint2 waypoint27 (1)
[t=0.635959s, 14768 KB] Plan length: 291 step(s).
[t=0.635959s, 14768 KB] Plan cost: 291
[t=0.635959s, 14768 KB] Timestamp: 1685446629442 millisecond(s).
[t=0.635959s, 14768 KB] Expanded 4441 state(s).
[t=0.635959s, 14768 KB] Reopened 0 state(s).
[t=0.635959s, 14768 KB] Evaluated 45417 state(s).
[t=0.635959s, 14768 KB] Evaluations: 45417
[t=0.635959s, 14768 KB] Generated 125263 state(s).
[t=0.635959s, 14768 KB] Dead ends: 0 state(s).
[t=0.635959s, 14768 KB] Number of registered states: 45417
[t=0.635959s, 14768 KB] Int hash set load factor: 45417/65536 = 0.693008
[t=0.635959s, 14768 KB] Int hash set resizes: 16
[t=0.635959s, 14768 KB] Search time: 0.627731s
[t=0.635959s, 14768 KB] Total time: 0.635959s
Solution found.
Peak memory: 14768 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 291 

Successful plans:
Value: 291
 sas_plan 291 

validate exit code: 0

INFO     Planner time: 0.92s
