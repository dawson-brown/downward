INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 26 rules.
Computing model... [0.210s CPU, 0.212s wall-clock]
19982 relevant atoms
16478 auxiliary atoms
36460 final queue length
69951 total queue pushes
Completing instantiation... [0.780s CPU, 0.781s wall-clock]
Instantiating: [1.000s CPU, 1.010s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.023s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.024s wall-clock]
Translating task: [0.510s CPU, 0.511s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.400s CPU, 0.389s wall-clock]
Reordering and filtering variables...
15 of 15 variables necessary.
0 of 15 mutex groups necessary.
17860 of 17860 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.060s CPU, 0.061s wall-clock]
Translator variables: 15
Translator derived variables: 0
Translator facts: 1280
Translator goal facts: 11
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 17860
Translator axioms: 0
Translator task size: 105574
Translator peak memory: 103464 KB
Writing output... [0.070s CPU, 0.079s wall-clock]
Done! [2.110s CPU, 2.114s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 897s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.0593126s, 16960 KB] done reading input!
[t=0.0632613s, 19140 KB] Simplifying 34756 unary operators... done! [34756 unary operators]
[t=0.103133s, 22204 KB] time to simplify: 0.0398721s
[t=0.105414s, 22204 KB] Initializing additive heuristic...
[t=0.106221s, 22204 KB] Initializing FF heuristic...
[t=0.106249s, 22204 KB] Building successor generator...done!
[t=0.113487s, 22844 KB] peak memory difference for successor generator creation: 640 KB
[t=0.113595s, 22844 KB] time for successor generation creation: 0.0046501s
[t=0.11362s, 22844 KB] Variables: 15
[t=0.113648s, 22844 KB] FactPairs: 1280
[t=0.113671s, 22844 KB] Bytes per state: 16
[t=0.113694s, 22844 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.113767s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.114531s, 22844 KB] g=0, 1 evaluated, 0 expanded
[t=0.11456s, 22844 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 77
[t=0.114593s, 22844 KB] pruning method: none
[t=0.114615s, 22844 KB] Start Timestep: 1685442082073 millisecond(s).
[t=0.118836s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 74
[t=0.119409s, 22844 KB] g=2, 14 evaluated, 2 expanded
[t=0.122792s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 73
[t=0.126619s, 22844 KB] g=4, 34 evaluated, 5 expanded
[t=0.126737s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 72
[t=0.129218s, 22844 KB] g=4, 41 evaluated, 6 expanded
[t=0.130684s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 71
[t=0.132194s, 22844 KB] g=5, 49 evaluated, 7 expanded
[t=0.134634s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 70
[t=0.137926s, 22844 KB] g=7, 65 evaluated, 9 expanded
[t=0.138575s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 69
[t=0.142221s, 22844 KB] g=8, 77 evaluated, 11 expanded
[t=0.174523s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 68
[t=0.175515s, 22844 KB] g=14, 172 evaluated, 24 expanded
[t=0.178444s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 67
[t=0.181497s, 22844 KB] g=15, 189 evaluated, 26 expanded
[t=0.186367s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 66
[t=0.189246s, 22844 KB] g=17, 211 evaluated, 29 expanded
[t=0.198297s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 65
[t=0.200469s, 22844 KB] g=18, 243 evaluated, 33 expanded
[t=0.258232s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.261335s, 22844 KB] g=21, 417 evaluated, 59 expanded
[t=0.282133s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=0.282443s, 22844 KB] g=23, 477 evaluated, 66 expanded
[t=0.282472s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.284943s, 22844 KB] g=24, 484 evaluated, 67 expanded
[t=0.325984s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.329838s, 22844 KB] g=27, 614 evaluated, 83 expanded
[t=0.429916s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.430937s, 22844 KB] g=33, 905 evaluated, 125 expanded
[t=0.433844s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.435734s, 22844 KB] g=34, 918 evaluated, 127 expanded
[t=0.441776s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.444972s, 22844 KB] g=35, 944 evaluated, 131 expanded
[t=0.676421s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.679085s, 22844 KB] g=41, 1609 evaluated, 226 expanded
[t=0.679117s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.679875s, 22844 KB] g=41, 1611 evaluated, 226 expanded
[t=0.684302s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.685247s, 22844 KB] g=42, 1626 evaluated, 228 expanded
[t=0.688251s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=0.691216s, 22844 KB] g=43, 1643 evaluated, 230 expanded
[t=0.696189s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.699245s, 22844 KB] g=44, 1666 evaluated, 232 expanded
[t=0.704127s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=0.706543s, 22844 KB] g=45, 1687 evaluated, 234 expanded
[t=0.724066s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.726181s, 22844 KB] g=47, 1744 evaluated, 240 expanded
[t=0.827908s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=0.830933s, 22844 KB] g=51, 2049 evaluated, 295 expanded
[t=0.943827s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=0.946721s, 22844 KB] g=54, 2384 evaluated, 347 expanded
[t=0.947749s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=0.951011s, 22844 KB] g=55, 2396 evaluated, 349 expanded
[t=0.991677s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=0.994277s, 22844 KB] g=58, 2523 evaluated, 367 expanded
[t=0.995605s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=0.999476s, 22844 KB] g=59, 2537 evaluated, 369 expanded
[t=0.999532s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=1.0034s, 22844 KB] g=60, 2548 evaluated, 371 expanded
[t=1.24344s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=1.24527s, 22844 KB] g=66, 3257 evaluated, 486 expanded
[t=1.25137s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=1.252s, 22844 KB] g=67, 3276 evaluated, 488 expanded
[t=1.2553s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=1.25934s, 22844 KB] g=68, 3297 evaluated, 490 expanded
[t=1.2672s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=1.26766s, 22844 KB] g=69, 3321 evaluated, 492 expanded
[t=1.26769s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=1.27122s, 22844 KB] g=70, 3331 evaluated, 493 expanded
[t=2.49875s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=2.50236s, 22844 KB] g=74, 6953 evaluated, 1065 expanded
[t=3.2386s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=3.23887s, 22844 KB] g=83, 9064 evaluated, 1373 expanded
[t=3.24253s, 22844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=3.24419s, 22844 KB] g=84, 9079 evaluated, 1374 expanded
[t=8.63736s, 23680 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=8.64067s, 23680 KB] g=123, 25234 evaluated, 4266 expanded
[t=11.3919s, 24464 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=11.3944s, 24464 KB] g=92, 33562 evaluated, 5862 expanded
[t=11.8197s, 24464 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=11.823s, 24464 KB] g=94, 34833 evaluated, 6046 expanded
[t=25.964s, 26972 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=25.9651s, 26972 KB] g=148, 77122 evaluated, 14011 expanded
[t=25.972s, 26972 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=25.9725s, 26972 KB] g=149, 77143 evaluated, 14013 expanded
[t=25.9799s, 26972 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=25.9816s, 26972 KB] g=150, 77169 evaluated, 14015 expanded
[t=25.9838s, 26972 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=25.9855s, 26972 KB] g=151, 77180 evaluated, 14017 expanded
[t=26.386s, 27104 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=26.3861s, 27104 KB] g=153, 78357 evaluated, 14240 expanded
[t=26.4036s, 27104 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=26.4064s, 27104 KB] g=155, 78417 evaluated, 14251 expanded
[t=26.4955s, 27104 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=26.4975s, 27104 KB] g=158, 78693 evaluated, 14290 expanded
[t=26.5794s, 27104 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=26.5826s, 27104 KB] g=161, 78956 evaluated, 14338 expanded
[t=26.5833s, 27104 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=26.5874s, 27104 KB] g=162, 78971 evaluated, 14340 expanded
[t=26.6113s, 27104 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=26.612s, 27104 KB] g=164, 79049 evaluated, 14354 expanded
[t=26.7712s, 27104 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=26.7737s, 27104 KB] g=167, 79563 evaluated, 14439 expanded
[t=26.9311s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=26.9351s, 27240 KB] g=171, 80058 evaluated, 14510 expanded
[t=26.9351s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=26.939s, 27240 KB] g=172, 80070 evaluated, 14512 expanded
[t=26.9429s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=26.9432s, 27240 KB] g=173, 80083 evaluated, 14513 expanded
[t=26.9469s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=26.9494s, 27240 KB] g=174, 80102 evaluated, 14515 expanded
[t=26.9508s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=26.9545s, 27240 KB] g=175, 80120 evaluated, 14517 expanded
[t=26.9587s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=26.9598s, 27240 KB] g=176, 80140 evaluated, 14519 expanded
[t=26.9627s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=26.9638s, 27240 KB] g=177, 80158 evaluated, 14521 expanded
[t=26.9638s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=26.9661s, 27240 KB] g=178, 80170 evaluated, 14522 expanded
[t=26.9666s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=26.9701s, 27240 KB] g=179, 80189 evaluated, 14524 expanded
[t=26.9745s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=26.9752s, 27240 KB] g=180, 80208 evaluated, 14526 expanded
[t=26.9785s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=26.9787s, 27240 KB] g=181, 80225 evaluated, 14528 expanded
[t=27.0264s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=27.0286s, 27240 KB] g=184, 80452 evaluated, 14566 expanded
[t=27.0303s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=27.031s, 27240 KB] g=185, 80465 evaluated, 14568 expanded
[t=27.0311s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=27.033s, 27240 KB] g=186, 80475 evaluated, 14569 expanded
[t=27.0342s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=27.0356s, 27240 KB] g=187, 80486 evaluated, 14571 expanded
[t=27.0382s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=27.0385s, 27240 KB] g=188, 80499 evaluated, 14573 expanded
[t=27.0385s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=27.0392s, 27240 KB] g=189, 80506 evaluated, 14574 expanded
[t=27.0393s, 27240 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=27.0419s, 27240 KB] g=190, 80520 evaluated, 14576 expanded
[t=27.0421s, 27240 KB] Solution found!
[t=27.0442s, 27240 KB] Actual search time: 26.9295s
drive truck-2 city-2-loc-30 city-2-loc-27 (22)
drive truck-2 city-2-loc-27 city-2-loc-16 (17)
drive truck-1 city-1-loc-23 city-1-loc-25 (22)
drive truck-2 city-2-loc-16 city-2-loc-25 (27)
pick-up truck-1 city-1-loc-25 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-25 city-2-loc-21 (18)
drive truck-1 city-1-loc-25 city-1-loc-23 (22)
drive truck-2 city-2-loc-21 city-2-loc-4 (11)
drive truck-1 city-1-loc-23 city-1-loc-5 (26)
drive truck-1 city-1-loc-5 city-1-loc-27 (21)
drive truck-2 city-2-loc-4 city-3-loc-18 (125)
drive truck-1 city-1-loc-27 city-1-loc-2 (25)
drive truck-1 city-1-loc-2 city-1-loc-15 (12)
drop truck-1 city-1-loc-15 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-15 city-1-loc-9 (27)
drive truck-1 city-1-loc-9 city-1-loc-10 (20)
drive truck-1 city-1-loc-10 city-1-loc-8 (21)
pick-up truck-1 city-1-loc-8 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-8 city-1-loc-10 (21)
drive truck-1 city-1-loc-10 city-1-loc-21 (21)
drive truck-1 city-1-loc-21 city-1-loc-3 (16)
drive truck-1 city-1-loc-3 city-1-loc-13 (26)
drive truck-2 city-3-loc-18 city-3-loc-25 (23)
drive truck-2 city-3-loc-25 city-3-loc-27 (11)
pick-up truck-2 city-3-loc-27 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-27 city-3-loc-25 (11)
drive truck-2 city-3-loc-25 city-3-loc-18 (23)
drive truck-1 city-1-loc-13 city-1-loc-17 (16)
drive truck-1 city-1-loc-17 city-1-loc-14 (23)
drive truck-1 city-1-loc-14 city-1-loc-11 (10)
drive truck-2 city-3-loc-18 city-2-loc-4 (125)
drive truck-1 city-1-loc-11 city-2-loc-28 (102)
drive truck-1 city-2-loc-28 city-2-loc-23 (17)
drive truck-1 city-2-loc-23 city-2-loc-8 (25)
drive truck-1 city-2-loc-8 city-2-loc-16 (27)
drive truck-1 city-2-loc-16 city-2-loc-27 (17)
drive truck-1 city-2-loc-27 city-2-loc-19 (18)
drop truck-1 city-2-loc-19 package-1 capacity-1 capacity-2 (1)
drop truck-2 city-2-loc-4 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-4 city-3-loc-18 (125)
drive truck-1 city-2-loc-19 city-2-loc-5 (26)
drive truck-2 city-3-loc-18 city-3-loc-19 (17)
pick-up truck-2 city-3-loc-19 package-6 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-19 city-3-loc-17 (19)
drive truck-2 city-3-loc-17 city-3-loc-16 (27)
pick-up truck-2 city-3-loc-16 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-3-loc-16 city-3-loc-17 (27)
drive truck-2 city-3-loc-17 city-3-loc-18 (22)
drive truck-2 city-3-loc-18 city-3-loc-1 (27)
drive truck-2 city-3-loc-1 city-3-loc-14 (14)
drop truck-2 city-3-loc-14 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-3-loc-14 city-3-loc-1 (14)
drive truck-2 city-3-loc-1 city-3-loc-18 (27)
drive truck-2 city-3-loc-18 city-2-loc-4 (125)
drive truck-1 city-2-loc-5 city-2-loc-19 (26)
drive truck-1 city-2-loc-19 city-2-loc-27 (18)
drive truck-1 city-2-loc-27 city-2-loc-16 (17)
drive truck-1 city-2-loc-16 city-2-loc-8 (27)
drive truck-1 city-2-loc-8 city-2-loc-3 (22)
drive truck-1 city-2-loc-3 city-2-loc-26 (27)
pick-up truck-1 city-2-loc-26 package-9 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-26 city-2-loc-9 (12)
drop truck-1 city-2-loc-9 package-9 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-9 city-2-loc-1 (17)
drive truck-1 city-2-loc-1 city-2-loc-12 (14)
drive truck-1 city-2-loc-12 city-2-loc-4 (22)
drop truck-2 city-2-loc-4 package-6 capacity-3 capacity-4 (1)
pick-up truck-1 city-2-loc-4 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-4 city-2-loc-12 (22)
pick-up truck-2 city-2-loc-12 package-4 capacity-3 capacity-4 (1)
drive truck-1 city-2-loc-4 city-2-loc-25 (27)
drive truck-2 city-2-loc-12 city-2-loc-4 (22)
drive truck-1 city-2-loc-25 city-2-loc-16 (27)
drive truck-1 city-2-loc-16 city-2-loc-27 (17)
drop truck-1 city-2-loc-27 package-6 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-27 city-2-loc-16 (17)
drive truck-1 city-2-loc-16 city-2-loc-25 (27)
drop truck-2 city-2-loc-4 package-4 capacity-3 capacity-4 (1)
drive truck-1 city-2-loc-25 city-2-loc-4 (27)
pick-up truck-1 city-2-loc-4 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-4 city-3-loc-18 (125)
drive truck-2 city-2-loc-4 city-3-loc-18 (125)
drive truck-2 city-3-loc-18 city-3-loc-7 (22)
drive truck-1 city-3-loc-18 city-3-loc-7 (22)
drop truck-1 city-3-loc-7 package-4 capacity-1 capacity-2 (1)
pick-up truck-2 city-3-loc-7 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-7 city-3-loc-18 (22)
drive truck-1 city-3-loc-7 city-3-loc-13 (24)
drive truck-1 city-3-loc-13 city-3-loc-17 (21)
drive truck-1 city-3-loc-17 city-3-loc-16 (27)
drive truck-2 city-3-loc-18 city-2-loc-4 (125)
drive truck-1 city-3-loc-16 city-3-loc-30 (16)
drive truck-1 city-3-loc-30 city-3-loc-22 (20)
drive truck-1 city-3-loc-22 city-3-loc-20 (27)
drive truck-1 city-3-loc-20 city-3-loc-31 (18)
drive truck-2 city-2-loc-4 city-2-loc-25 (27)
drop truck-2 city-2-loc-25 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-25 city-2-loc-4 (27)
pick-up truck-2 city-2-loc-4 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-4 city-3-loc-18 (125)
drive truck-2 city-3-loc-18 city-3-loc-25 (23)
drive truck-1 city-3-loc-31 city-3-loc-20 (18)
drive truck-1 city-3-loc-20 city-3-loc-22 (27)
drive truck-1 city-3-loc-22 city-3-loc-2 (15)
drive truck-1 city-3-loc-2 city-3-loc-17 (21)
drive truck-1 city-3-loc-17 city-3-loc-18 (22)
drive truck-1 city-3-loc-18 city-3-loc-1 (27)
drive truck-2 city-3-loc-25 city-3-loc-18 (23)
drive truck-1 city-3-loc-1 city-3-loc-14 (14)
drive truck-2 city-3-loc-18 city-2-loc-4 (125)
drop truck-2 city-2-loc-4 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-4 city-3-loc-18 (125)
drive truck-1 city-3-loc-14 city-3-loc-1 (14)
drive truck-1 city-3-loc-1 city-3-loc-18 (27)
drive truck-2 city-3-loc-18 city-3-loc-25 (23)
drive truck-2 city-3-loc-25 city-3-loc-12 (27)
drive truck-2 city-3-loc-12 city-3-loc-15 (18)
drive truck-2 city-3-loc-15 city-3-loc-10 (15)
drive truck-1 city-3-loc-18 city-2-loc-4 (125)
drive truck-1 city-2-loc-4 city-2-loc-12 (22)
drive truck-2 city-3-loc-10 city-3-loc-15 (15)
drive truck-1 city-2-loc-12 city-2-loc-24 (27)
pick-up truck-2 city-3-loc-15 package-11 capacity-3 capacity-4 (1)
drive truck-1 city-2-loc-24 city-2-loc-9 (26)
drive truck-1 city-2-loc-9 city-2-loc-3 (16)
drive truck-2 city-3-loc-15 city-3-loc-6 (26)
drive truck-2 city-3-loc-6 city-3-loc-25 (22)
drive truck-2 city-3-loc-25 city-3-loc-18 (23)
drive truck-2 city-3-loc-18 city-2-loc-4 (125)
drive truck-1 city-2-loc-3 city-2-loc-8 (22)
drive truck-2 city-2-loc-4 city-2-loc-12 (22)
drive truck-2 city-2-loc-12 city-2-loc-24 (27)
drive truck-2 city-2-loc-24 city-2-loc-18 (14)
drop truck-2 city-2-loc-18 package-11 capacity-3 capacity-4 (1)
pick-up truck-1 city-2-loc-8 package-8 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-8 city-2-loc-16 (27)
drive truck-1 city-2-loc-16 city-2-loc-25 (27)
drive truck-1 city-2-loc-25 city-2-loc-21 (18)
pick-up truck-1 city-2-loc-21 package-10 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-21 city-2-loc-4 (11)
drive truck-1 city-2-loc-4 city-3-loc-18 (125)
drive truck-1 city-3-loc-18 city-3-loc-25 (23)
drive truck-1 city-3-loc-25 city-3-loc-6 (22)
drive truck-1 city-3-loc-6 city-3-loc-3 (21)
drive truck-1 city-3-loc-3 city-1-loc-26 (129)
drive truck-1 city-1-loc-26 city-1-loc-15 (26)
drop truck-1 city-1-loc-15 package-10 capacity-0 capacity-1 (1)
pick-up truck-1 city-1-loc-15 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-1-loc-15 city-1-loc-26 (26)
drive truck-1 city-1-loc-26 city-3-loc-3 (129)
drive truck-1 city-3-loc-3 city-3-loc-6 (21)
drive truck-1 city-3-loc-6 city-3-loc-25 (22)
drive truck-2 city-2-loc-18 city-2-loc-24 (14)
drive truck-2 city-2-loc-24 city-2-loc-9 (26)
drive truck-2 city-2-loc-9 city-2-loc-31 (22)
drive truck-2 city-2-loc-31 city-2-loc-7 (13)
drive truck-2 city-2-loc-7 city-2-loc-23 (24)
pick-up truck-2 city-2-loc-23 package-7 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-23 city-2-loc-28 (17)
drive truck-2 city-2-loc-28 city-1-loc-11 (102)
drive truck-2 city-1-loc-11 city-1-loc-18 (23)
drive truck-2 city-1-loc-18 city-1-loc-26 (19)
drive truck-2 city-1-loc-26 city-3-loc-3 (129)
drive truck-2 city-3-loc-3 city-3-loc-9 (11)
drop truck-2 city-3-loc-9 package-7 capacity-3 capacity-4 (1)
drive truck-1 city-3-loc-25 city-3-loc-2 (24)
drive truck-1 city-3-loc-2 city-3-loc-17 (21)
drive truck-1 city-3-loc-17 city-3-loc-13 (21)
drop truck-1 city-3-loc-13 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-13 city-3-loc-17 (21)
drive truck-1 city-3-loc-17 city-3-loc-16 (27)
drive truck-1 city-3-loc-16 city-3-loc-30 (16)
drive truck-1 city-3-loc-30 city-3-loc-32 (23)
drive truck-1 city-3-loc-32 city-3-loc-21 (27)
drop truck-1 city-3-loc-21 package-8 capacity-1 capacity-2 (1)
[t=27.0442s, 27240 KB] Plan length: 175 step(s).
[t=27.0442s, 27240 KB] Plan cost: 4894
[t=27.0442s, 27240 KB] Timestamp: 1685442109051 millisecond(s).
[t=27.0442s, 27240 KB] Expanded 14578 state(s).
[t=27.0442s, 27240 KB] Reopened 0 state(s).
[t=27.0442s, 27240 KB] Evaluated 80531 state(s).
[t=27.0442s, 27240 KB] Evaluations: 80531
[t=27.0442s, 27240 KB] Generated 168303 state(s).
[t=27.0442s, 27240 KB] Dead ends: 0 state(s).
[t=27.0442s, 27240 KB] Number of registered states: 80531
[t=27.0442s, 27240 KB] Int hash set load factor: 80531/131072 = 0.614403
[t=27.0442s, 27240 KB] Int hash set resizes: 17
[t=27.0442s, 27240 KB] Search time: 26.9306s
[t=27.0442s, 27240 KB] Total time: 27.0442s
Solution found.
Peak memory: 27240 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 4894 

Successful plans:
Value: 4894
 sas_plan 4894 

validate exit code: 0

INFO     Planner time: 29.28s
