INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.008s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 26 rules.
Computing model... [0.230s CPU, 0.230s wall-clock]
21626 relevant atoms
17646 auxiliary atoms
39272 final queue length
75742 total queue pushes
Completing instantiation... [0.810s CPU, 0.813s wall-clock]
Instantiating: [1.060s CPU, 1.060s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.024s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.027s wall-clock]
Translating task: [0.670s CPU, 0.678s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.450s CPU, 0.450s wall-clock]
Reordering and filtering variables...
16 of 16 variables necessary.
0 of 16 mutex groups necessary.
19400 of 19400 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.060s CPU, 0.067s wall-clock]
Translator variables: 16
Translator derived variables: 0
Translator facts: 1378
Translator goal facts: 12
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 19400
Translator axioms: 0
Translator task size: 114902
Translator peak memory: 109548 KB
Writing output... [0.090s CPU, 0.087s wall-clock]
Done! [2.390s CPU, 2.409s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 897s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0.00105229s, 11200 KB] reading input...
[t=0.064094s, 17500 KB] done reading input!
[t=0.0714156s, 19744 KB] Simplifying 37832 unary operators... done! [37832 unary operators]
[t=0.108126s, 23092 KB] time to simplify: 0.039869s
[t=0.111235s, 23092 KB] Initializing additive heuristic...
[t=0.111351s, 23092 KB] Initializing FF heuristic...
[t=0.111378s, 23092 KB] Building successor generator...done!
[t=0.119015s, 23844 KB] peak memory difference for successor generator creation: 752 KB
[t=0.119111s, 23844 KB] time for successor generation creation: 0.00704646s
[t=0.119136s, 23844 KB] Variables: 16
[t=0.119163s, 23844 KB] FactPairs: 1378
[t=0.119186s, 23844 KB] Bytes per state: 16
[t=0.119208s, 23844 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.119485s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 75
[t=0.120132s, 23844 KB] g=0, 1 evaluated, 0 expanded
[t=0.120159s, 23844 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 75
[t=0.12019s, 23844 KB] pruning method: none
[t=0.120213s, 23844 KB] Start Timestep: 1685430173709 millisecond(s).
[t=0.122572s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.122745s, 23844 KB] g=1, 7 evaluated, 1 expanded
[t=0.124709s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.124849s, 23844 KB] g=2, 12 evaluated, 2 expanded
[t=0.129875s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.130159s, 23844 KB] g=3, 25 evaluated, 4 expanded
[t=0.162424s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.162892s, 23844 KB] g=6, 106 evaluated, 16 expanded
[t=0.330638s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.331529s, 23844 KB] g=9, 527 evaluated, 74 expanded
[t=0.341105s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.34169s, 23844 KB] g=11, 552 evaluated, 78 expanded
[t=2.02345s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=2.02391s, 23844 KB] g=15, 4733 evaluated, 751 expanded
[t=2.04865s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=2.04885s, 23844 KB] g=18, 4796 evaluated, 761 expanded
[t=2.05385s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 52
[t=2.05452s, 23844 KB] g=19, 4810 evaluated, 763 expanded
[t=2.07588s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 51
[t=2.07683s, 23844 KB] g=22, 4865 evaluated, 771 expanded
[t=2.09896s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=2.09948s, 23844 KB] g=24, 4921 evaluated, 779 expanded
[t=2.09994s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 49
[t=2.10076s, 23844 KB] g=24, 4924 evaluated, 779 expanded
[t=4.7979s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=4.79854s, 23844 KB] g=53, 11640 evaluated, 1866 expanded
[t=4.80249s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=4.80276s, 23844 KB] g=54, 11650 evaluated, 1868 expanded
[t=4.83247s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=4.83259s, 23844 KB] g=57, 11724 evaluated, 1879 expanded
[t=4.83872s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 45
[t=4.83923s, 23844 KB] g=58, 11740 evaluated, 1881 expanded
[t=5.02071s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=5.02131s, 23844 KB] g=66, 12200 evaluated, 1932 expanded
[t=5.09853s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 43
[t=5.09874s, 23844 KB] g=67, 12395 evaluated, 1958 expanded
[t=5.13003s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=5.13092s, 23844 KB] g=69, 12477 evaluated, 1965 expanded
[t=5.1373s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=5.13817s, 23844 KB] g=70, 12495 evaluated, 1967 expanded
[t=5.14356s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=5.1438s, 23844 KB] g=71, 12509 evaluated, 1968 expanded
[t=5.14981s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=5.15017s, 23844 KB] g=72, 12525 evaluated, 1969 expanded
[t=5.9192s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=5.91937s, 23844 KB] g=83, 14461 evaluated, 2274 expanded
[t=5.92105s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=5.92156s, 23844 KB] g=84, 14466 evaluated, 2276 expanded
[t=5.92934s, 23844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=5.92989s, 23844 KB] g=85, 14486 evaluated, 2278 expanded
[t=6.3032s, 24136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=6.3035s, 24136 KB] g=91, 15415 evaluated, 2421 expanded
[t=6.35097s, 24136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=6.35193s, 24136 KB] g=92, 15538 evaluated, 2436 expanded
[t=10.2308s, 24536 KB] New best heuristic value for ff(transform=adapt_costs(one)): 31
[t=10.2317s, 24536 KB] g=98, 25519 evaluated, 3810 expanded
[t=10.2739s, 24536 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=10.274s, 24536 KB] g=101, 25627 evaluated, 3827 expanded
[t=12.6295s, 25184 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=12.6304s, 25184 KB] g=108, 31617 evaluated, 4754 expanded
[t=13.7838s, 25320 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=13.7845s, 25320 KB] g=121, 34635 evaluated, 5096 expanded
[t=13.7911s, 25320 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=13.7915s, 25320 KB] g=122, 34653 evaluated, 5098 expanded
[t=13.8047s, 25320 KB] New best heuristic value for ff(transform=adapt_costs(one)): 25
[t=13.8052s, 25320 KB] g=124, 34689 evaluated, 5102 expanded
[t=13.8141s, 25320 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=13.8146s, 25320 KB] g=125, 34713 evaluated, 5104 expanded
[t=13.8224s, 25320 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=13.8235s, 25320 KB] g=126, 34736 evaluated, 5106 expanded
[t=17.8165s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=17.8167s, 25852 KB] g=137, 45271 evaluated, 6578 expanded
[t=17.8217s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=17.8222s, 25852 KB] g=138, 45286 evaluated, 6580 expanded
[t=17.8364s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=17.8365s, 25852 KB] g=140, 45329 evaluated, 6584 expanded
[t=17.8521s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=17.8522s, 25852 KB] g=142, 45377 evaluated, 6588 expanded
[t=18.1329s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=18.134s, 25852 KB] g=146, 46240 evaluated, 6693 expanded
[t=18.1423s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=18.1431s, 25852 KB] g=147, 46267 evaluated, 6695 expanded
[t=18.1527s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=18.1531s, 25852 KB] g=148, 46296 evaluated, 6697 expanded
[t=18.1611s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=18.1618s, 25852 KB] g=149, 46320 evaluated, 6699 expanded
[t=18.1683s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=18.1688s, 25852 KB] g=150, 46340 evaluated, 6701 expanded
[t=18.2259s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=18.2263s, 25852 KB] g=153, 46506 evaluated, 6718 expanded
[t=18.2416s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=18.2419s, 25852 KB] g=155, 46550 evaluated, 6722 expanded
[t=18.25s, 25852 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=18.2509s, 25852 KB] g=156, 46574 evaluated, 6724 expanded
[t=18.2583s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=18.2594s, 25988 KB] g=157, 46596 evaluated, 6726 expanded
[t=18.2656s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=18.2666s, 25988 KB] g=158, 46615 evaluated, 6728 expanded
[t=18.276s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=18.2768s, 25988 KB] g=159, 46641 evaluated, 6730 expanded
[t=18.2854s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=18.2857s, 25988 KB] g=160, 46670 evaluated, 6732 expanded
[t=18.2896s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=18.2898s, 25988 KB] g=161, 46682 evaluated, 6734 expanded
[t=18.2979s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=18.2982s, 25988 KB] g=162, 46708 evaluated, 6736 expanded
[t=18.3029s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=18.3033s, 25988 KB] g=163, 46727 evaluated, 6738 expanded
[t=18.3071s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=18.3077s, 25988 KB] g=164, 46750 evaluated, 6740 expanded
[t=18.3112s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=18.3116s, 25988 KB] g=165, 46768 evaluated, 6742 expanded
[t=18.3133s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=18.3135s, 25988 KB] g=166, 46782 evaluated, 6743 expanded
[t=18.3174s, 25988 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=18.3181s, 25988 KB] g=167, 46802 evaluated, 6745 expanded
[t=18.3216s, 25988 KB] Solution found!
[t=18.3217s, 25988 KB] Actual search time: 18.2014s
drive truck-2 city-2-loc-23 city-2-loc-8 (21)
pick-up truck-2 city-2-loc-8 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-8 city-2-loc-13 (16)
drive truck-1 city-3-loc-24 city-3-loc-31 (17)
drop truck-2 city-2-loc-13 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-13 city-2-loc-8 (16)
pick-up truck-2 city-2-loc-8 package-2 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-8 city-2-loc-13 (16)
pick-up truck-2 city-2-loc-13 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-2-loc-13 city-2-loc-31 (23)
drive truck-2 city-2-loc-31 city-3-loc-28 (130)
drive truck-2 city-3-loc-28 city-3-loc-18 (17)
drive truck-2 city-3-loc-18 city-1-loc-15 (127)
drive truck-2 city-1-loc-15 city-1-loc-23 (21)
drive truck-2 city-1-loc-23 city-1-loc-27 (20)
drive truck-1 city-3-loc-31 city-3-loc-23 (15)
drive truck-1 city-3-loc-23 city-3-loc-13 (18)
drive truck-2 city-1-loc-27 city-1-loc-16 (21)
drop truck-2 city-1-loc-16 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-16 city-1-loc-11 (15)
pick-up truck-2 city-1-loc-11 package-12 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-11 city-1-loc-27 (21)
drop truck-2 city-1-loc-27 package-12 capacity-2 capacity-3 (1)
drive truck-1 city-3-loc-13 city-3-loc-23 (18)
drive truck-2 city-1-loc-27 city-1-loc-23 (20)
drive truck-2 city-1-loc-23 city-1-loc-15 (21)
drive truck-1 city-3-loc-23 city-3-loc-16 (22)
drive truck-1 city-3-loc-16 city-3-loc-19 (20)
drive truck-2 city-1-loc-15 city-3-loc-18 (127)
drive truck-1 city-3-loc-19 city-3-loc-18 (23)
drop truck-2 city-3-loc-18 package-4 capacity-3 capacity-4 (1)
pick-up truck-1 city-3-loc-18 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-18 city-1-loc-15 (127)
drive truck-1 city-3-loc-18 city-1-loc-15 (127)
drive truck-2 city-1-loc-15 city-2-loc-28 (106)
pick-up truck-2 city-2-loc-28 package-11 capacity-3 capacity-4 (1)
drop truck-1 city-1-loc-15 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-28 city-1-loc-15 (106)
drive truck-2 city-1-loc-15 city-1-loc-23 (21)
drive truck-1 city-1-loc-15 city-1-loc-23 (21)
drive truck-1 city-1-loc-23 city-1-loc-27 (20)
drive truck-2 city-1-loc-23 city-1-loc-6 (21)
drive truck-1 city-1-loc-27 city-1-loc-17 (21)
drive truck-1 city-1-loc-17 city-1-loc-31 (20)
drive truck-2 city-1-loc-6 city-1-loc-24 (26)
drive truck-1 city-1-loc-31 city-1-loc-19 (27)
drive truck-2 city-1-loc-24 city-1-loc-7 (19)
drive truck-2 city-1-loc-7 city-1-loc-1 (16)
pick-up truck-2 city-1-loc-1 package-8 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-1 city-1-loc-30 (27)
pick-up truck-2 city-1-loc-30 package-1 capacity-1 capacity-2 (1)
drive truck-2 city-1-loc-30 city-1-loc-32 (14)
drive truck-2 city-1-loc-32 city-1-loc-7 (26)
drive truck-2 city-1-loc-7 city-1-loc-24 (19)
drive truck-1 city-1-loc-19 city-1-loc-10 (24)
drive truck-1 city-1-loc-10 city-1-loc-1 (26)
drive truck-1 city-1-loc-1 city-1-loc-30 (27)
drive truck-1 city-1-loc-30 city-1-loc-29 (20)
drive truck-1 city-1-loc-29 city-1-loc-21 (27)
pick-up truck-1 city-1-loc-21 package-6 capacity-3 capacity-4 (1)
drive truck-1 city-1-loc-21 city-1-loc-18 (15)
drive truck-2 city-1-loc-24 city-1-loc-17 (25)
drive truck-1 city-1-loc-18 city-1-loc-11 (21)
drive truck-1 city-1-loc-11 city-1-loc-24 (27)
drive truck-1 city-1-loc-24 city-1-loc-13 (22)
drop truck-1 city-1-loc-13 package-6 capacity-3 capacity-4 (1)
drive truck-2 city-1-loc-17 city-1-loc-24 (25)
drive truck-1 city-1-loc-13 city-1-loc-24 (22)
drive truck-1 city-1-loc-24 city-1-loc-11 (27)
drive truck-1 city-1-loc-11 city-1-loc-26 (25)
drive truck-2 city-1-loc-24 city-1-loc-7 (19)
drive truck-2 city-1-loc-7 city-1-loc-8 (23)
drive truck-1 city-1-loc-26 city-1-loc-14 (21)
drive truck-2 city-1-loc-8 city-1-loc-20 (20)
drive truck-1 city-1-loc-14 city-1-loc-12 (17)
drive truck-2 city-1-loc-20 city-1-loc-9 (17)
drop truck-2 city-1-loc-9 package-1 capacity-1 capacity-2 (1)
drive truck-2 city-1-loc-9 city-1-loc-20 (17)
drive truck-2 city-1-loc-20 city-1-loc-8 (20)
drive truck-2 city-1-loc-8 city-1-loc-7 (23)
drive truck-2 city-1-loc-7 city-1-loc-16 (19)
drive truck-2 city-1-loc-16 city-1-loc-27 (21)
drive truck-2 city-1-loc-27 city-1-loc-23 (20)
drive truck-2 city-1-loc-23 city-1-loc-15 (21)
pick-up truck-2 city-1-loc-15 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-1-loc-15 city-3-loc-18 (127)
drive truck-2 city-3-loc-18 city-3-loc-28 (17)
drive truck-2 city-3-loc-28 city-2-loc-31 (130)
drive truck-2 city-2-loc-31 city-2-loc-15 (23)
drive truck-2 city-2-loc-15 city-2-loc-18 (23)
drop truck-2 city-2-loc-18 package-8 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-18 city-2-loc-15 (23)
drive truck-2 city-2-loc-15 city-2-loc-31 (23)
drive truck-2 city-2-loc-31 city-2-loc-13 (23)
drive truck-2 city-2-loc-13 city-2-loc-20 (21)
drive truck-2 city-2-loc-20 city-2-loc-17 (13)
pick-up truck-2 city-2-loc-17 package-7 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-17 city-2-loc-20 (13)
drive truck-2 city-2-loc-20 city-2-loc-13 (21)
drive truck-2 city-2-loc-13 city-2-loc-31 (23)
drive truck-2 city-2-loc-31 city-3-loc-28 (130)
drive truck-2 city-3-loc-28 city-3-loc-18 (17)
drive truck-1 city-1-loc-12 city-1-loc-14 (17)
drive truck-1 city-1-loc-14 city-1-loc-26 (21)
drive truck-1 city-1-loc-26 city-1-loc-11 (25)
drive truck-1 city-1-loc-11 city-1-loc-25 (26)
drive truck-1 city-1-loc-25 city-1-loc-23 (20)
drive truck-1 city-1-loc-23 city-1-loc-15 (21)
drive truck-1 city-1-loc-15 city-2-loc-28 (106)
drive truck-1 city-2-loc-28 city-2-loc-19 (20)
drive truck-1 city-2-loc-19 city-2-loc-21 (27)
drive truck-1 city-2-loc-21 city-2-loc-24 (23)
drive truck-1 city-2-loc-24 city-2-loc-23 (17)
drive truck-1 city-2-loc-23 city-2-loc-8 (21)
drive truck-1 city-2-loc-8 city-2-loc-29 (25)
drive truck-1 city-2-loc-29 city-2-loc-17 (21)
pick-up truck-1 city-2-loc-17 package-3 capacity-3 capacity-4 (1)
drive truck-1 city-2-loc-17 city-2-loc-2 (22)
drop truck-1 city-2-loc-2 package-3 capacity-3 capacity-4 (1)
drive truck-1 city-2-loc-2 city-2-loc-13 (27)
drive truck-1 city-2-loc-13 city-2-loc-31 (23)
drive truck-1 city-2-loc-31 city-3-loc-28 (130)
drive truck-1 city-3-loc-28 city-3-loc-19 (21)
drive truck-1 city-3-loc-19 city-3-loc-16 (20)
drive truck-1 city-3-loc-16 city-3-loc-4 (25)
drive truck-2 city-3-loc-18 city-3-loc-7 (14)
drive truck-2 city-3-loc-7 city-3-loc-20 (26)
drive truck-2 city-3-loc-20 city-3-loc-32 (13)
drop truck-2 city-3-loc-32 package-4 capacity-1 capacity-2 (1)
pick-up truck-2 city-3-loc-32 package-5 capacity-1 capacity-2 (1)
drive truck-2 city-3-loc-32 city-3-loc-1 (15)
pick-up truck-2 city-3-loc-1 package-9 capacity-0 capacity-1 (1)
drive truck-2 city-3-loc-1 city-3-loc-20 (27)
drive truck-2 city-3-loc-20 city-3-loc-7 (26)
drive truck-2 city-3-loc-7 city-3-loc-18 (14)
drive truck-1 city-3-loc-4 city-3-loc-16 (25)
drive truck-1 city-3-loc-16 city-3-loc-19 (20)
drive truck-1 city-3-loc-19 city-3-loc-14 (20)
drive truck-1 city-3-loc-14 city-3-loc-20 (19)
pick-up truck-1 city-3-loc-20 package-10 capacity-3 capacity-4 (1)
drive truck-1 city-3-loc-20 city-3-loc-7 (26)
drive truck-1 city-3-loc-7 city-3-loc-18 (14)
drop truck-1 city-3-loc-18 package-10 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-18 city-3-loc-28 (17)
drive truck-2 city-3-loc-28 city-2-loc-31 (130)
drop truck-2 city-2-loc-31 package-5 capacity-0 capacity-1 (1)
drive truck-2 city-2-loc-31 city-2-loc-4 (20)
drive truck-2 city-2-loc-4 city-2-loc-16 (17)
drop truck-2 city-2-loc-16 package-11 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-16 city-2-loc-21 (13)
drive truck-2 city-2-loc-21 city-2-loc-19 (27)
drive truck-2 city-2-loc-19 city-2-loc-28 (20)
drive truck-2 city-2-loc-28 city-1-loc-15 (106)
drive truck-2 city-1-loc-15 city-1-loc-23 (21)
drive truck-2 city-1-loc-23 city-1-loc-17 (13)
drive truck-2 city-1-loc-17 city-1-loc-24 (25)
drive truck-2 city-1-loc-24 city-1-loc-7 (19)
drop truck-2 city-1-loc-7 package-7 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-7 city-1-loc-8 (23)
drop truck-2 city-1-loc-8 package-9 capacity-3 capacity-4 (1)
[t=18.3217s, 25988 KB] Plan length: 160 step(s).
[t=18.3217s, 25988 KB] Plan cost: 4145
[t=18.3217s, 25988 KB] Timestamp: 1685430192095 millisecond(s).
[t=18.3217s, 25988 KB] Expanded 6747 state(s).
[t=18.3217s, 25988 KB] Reopened 0 state(s).
[t=18.3217s, 25988 KB] Evaluated 46818 state(s).
[t=18.3217s, 25988 KB] Evaluations: 46818
[t=18.3217s, 25988 KB] Generated 87965 state(s).
[t=18.3217s, 25988 KB] Dead ends: 0 state(s).
[t=18.3217s, 25988 KB] Number of registered states: 46818
[t=18.3217s, 25988 KB] Int hash set load factor: 46818/65536 = 0.714386
[t=18.3217s, 25988 KB] Int hash set resizes: 16
[t=18.3217s, 25988 KB] Search time: 18.2025s
[t=18.3217s, 25988 KB] Total time: 18.3217s
Solution found.
Peak memory: 25988 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 4145 

Successful plans:
Value: 4145
 sas_plan 4145 

validate exit code: 0

INFO     Planner time: 20.85s
