INFO     planner time limit: 900s
INFO     planner memory limit: 3584 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 899s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /usr/local/downward-projects/downward/experiments/.venv/bin/python3 /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 26 rules.
Computing model... [0.190s CPU, 0.192s wall-clock]
18338 relevant atoms
15310 auxiliary atoms
33648 final queue length
64160 total queue pushes
Completing instantiation... [0.620s CPU, 0.615s wall-clock]
Instantiating: [0.820s CPU, 0.824s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.021s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.023s wall-clock]
Translating task: [0.560s CPU, 0.553s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.350s CPU, 0.355s wall-clock]
Reordering and filtering variables...
14 of 14 variables necessary.
0 of 14 mutex groups necessary.
16320 of 16320 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.060s CPU, 0.054s wall-clock]
Translator variables: 14
Translator derived variables: 0
Translator facts: 1182
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 16320
Translator axioms: 0
Translator task size: 96246
Translator peak memory: 97116 KB
Writing output... [0.070s CPU, 0.072s wall-clock]
Done! [1.920s CPU, 1.914s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 897s
INFO     search memory limit: 3584 MB
INFO     search command line string: /usr/local/downward-projects/downward/experiments/src/thesis/data/thesis-thesis_exp/code-492c46a6b9a8d722366a407090da84235e2f79dc_e5e41175/builds/release/bin/downward --evaluator 'h=ff(transform=adapt_costs(one))' --search 'eager(alt([single(h), linear_weighted_type_based([h, g()], ignore_size=true)]), cost_type=one)' --internal-plan-file sas_plan < output.sas
[t=0s, 11200 KB] reading input...
[t=0.0548935s, 16552 KB] done reading input!
[t=0.0588424s, 18536 KB] Simplifying 31680 unary operators... done! [31680 unary operators]
[t=0.0872029s, 21180 KB] time to simplify: 0.0283606s
[t=0.0893335s, 21180 KB] Initializing additive heuristic...
[t=0.0900022s, 21180 KB] Initializing FF heuristic...
[t=0.0900307s, 21180 KB] Building successor generator...done!
[t=0.0964778s, 21844 KB] peak memory difference for successor generator creation: 664 KB
[t=0.0965617s, 21844 KB] time for successor generation creation: 0.00443336s
[t=0.0965876s, 21844 KB] Variables: 14
[t=0.0966157s, 21844 KB] FactPairs: 1182
[t=0.0966389s, 21844 KB] Bytes per state: 12
[t=0.0966612s, 21844 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0967303s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.0973691s, 21844 KB] g=0, 1 evaluated, 0 expanded
[t=0.0973968s, 21844 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 64
[t=0.0974277s, 21844 KB] pruning method: none
[t=0.0974517s, 21844 KB] Start Timestep: 1685453840517 millisecond(s).
[t=0.0974984s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 63
[t=0.0978859s, 21844 KB] g=1, 2 evaluated, 1 expanded
[t=0.0983918s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 62
[t=0.100292s, 21844 KB] g=1, 10 evaluated, 1 expanded
[t=0.100321s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 61
[t=0.100996s, 21844 KB] g=2, 12 evaluated, 2 expanded
[t=0.10232s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 60
[t=0.106109s, 21844 KB] g=3, 30 evaluated, 3 expanded
[t=0.138254s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 59
[t=0.140154s, 21844 KB] g=5, 151 evaluated, 24 expanded
[t=0.166165s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 58
[t=0.166784s, 21844 KB] g=11, 242 evaluated, 41 expanded
[t=0.170097s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 57
[t=0.170222s, 21844 KB] g=12, 253 evaluated, 43 expanded
[t=0.174033s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 56
[t=0.175478s, 21844 KB] g=13, 270 evaluated, 45 expanded
[t=0.175507s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 55
[t=0.177956s, 21844 KB] g=14, 278 evaluated, 46 expanded
[t=0.241856s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 54
[t=0.245625s, 21844 KB] g=17, 503 evaluated, 74 expanded
[t=0.301775s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 53
[t=0.30411s, 21844 KB] g=20, 698 evaluated, 98 expanded
[t=0.369644s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 50
[t=0.370311s, 21844 KB] g=23, 919 evaluated, 128 expanded
[t=0.629499s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 48
[t=0.63221s, 21844 KB] g=38, 1818 evaluated, 291 expanded
[t=1.18916s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 47
[t=1.19192s, 21844 KB] g=32, 3739 evaluated, 650 expanded
[t=1.1971s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 46
[t=1.19754s, 21844 KB] g=33, 3758 evaluated, 652 expanded
[t=1.38866s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 44
[t=1.3906s, 21844 KB] g=43, 4428 evaluated, 756 expanded
[t=1.43254s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 42
[t=1.43415s, 21844 KB] g=46, 4576 evaluated, 788 expanded
[t=1.9683s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 41
[t=1.96991s, 21844 KB] g=52, 6427 evaluated, 1132 expanded
[t=3.53083s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 40
[t=3.53269s, 21844 KB] g=63, 11898 evaluated, 2035 expanded
[t=3.71073s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 39
[t=3.71347s, 21844 KB] g=63, 12540 evaluated, 2146 expanded
[t=3.71467s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 38
[t=3.7166s, 21844 KB] g=64, 12550 evaluated, 2148 expanded
[t=3.73059s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 37
[t=3.73259s, 21844 KB] g=66, 12606 evaluated, 2157 expanded
[t=3.91043s, 21844 KB] New best heuristic value for ff(transform=adapt_costs(one)): 36
[t=3.91409s, 21844 KB] g=72, 13248 evaluated, 2259 expanded
[t=4.98992s, 22280 KB] New best heuristic value for ff(transform=adapt_costs(one)): 35
[t=4.9935s, 22280 KB] g=74, 17037 evaluated, 2916 expanded
[t=4.99378s, 22280 KB] New best heuristic value for ff(transform=adapt_costs(one)): 34
[t=4.99562s, 22280 KB] g=75, 17044 evaluated, 2917 expanded
[t=5.56142s, 22280 KB] New best heuristic value for ff(transform=adapt_costs(one)): 33
[t=5.5634s, 22280 KB] g=80, 19010 evaluated, 3344 expanded
[t=5.56535s, 22280 KB] New best heuristic value for ff(transform=adapt_costs(one)): 32
[t=5.56642s, 22280 KB] g=81, 19020 evaluated, 3346 expanded
[t=7.13509s, 22544 KB] New best heuristic value for ff(transform=adapt_costs(one)): 30
[t=7.13578s, 22544 KB] g=85, 24514 evaluated, 4353 expanded
[t=8.09457s, 22680 KB] New best heuristic value for ff(transform=adapt_costs(one)): 29
[t=8.09864s, 22680 KB] g=90, 27934 evaluated, 4859 expanded
[t=8.10251s, 22680 KB] New best heuristic value for ff(transform=adapt_costs(one)): 28
[t=8.10313s, 22680 KB] g=91, 27949 evaluated, 4861 expanded
[t=8.25835s, 22680 KB] New best heuristic value for ff(transform=adapt_costs(one)): 27
[t=8.25918s, 22680 KB] g=92, 28496 evaluated, 4961 expanded
[t=9.7412s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 26
[t=9.74138s, 23332 KB] g=109, 33626 evaluated, 5966 expanded
[t=9.76511s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=9.76856s, 23332 KB] g=112, 33718 evaluated, 5976 expanded
[t=9.881s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=9.88204s, 23332 KB] g=115, 34096 evaluated, 6034 expanded
[t=9.88493s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=9.88707s, 23332 KB] g=116, 34113 evaluated, 6035 expanded
[t=9.88884s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=9.89122s, 23332 KB] g=117, 34127 evaluated, 6036 expanded
[t=9.89279s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=9.89665s, 23332 KB] g=118, 34146 evaluated, 6038 expanded
[t=9.90072s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=9.90324s, 23332 KB] g=119, 34168 evaluated, 6040 expanded
[t=9.90866s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=9.91273s, 23332 KB] g=121, 34200 evaluated, 6044 expanded
[t=9.91276s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=9.91633s, 23332 KB] g=122, 34212 evaluated, 6045 expanded
[t=9.92053s, 23332 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=9.92082s, 23332 KB] g=123, 34227 evaluated, 6047 expanded
[t=14.9512s, 24136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 14
[t=14.955s, 24136 KB] g=132, 51846 evaluated, 9396 expanded
[t=14.9551s, 24136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=14.9579s, 24136 KB] g=133, 51856 evaluated, 9397 expanded
[t=15.1829s, 24136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=15.1843s, 24136 KB] g=137, 52657 evaluated, 9545 expanded
[t=15.1869s, 24136 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=15.1898s, 24136 KB] g=138, 52676 evaluated, 9547 expanded
[t=15.7985s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=15.802s, 24272 KB] g=143, 54814 evaluated, 10023 expanded
[t=15.8024s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=15.8039s, 24272 KB] g=144, 54821 evaluated, 10025 expanded
[t=15.8064s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=15.8084s, 24272 KB] g=145, 54838 evaluated, 10027 expanded
[t=15.8103s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=15.8113s, 24272 KB] g=146, 54850 evaluated, 10029 expanded
[t=15.8143s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=15.8154s, 24272 KB] g=147, 54866 evaluated, 10031 expanded
[t=15.8182s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=15.8201s, 24272 KB] g=148, 54885 evaluated, 10033 expanded
[t=15.8222s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=15.8236s, 24272 KB] g=149, 54900 evaluated, 10035 expanded
[t=15.8261s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=15.8268s, 24272 KB] g=150, 54916 evaluated, 10037 expanded
[t=15.8269s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=15.8301s, 24272 KB] g=151, 54931 evaluated, 10039 expanded
[t=15.8301s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=15.8316s, 24272 KB] g=152, 54945 evaluated, 10041 expanded
[t=15.834s, 24272 KB] New best heuristic value for ff(transform=adapt_costs(one)): 0
[t=15.8343s, 24272 KB] g=153, 54963 evaluated, 10043 expanded
[t=15.8344s, 24272 KB] Solution found!
[t=15.8344s, 24272 KB] Actual search time: 15.7369s
drive truck-1 city-3-loc-5 city-3-loc-18 (24)
drive truck-2 city-1-loc-17 city-1-loc-1 (19)
drive truck-1 city-3-loc-18 city-3-loc-9 (16)
drive truck-1 city-3-loc-9 city-3-loc-12 (22)
drive truck-1 city-3-loc-12 city-3-loc-3 (25)
drive truck-2 city-1-loc-1 city-1-loc-18 (21)
drive truck-2 city-1-loc-18 city-1-loc-14 (20)
drive truck-2 city-1-loc-14 city-1-loc-16 (25)
pick-up truck-2 city-1-loc-16 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-1-loc-16 city-1-loc-19 (13)
pick-up truck-2 city-1-loc-19 package-7 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-19 city-1-loc-10 (27)
drive truck-2 city-1-loc-10 city-1-loc-14 (22)
drive truck-2 city-1-loc-14 city-1-loc-18 (20)
drive truck-1 city-3-loc-3 city-3-loc-12 (25)
drive truck-1 city-3-loc-12 city-3-loc-7 (25)
drive truck-1 city-3-loc-7 city-3-loc-19 (12)
drive truck-2 city-1-loc-18 city-1-loc-1 (21)
drop truck-2 city-1-loc-1 package-7 capacity-2 capacity-3 (1)
drop truck-2 city-1-loc-1 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-1-loc-1 city-1-loc-21 (25)
drive truck-2 city-1-loc-21 city-1-loc-9 (14)
drive truck-2 city-1-loc-9 city-1-loc-3 (21)
drive truck-2 city-1-loc-3 city-1-loc-12 (24)
drive truck-2 city-1-loc-12 city-1-loc-28 (23)
drive truck-2 city-1-loc-28 city-1-loc-13 (14)
drive truck-1 city-3-loc-19 city-3-loc-11 (20)
drive truck-1 city-3-loc-11 city-3-loc-28 (26)
pick-up truck-1 city-3-loc-28 package-5 capacity-1 capacity-2 (1)
drive truck-1 city-3-loc-28 city-3-loc-11 (26)
drive truck-1 city-3-loc-11 city-3-loc-19 (20)
drop truck-1 city-3-loc-19 package-5 capacity-1 capacity-2 (1)
drive truck-2 city-1-loc-13 city-1-loc-25 (23)
drive truck-2 city-1-loc-25 city-1-loc-10 (24)
drive truck-2 city-1-loc-10 city-1-loc-14 (22)
drive truck-2 city-1-loc-14 city-1-loc-31 (20)
drive truck-2 city-1-loc-31 city-1-loc-7 (16)
drive truck-2 city-1-loc-7 city-1-loc-6 (14)
drive truck-2 city-1-loc-6 city-1-loc-11 (20)
drive truck-1 city-3-loc-19 city-3-loc-9 (26)
drive truck-1 city-3-loc-9 city-3-loc-12 (22)
drive truck-1 city-3-loc-12 city-3-loc-3 (25)
drive truck-1 city-3-loc-3 city-3-loc-15 (17)
pick-up truck-1 city-3-loc-15 package-10 capacity-1 capacity-2 (1)
drive truck-1 city-3-loc-15 city-3-loc-3 (17)
drive truck-1 city-3-loc-3 city-3-loc-1 (20)
pick-up truck-1 city-3-loc-1 package-8 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-1 city-3-loc-3 (20)
drive truck-1 city-3-loc-3 city-3-loc-12 (25)
drive truck-1 city-3-loc-12 city-3-loc-9 (22)
drive truck-2 city-1-loc-11 city-1-loc-20 (18)
drive truck-2 city-1-loc-20 city-1-loc-18 (27)
drive truck-2 city-1-loc-18 city-1-loc-14 (20)
drive truck-2 city-1-loc-14 city-1-loc-10 (22)
drive truck-1 city-3-loc-9 city-3-loc-19 (26)
drive truck-1 city-3-loc-19 city-3-loc-14 (11)
drive truck-1 city-3-loc-14 city-2-loc-28 (148)
drive truck-1 city-2-loc-28 city-2-loc-2 (16)
drive truck-1 city-2-loc-2 city-2-loc-8 (26)
drive truck-1 city-2-loc-8 city-2-loc-9 (23)
drop truck-1 city-2-loc-9 package-8 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-9 city-2-loc-17 (11)
pick-up truck-1 city-2-loc-17 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-17 city-2-loc-25 (14)
drive truck-2 city-1-loc-10 city-1-loc-19 (27)
drive truck-1 city-2-loc-25 city-2-loc-8 (27)
drive truck-1 city-2-loc-8 city-2-loc-2 (26)
drive truck-1 city-2-loc-2 city-2-loc-28 (16)
drop truck-1 city-2-loc-28 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-28 city-2-loc-6 (16)
drop truck-1 city-2-loc-6 package-10 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-6 city-2-loc-28 (16)
pick-up truck-1 city-2-loc-28 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-28 city-2-loc-2 (16)
drive truck-1 city-2-loc-2 city-2-loc-29 (25)
drive truck-1 city-2-loc-29 city-2-loc-5 (23)
pick-up truck-1 city-2-loc-5 package-4 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-5 city-2-loc-29 (23)
drive truck-1 city-2-loc-29 city-2-loc-2 (25)
drive truck-2 city-1-loc-19 city-1-loc-16 (13)
drive truck-1 city-2-loc-2 city-2-loc-28 (16)
drive truck-1 city-2-loc-28 city-3-loc-14 (148)
drive truck-1 city-3-loc-14 city-3-loc-19 (11)
drive truck-1 city-3-loc-19 city-3-loc-9 (26)
drive truck-1 city-3-loc-9 city-3-loc-12 (22)
drive truck-1 city-3-loc-12 city-3-loc-26 (18)
drop truck-1 city-3-loc-26 package-2 capacity-0 capacity-1 (1)
drive truck-1 city-3-loc-26 city-3-loc-12 (18)
drive truck-1 city-3-loc-12 city-3-loc-9 (22)
drive truck-2 city-1-loc-16 city-1-loc-14 (25)
drive truck-2 city-1-loc-14 city-1-loc-18 (20)
drive truck-2 city-1-loc-18 city-1-loc-17 (12)
drive truck-2 city-1-loc-17 city-1-loc-9 (26)
drive truck-2 city-1-loc-9 city-1-loc-27 (17)
drive truck-2 city-1-loc-27 city-1-loc-15 (16)
drive truck-2 city-1-loc-15 city-1-loc-32 (16)
drive truck-2 city-1-loc-32 city-3-loc-32 (146)
drive truck-1 city-3-loc-9 city-3-loc-19 (26)
drive truck-2 city-3-loc-32 city-3-loc-1 (17)
drive truck-2 city-3-loc-1 city-3-loc-3 (20)
drive truck-2 city-3-loc-3 city-3-loc-12 (25)
drive truck-2 city-3-loc-12 city-3-loc-7 (25)
drive truck-2 city-3-loc-7 city-3-loc-6 (19)
pick-up truck-2 city-3-loc-6 package-9 capacity-3 capacity-4 (1)
drive truck-2 city-3-loc-6 city-3-loc-14 (22)
drive truck-2 city-3-loc-14 city-2-loc-28 (148)
drive truck-2 city-2-loc-28 city-2-loc-18 (16)
drop truck-2 city-2-loc-18 package-9 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-18 city-2-loc-21 (27)
drive truck-2 city-2-loc-21 city-2-loc-1 (19)
pick-up truck-2 city-2-loc-1 package-6 capacity-3 capacity-4 (1)
drive truck-2 city-2-loc-1 city-2-loc-28 (26)
drive truck-2 city-2-loc-28 city-2-loc-2 (16)
drive truck-2 city-2-loc-2 city-2-loc-8 (26)
drive truck-2 city-2-loc-8 city-2-loc-25 (27)
drive truck-2 city-2-loc-25 city-2-loc-11 (20)
drive truck-1 city-3-loc-19 city-3-loc-9 (26)
drive truck-2 city-2-loc-11 city-1-loc-2 (105)
drive truck-2 city-1-loc-2 city-1-loc-26 (18)
drop truck-2 city-1-loc-26 package-6 capacity-3 capacity-4 (1)
drive truck-2 city-1-loc-26 city-1-loc-3 (12)
drive truck-1 city-3-loc-9 city-3-loc-21 (20)
drive truck-1 city-3-loc-21 city-3-loc-32 (26)
drive truck-1 city-3-loc-32 city-1-loc-32 (146)
drive truck-1 city-1-loc-32 city-1-loc-22 (20)
drop truck-1 city-1-loc-22 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-22 city-1-loc-21 (24)
drive truck-1 city-1-loc-21 city-1-loc-1 (25)
pick-up truck-1 city-1-loc-1 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-1 city-1-loc-21 (25)
drive truck-1 city-1-loc-21 city-1-loc-22 (24)
drive truck-1 city-1-loc-22 city-1-loc-32 (20)
drive truck-1 city-1-loc-32 city-3-loc-32 (146)
drive truck-1 city-3-loc-32 city-3-loc-21 (26)
drop truck-1 city-3-loc-21 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-3-loc-21 city-3-loc-27 (13)
drive truck-1 city-3-loc-27 city-3-loc-12 (19)
drive truck-1 city-3-loc-12 city-3-loc-26 (18)
drive truck-1 city-3-loc-26 city-3-loc-29 (13)
pick-up truck-1 city-3-loc-29 package-3 capacity-1 capacity-2 (1)
drive truck-1 city-3-loc-29 city-3-loc-26 (13)
drive truck-1 city-3-loc-26 city-3-loc-12 (18)
drive truck-1 city-3-loc-12 city-3-loc-27 (19)
drive truck-1 city-3-loc-27 city-3-loc-21 (13)
drive truck-1 city-3-loc-21 city-3-loc-32 (26)
drive truck-1 city-3-loc-32 city-1-loc-32 (146)
drive truck-1 city-1-loc-32 city-1-loc-22 (20)
drive truck-1 city-1-loc-22 city-1-loc-21 (24)
drive truck-1 city-1-loc-21 city-1-loc-23 (14)
drop truck-1 city-1-loc-23 package-3 capacity-1 capacity-2 (1)
[t=15.8344s, 24272 KB] Plan length: 150 step(s).
[t=15.8344s, 24272 KB] Plan cost: 3579
[t=15.8344s, 24272 KB] Timestamp: 1685453856269 millisecond(s).
[t=15.8344s, 24272 KB] Expanded 10044 state(s).
[t=15.8344s, 24272 KB] Reopened 0 state(s).
[t=15.8344s, 24272 KB] Evaluated 54963 state(s).
[t=15.8344s, 24272 KB] Evaluations: 54963
[t=15.8344s, 24272 KB] Generated 117987 state(s).
[t=15.8344s, 24272 KB] Dead ends: 0 state(s).
[t=15.8344s, 24272 KB] Number of registered states: 54963
[t=15.8344s, 24272 KB] Int hash set load factor: 54963/65536 = 0.838669
[t=15.8344s, 24272 KB] Int hash set resizes: 16
[t=15.8344s, 24272 KB] Search time: 15.7378s
[t=15.8344s, 24272 KB] Total time: 15.8344s
Solution found.
Peak memory: 24272 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 3579 

Successful plans:
Value: 3579
 sas_plan 3579 

validate exit code: 0

INFO     Planner time: 17.87s
